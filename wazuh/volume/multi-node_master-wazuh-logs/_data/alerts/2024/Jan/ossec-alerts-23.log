** Alert 1706006472.0: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:12 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure permissions on /etc/passwd are configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19196,"title":"Ensure permissions on /etc/passwd are configured.","description":"The /etc/passwd file contains user account information that is used by many system utilities and therefore must be readable for these utilities to operate.","rationale":"It is critical to ensure that the /etc/passwd file is protected from unauthorized write access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.","remediation":"Run the following commands to remove excess permissions, set owner, and set group on /etc/passwd: # chmod u-x,go-wx /etc/passwd # chown root:root /etc/passwd.","compliance":{"cis":"6.1.1","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1003,T1003.008,T1222,T1222.002","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:stat -Lc \"%n %a %u %U %g %G\" /etc/passwd -> r:0 root 0 root && r:644|640|604|600|400|500"],"condition":"all","command":"stat -Lc \"%n %a %u %U %g %G\" /etc/passwd","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19196
sca.check.title: Ensure permissions on /etc/passwd are configured.
sca.check.description: The /etc/passwd file contains user account information that is used by many system utilities and therefore must be readable for these utilities to operate.
sca.check.rationale: It is critical to ensure that the /etc/passwd file is protected from unauthorized write access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.
sca.check.remediation: Run the following commands to remove excess permissions, set owner, and set group on /etc/passwd: # chmod u-x,go-wx /etc/passwd # chown root:root /etc/passwd.
sca.check.compliance.cis: 6.1.1
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1003,T1003.008,T1222,T1222.002
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["stat -Lc \"%n %a %u %U %g %G\" /etc/passwd"]
sca.check.result: passed

** Alert 1706006476.3236: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19004 (level 7) -> 'SCA summary: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Score less than 50% (42)'
{"type":"summary","scan_id":1725662517,"name":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","file":"cis_ubuntu20-04.yml","description":"This document provides prescriptive guidance for establishing a secure configuration posture for Ubuntu Linux 20.04 LTS.","references":"https://www.cisecurity.org/cis-benchmarks/","passed":56,"failed":75,"invalid":79,"total_checks":210,"score":42.748088836669922,"start_time":1706006459,"end_time":1706006473,"hash":"96dd8745a44e276e6080712dc520c974a73ab16e9f6703e06e77ef7f297d2762","hash_file":"37d4bc67c13eaf70f4d0650eafa236d5d56c2b82b6957ac2e3bb1f41ee167682"}
sca.type: summary
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.description: This document provides prescriptive guidance for establishing a secure configuration posture for Ubuntu Linux 20.04 LTS.
sca.policy_id: cis_ubuntu20-04
sca.passed: 56
sca.failed: 75
sca.invalid: 79
sca.total_checks: 210
sca.score: 42
sca.file: cis_ubuntu20-04.yml

** Alert 1706006476.4484: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure /tmp is a separate partition.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19000,"title":"Ensure /tmp is a separate partition.","description":"The /tmp directory is a world-writable directory used for temporary storage by all users and some applications.","rationale":"Making /tmp its own file system allows an administrator to set additional mount options such as the noexec option on the mount, making /tmp useless for an attacker to install executable code. It would also prevent an attacker from establishing a hard link to a system setuid program and wait for it to be updated. Once the program was updated, the hard link would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw. This can be accomplished by either mounting tmpfs to /tmp, or creating a separate partition for /tmp.","remediation":"For specific configuration requirements of the /tmp mount for your environment, modify /etc/fstab or tmp.mount unit file: Using /etc/fstab: Configure /etc/fstab as appropriate: Example: tmpfs /tmp tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0 -OR- Using a tmp.mount unit file: Run the following command to create the tmp.mount file is the correct location: # cp -v /usr/share/systemd/tmp.mount /etc/systemd/system/ Edit /etc/systemd/system/tmp.mount to configure the /tmp mount: Example: # SPDX-License-Identifier: LGPL-2.1+ # # This file is part of systemd. # # systemd is free software; you can redistribute it and/or modify it # under the terms of the GNU Lesser General Public License as published by # the Free Software Foundation; either version 2.1 of the License, or # (at your option) any later version. [Unit] Description=Temporary Directory (/tmp) Documentation=https://systemd.io/TEMPORARY_DIRECTORIES Documentation=man:file-hierarchy(7) Documentation=https://www.freedesktop.org/wiki/Software/systemd/APIFileSystem s ConditionPathIsSymbolicLink=!/tmp DefaultDependencies=no Conflicts=umount.target Before=local-fs.target umount.target After=swap.target [Mount] What=tmpfs Where=/tmp Type=tmpfs Options=mode=1777,strictatime,nosuid,nodev,noexec [Install] WantedBy=local-fs.target Run the following command to reload the systemd daemon with the updated tmp.mount unit file: # systemctl daemon-reload Run the following command to enable and start tmp.mount # systemctl --now enable tmp.mount Note: A reboot may be required to transition to /tmp mounted to tmpfs.","compliance":{"cis":"1.1.2.1","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1499,T1499.001","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:findmnt -kn /tmp -> r:\\s*/tmp\\s"],"condition":"all","references":"https://www.freedesktop.org/wiki/Software/systemd/APIFileSystems/,https://www.freedesktop.org/software/systemd/man/systemd-fstab-generator.html","command":"findmnt -kn /tmp","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19000
sca.check.title: Ensure /tmp is a separate partition.
sca.check.description: The /tmp directory is a world-writable directory used for temporary storage by all users and some applications.
sca.check.rationale: Making /tmp its own file system allows an administrator to set additional mount options such as the noexec option on the mount, making /tmp useless for an attacker to install executable code. It would also prevent an attacker from establishing a hard link to a system setuid program and wait for it to be updated. Once the program was updated, the hard link would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw. This can be accomplished by either mounting tmpfs to /tmp, or creating a separate partition for /tmp.
sca.check.remediation: For specific configuration requirements of the /tmp mount for your environment, modify /etc/fstab or tmp.mount unit file: Using /etc/fstab: Configure /etc/fstab as appropriate: Example: tmpfs /tmp tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0 -OR- Using a tmp.mount unit file: Run the following command to create the tmp.mount file is the correct location: # cp -v /usr/share/systemd/tmp.mount /etc/systemd/system/ Edit /etc/systemd/system/tmp.mount to configure the /tmp mount: Example: # SPDX-License-Identifier: LGPL-2.1+ # # This file is part of systemd. # # systemd is free software; you can redistribute it and/or modify it # under the terms of the GNU Lesser General Public License as published by # the Free Software Foundation; either version 2.1 of the License, or # (at your option) any later version. [Unit] Description=Temporary Directory (/tmp) Documentation=https://systemd.io/TEMPORARY_DIRECTORIES Documentation=man:file-hierarchy(7) Documentation=https://www.freedesktop.org/wiki/Software/systemd/APIFileSystem s ConditionPathIsSymbolicLink=!/tmp DefaultDependencies=no Conflicts=umount.target Before=local-fs.target umount.target After=swap.target [Mount] What=tmpfs Where=/tmp Type=tmpfs Options=mode=1777,strictatime,nosuid,nodev,noexec [Install] WantedBy=local-fs.target Run the following command to reload the systemd daemon with the updated tmp.mount unit file: # systemctl daemon-reload Run the following command to enable and start tmp.mount # systemctl --now enable tmp.mount Note: A reboot may be required to transition to /tmp mounted to tmpfs.
sca.check.compliance.cis: 1.1.2.1
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1499,T1499.001
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.references: https://www.freedesktop.org/wiki/Software/systemd/APIFileSystems/,https://www.freedesktop.org/software/systemd/man/systemd-fstab-generator.html
sca.check.command: ["findmnt -kn /tmp"]
sca.check.result: failed

** Alert 1706006476.11470: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure nodev option set on /tmp partition.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19001,"title":"Ensure nodev option set on /tmp partition.","description":"The nodev mount option specifies that the filesystem cannot contain special devices.","rationale":"Since the /tmp filesystem is not intended to support devices, set this option to ensure that users cannot create block or character special devices in /tmp.","remediation":"Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /tmp partition. Example: <device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /tmp with the configured options: # mount -o remount /tmp.","compliance":{"cis":"1.1.2.2","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1200","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:findmnt -kn /tmp -> r:\\s*/tmp\\s && r:nodev"],"condition":"all","command":"findmnt -kn /tmp","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19001
sca.check.title: Ensure nodev option set on /tmp partition.
sca.check.description: The nodev mount option specifies that the filesystem cannot contain special devices.
sca.check.rationale: Since the /tmp filesystem is not intended to support devices, set this option to ensure that users cannot create block or character special devices in /tmp.
sca.check.remediation: Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /tmp partition. Example: <device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /tmp with the configured options: # mount -o remount /tmp.
sca.check.compliance.cis: 1.1.2.2
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1200
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["findmnt -kn /tmp"]
sca.check.result: failed

** Alert 1706006476.14503: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure noexec option set on /tmp partition.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19002,"title":"Ensure noexec option set on /tmp partition.","description":"The noexec mount option specifies that the filesystem cannot contain executable binaries.","rationale":"Since the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from /tmp.","remediation":"Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /tmp partition. Example: <device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /tmp with the configured options: # mount -o remount /tmp.","compliance":{"cis":"1.1.2.3","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022,M1038","mitre_tactics":"TA0005","mitre_techniques":"T1204,T1204.002","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:findmnt -kn /tmp -> r:\\s*/tmp\\s && r:noexec"],"condition":"all","command":"findmnt -kn /tmp","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19002
sca.check.title: Ensure noexec option set on /tmp partition.
sca.check.description: The noexec mount option specifies that the filesystem cannot contain executable binaries.
sca.check.rationale: Since the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from /tmp.
sca.check.remediation: Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /tmp partition. Example: <device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /tmp with the configured options: # mount -o remount /tmp.
sca.check.compliance.cis: 1.1.2.3
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022,M1038
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1204,T1204.002
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["findmnt -kn /tmp"]
sca.check.result: failed

** Alert 1706006476.17570: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure nosuid option set on /tmp partition.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19003,"title":"Ensure nosuid option set on /tmp partition.","description":"The nosuid mount option specifies that the filesystem cannot contain setuid files.","rationale":"Since the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create setuid files in /tmp.","remediation":"Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /tmp partition. Example: <device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /tmp with the configured options: # mount -o remount /tmp.","compliance":{"cis":"1.1.2.4","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022,M1038","mitre_tactics":"TA0005","mitre_techniques":"T1548,T1548.001","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:findmnt -kn /tmp -> r:\\s*/tmp\\s && r:nosuid"],"condition":"all","command":"findmnt -kn /tmp","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19003
sca.check.title: Ensure nosuid option set on /tmp partition.
sca.check.description: The nosuid mount option specifies that the filesystem cannot contain setuid files.
sca.check.rationale: Since the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create setuid files in /tmp.
sca.check.remediation: Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /tmp partition. Example: <device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /tmp with the configured options: # mount -o remount /tmp.
sca.check.compliance.cis: 1.1.2.4
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022,M1038
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1548,T1548.001
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["findmnt -kn /tmp"]
sca.check.result: failed

** Alert 1706006476.20611: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure separate partition exists for /var.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19004,"title":"Ensure separate partition exists for /var.","description":"The /var directory is used by daemons and other system services to temporarily store dynamic data. Some directories created by these processes may be world-writable.","rationale":"The reasoning for mounting /var on a separate partition is as follow. Protection from resource exhaustion The default installation only creates a single / partition. Since the /var directory may contain world-writable files and directories, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to /var and cause unintended behavior across the system as the disk is full. See man auditd.conf for details. Fine grained control over the mount Configuring /var as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev. These options limits an attackers ability to create exploits on the system. Other options allow for specific behaviour. See man mount for exact details regarding filesystem-independent and filesystem-specific options. Protection from exploitation An example of exploiting /var may be an attacker establishing a hard-link to a system setuid program and wait for it to be updated. Once the program was updated, the hard-link would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.","remediation":"For new installations, during installation create a custom partition setup and specify a separate partition for /var. For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.","compliance":{"cis":"1.1.3.1","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_tactics":"TA0006","mitre_techniques":"T1499,T1499.001","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:findmnt -kn /var -> r:\\s*/var\\s"],"condition":"all","references":"http://tldp.org/HOWTO/LVM-HOWTO/","command":"findmnt -kn /var","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19004
sca.check.title: Ensure separate partition exists for /var.
sca.check.description: The /var directory is used by daemons and other system services to temporarily store dynamic data. Some directories created by these processes may be world-writable.
sca.check.rationale: The reasoning for mounting /var on a separate partition is as follow. Protection from resource exhaustion The default installation only creates a single / partition. Since the /var directory may contain world-writable files and directories, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to /var and cause unintended behavior across the system as the disk is full. See man auditd.conf for details. Fine grained control over the mount Configuring /var as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev. These options limits an attackers ability to create exploits on the system. Other options allow for specific behaviour. See man mount for exact details regarding filesystem-independent and filesystem-specific options. Protection from exploitation An example of exploiting /var may be an attacker establishing a hard-link to a system setuid program and wait for it to be updated. Once the program was updated, the hard-link would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.
sca.check.remediation: For new installations, during installation create a custom partition setup and specify a separate partition for /var. For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.
sca.check.compliance.cis: 1.1.3.1
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_tactics: TA0006
sca.check.compliance.mitre_techniques: T1499,T1499.001
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.references: http://tldp.org/HOWTO/LVM-HOWTO/
sca.check.command: ["findmnt -kn /var"]
sca.check.result: failed

** Alert 1706006476.26098: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure nodev option set on /var partition.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19005,"title":"Ensure nodev option set on /var partition.","description":"The nodev mount option specifies that the filesystem cannot contain special devices.","rationale":"Since the /var filesystem is not intended to support devices, set this option to ensure that users cannot create block or character special devices in /var.","remediation":"IF the /var partition exists, edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var partition. Example: <device> /var <fstype> defaults,rw,nosuid,nodev,relatime 0 0 Run the following command to remount /var with the configured options: # mount -o remount /var.","compliance":{"cis":"1.1.3.2","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1038","mitre_tactics":"TA0005","mitre_techniques":"T1200","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:findmnt -kn /var -> r:\\s*/var\\s && r:nodev"],"condition":"all","command":"findmnt -kn /var","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19005
sca.check.title: Ensure nodev option set on /var partition.
sca.check.description: The nodev mount option specifies that the filesystem cannot contain special devices.
sca.check.rationale: Since the /var filesystem is not intended to support devices, set this option to ensure that users cannot create block or character special devices in /var.
sca.check.remediation: IF the /var partition exists, edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var partition. Example: <device> /var <fstype> defaults,rw,nosuid,nodev,relatime 0 0 Run the following command to remount /var with the configured options: # mount -o remount /var.
sca.check.compliance.cis: 1.1.3.2
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1038
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1200
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["findmnt -kn /var"]
sca.check.result: failed

** Alert 1706006476.29177: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure nosuid option set on /var partition.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19006,"title":"Ensure nosuid option set on /var partition.","description":"The nosuid mount option specifies that the filesystem cannot contain setuid files.","rationale":"Since the /var filesystem is only intended for variable files such as logs, set this option to ensure that users cannot create setuid files in /var.","remediation":"IF the /var partition exists, edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var partition. Example: <device> /var <fstype> defaults,rw,nosuid,nodev,relatime 0 0 Run the following command to remount /var with the configured options: # mount -o remount /var.","compliance":{"cis":"1.1.3.3","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1038","mitre_tactics":"TA0005","mitre_techniques":"T1548,T1548.001","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:findmnt -kn /var -> r:\\s*/var\\s && r:nosuid"],"condition":"all","command":"findmnt -kn /var","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19006
sca.check.title: Ensure nosuid option set on /var partition.
sca.check.description: The nosuid mount option specifies that the filesystem cannot contain setuid files.
sca.check.rationale: Since the /var filesystem is only intended for variable files such as logs, set this option to ensure that users cannot create setuid files in /var.
sca.check.remediation: IF the /var partition exists, edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var partition. Example: <device> /var <fstype> defaults,rw,nosuid,nodev,relatime 0 0 Run the following command to remount /var with the configured options: # mount -o remount /var.
sca.check.compliance.cis: 1.1.3.3
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1038
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1548,T1548.001
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["findmnt -kn /var"]
sca.check.result: failed

** Alert 1706006476.32262: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure separate partition exists for /var/tmp.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19007,"title":"Ensure separate partition exists for /var/tmp.","description":"The /var/tmp directory is a world-writable directory used for temporary storage by all users and some applications. Temporary files residing in /var/tmp are to be preserved between reboots.","rationale":"The reasoning for mounting /var/tmp on a separate partition is as follows. Protection from resource exhaustion The default installation only creates a single / partition. Since the /var/tmp directory may contain world-writable files and directories, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to /var/tmp and cause the potential disruption to daemons as the disk is full. Fine grained control over the mount Configuring /var/tmp as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev. These options limits an attackers ability to create exploits on the system. Other options allow for specific behavior. See man mount for exact details regarding filesystem-independent and filesystem-specific options. Protection from exploitation An example of exploiting /var/tmp may be an attacker establishing a hard-link to a system setuid program and wait for it to be updated. Once the program was updated, the hard-link would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.","remediation":"For new installations, during installation create a custom partition setup and specify a separate partition for /var/tmp. For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.","compliance":{"cis":"1.1.4.1","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1499,T1499.001","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:findmnt -kn /var/tmp -> r:\\s*/var/tmp\\s"],"condition":"all","references":"http://tldp.org/HOWTO/LVM-HOWTO/","command":"findmnt -kn /var/tmp","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19007
sca.check.title: Ensure separate partition exists for /var/tmp.
sca.check.description: The /var/tmp directory is a world-writable directory used for temporary storage by all users and some applications. Temporary files residing in /var/tmp are to be preserved between reboots.
sca.check.rationale: The reasoning for mounting /var/tmp on a separate partition is as follows. Protection from resource exhaustion The default installation only creates a single / partition. Since the /var/tmp directory may contain world-writable files and directories, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to /var/tmp and cause the potential disruption to daemons as the disk is full. Fine grained control over the mount Configuring /var/tmp as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev. These options limits an attackers ability to create exploits on the system. Other options allow for specific behavior. See man mount for exact details regarding filesystem-independent and filesystem-specific options. Protection from exploitation An example of exploiting /var/tmp may be an attacker establishing a hard-link to a system setuid program and wait for it to be updated. Once the program was updated, the hard-link would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.
sca.check.remediation: For new installations, during installation create a custom partition setup and specify a separate partition for /var/tmp. For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.
sca.check.compliance.cis: 1.1.4.1
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1499,T1499.001
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.references: http://tldp.org/HOWTO/LVM-HOWTO/
sca.check.command: ["findmnt -kn /var/tmp"]
sca.check.result: failed

** Alert 1706006476.37877: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure nodev option set on /var/tmp partition.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19008,"title":"Ensure nodev option set on /var/tmp partition.","description":"The nodev mount option specifies that the filesystem cannot contain special devices.","rationale":"Since the /var/tmp filesystem is not intended to support devices, set this option to ensure that users cannot create block or character special devices in /var/tmp.","remediation":"IF the /var/tmp partition exists, edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/tmp partition. Example: <device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /var/tmp with the configured options: # mount -o remount /var/tmp.","compliance":{"cis":"1.1.4.2","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1200","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c: findmnt -kn /var/tmp -> r:\\s*/var/tmp\\s && r:nodev"],"condition":"all","command":" findmnt -kn /var/tmp","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19008
sca.check.title: Ensure nodev option set on /var/tmp partition.
sca.check.description: The nodev mount option specifies that the filesystem cannot contain special devices.
sca.check.rationale: Since the /var/tmp filesystem is not intended to support devices, set this option to ensure that users cannot create block or character special devices in /var/tmp.
sca.check.remediation: IF the /var/tmp partition exists, edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/tmp partition. Example: <device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /var/tmp with the configured options: # mount -o remount /var/tmp.
sca.check.compliance.cis: 1.1.4.2
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1200
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: [" findmnt -kn /var/tmp"]
sca.check.result: failed

** Alert 1706006476.41057: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure noexec option set on /var/tmp partition.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19009,"title":"Ensure noexec option set on /var/tmp partition.","description":"The noexec mount option specifies that the filesystem cannot contain executable binaries.","rationale":"Since the /var/tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from /var/tmp.","remediation":"IF the /var/tmp partition exists, edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/tmp partition. Example: <device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /var/tmp with the configured options: # mount -o remount /var/tmp.","compliance":{"cis":"1.1.4.3","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022,M1038","mitre_tactics":"TA0005","mitre_techniques":"T1204,T1204.002","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:findmnt -kn /var/tmp -> r:\\s*/var/tmp\\s && r:noexec"],"condition":"all","command":"findmnt -kn /var/tmp","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19009
sca.check.title: Ensure noexec option set on /var/tmp partition.
sca.check.description: The noexec mount option specifies that the filesystem cannot contain executable binaries.
sca.check.rationale: Since the /var/tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from /var/tmp.
sca.check.remediation: IF the /var/tmp partition exists, edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/tmp partition. Example: <device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /var/tmp with the configured options: # mount -o remount /var/tmp.
sca.check.compliance.cis: 1.1.4.3
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022,M1038
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1204,T1204.002
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["findmnt -kn /var/tmp"]
sca.check.result: failed

** Alert 1706006476.44268: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure nosuid option set on /var/tmp partition.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19010,"title":"Ensure nosuid option set on /var/tmp partition.","description":"The nosuid mount option specifies that the filesystem cannot contain setuid files.","rationale":"Since the /var/tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create setuid files in /var/tmp.","remediation":"IF the /var/tmp partition exists, edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/tmp partition. Example: <device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /var/tmp with the configured options: # mount -o remount /var/tmp.","compliance":{"cis":"1.1.4.4","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022,M1038","mitre_tactics":"TA0005","mitre_techniques":"T1548,T1548.001","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:findmnt -kn /var/tmp -> r:\\s*/var/tmp\\s && r:nosuid"],"condition":"all","command":"findmnt -kn /var/tmp","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19010
sca.check.title: Ensure nosuid option set on /var/tmp partition.
sca.check.description: The nosuid mount option specifies that the filesystem cannot contain setuid files.
sca.check.rationale: Since the /var/tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create setuid files in /var/tmp.
sca.check.remediation: IF the /var/tmp partition exists, edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/tmp partition. Example: <device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /var/tmp with the configured options: # mount -o remount /var/tmp.
sca.check.compliance.cis: 1.1.4.4
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022,M1038
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1548,T1548.001
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["findmnt -kn /var/tmp"]
sca.check.result: failed

** Alert 1706006476.47453: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure separate partition exists for /var/log.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19011,"title":"Ensure separate partition exists for /var/log.","description":"The /var/log directory is used by system services to store log data.","rationale":"The reasoning for mounting /var/log on a separate partition is as follows. Protection from resource exhaustion The default installation only creates a single / partition. Since the /var/log directory contains log files which can grow quite large, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. Fine grained control over the mount Configuring /var/log as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev. These options limits an attackers ability to create exploits on the system. Other options allow for specific behavior. See man mount for exact details regarding filesystem-independent and filesystem-specific options. Protection of log data As /var/log contains log files, care should be taken to ensure the security and integrity of the data and mount point.","remediation":"For new installations, during installation create a custom partition setup and specify a separate partition for /var/log . For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.","compliance":{"cis":"1.1.5.1","cis_csc_v8":"8.3","cis_csc_v7":"6.4","iso_27001-2013":"A.12.4.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1499,T1499.001","pci_dss_v3.2.1":"10.7","soc_2":"A1.1"},"rules":["c:findmnt -kn /var/log -> r:\\s*/var/log\\s"],"condition":"all","references":"http://tldp.org/HOWTO/LVM-HOWTO/","command":"findmnt -kn /var/log","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19011
sca.check.title: Ensure separate partition exists for /var/log.
sca.check.description: The /var/log directory is used by system services to store log data.
sca.check.rationale: The reasoning for mounting /var/log on a separate partition is as follows. Protection from resource exhaustion The default installation only creates a single / partition. Since the /var/log directory contains log files which can grow quite large, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. Fine grained control over the mount Configuring /var/log as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev. These options limits an attackers ability to create exploits on the system. Other options allow for specific behavior. See man mount for exact details regarding filesystem-independent and filesystem-specific options. Protection of log data As /var/log contains log files, care should be taken to ensure the security and integrity of the data and mount point.
sca.check.remediation: For new installations, during installation create a custom partition setup and specify a separate partition for /var/log . For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.
sca.check.compliance.cis: 1.1.5.1
sca.check.compliance.cis_csc_v8: 8.3
sca.check.compliance.cis_csc_v7: 6.4
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1499,T1499.001
sca.check.compliance.pci_dss_v3.2.1: 10.7
sca.check.compliance.soc_2: A1.1
sca.check.references: http://tldp.org/HOWTO/LVM-HOWTO/
sca.check.command: ["findmnt -kn /var/log"]
sca.check.result: failed

** Alert 1706006476.51500: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure nodev option set on /var/log partition.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19012,"title":"Ensure nodev option set on /var/log partition.","description":"The nodev mount option specifies that the filesystem cannot contain special devices.","rationale":"Since the /var/log filesystem is not intended to support devices, set this option to ensure that users cannot create block or character special devices in /var/log.","remediation":"IF the /var/log partition exists, edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/log partition. Example: <device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /var/log with the configured options: # mount -o remount /var/log.","compliance":{"cis":"1.1.5.2","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1200","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:findmnt -kn /var/log -> r:\\s*/var/log\\s && r:nodev"],"condition":"all","command":"findmnt -kn /var/log","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19012
sca.check.title: Ensure nodev option set on /var/log partition.
sca.check.description: The nodev mount option specifies that the filesystem cannot contain special devices.
sca.check.rationale: Since the /var/log filesystem is not intended to support devices, set this option to ensure that users cannot create block or character special devices in /var/log.
sca.check.remediation: IF the /var/log partition exists, edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/log partition. Example: <device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /var/log with the configured options: # mount -o remount /var/log.
sca.check.compliance.cis: 1.1.5.2
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1200
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["findmnt -kn /var/log"]
sca.check.result: failed

** Alert 1706006476.54677: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure noexec option set on /var/log partition.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19013,"title":"Ensure noexec option set on /var/log partition.","description":"The noexec mount option specifies that the filesystem cannot contain executable binaries.","rationale":"Since the /var/log filesystem is only intended for log files, set this option to ensure that users cannot run executable binaries from /var/log.","remediation":"IF the /var/log partition exists, edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/log partition. Example: <device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /var/log with the configured options: # mount -o remount /var/log.","compliance":{"cis":"1.1.5.3","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1204,T1204.002","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:findmnt -kn /var/log -> r:\\s*/var/log\\s && r:noexec"],"condition":"all","command":"findmnt -kn /var/log","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19013
sca.check.title: Ensure noexec option set on /var/log partition.
sca.check.description: The noexec mount option specifies that the filesystem cannot contain executable binaries.
sca.check.rationale: Since the /var/log filesystem is only intended for log files, set this option to ensure that users cannot run executable binaries from /var/log.
sca.check.remediation: IF the /var/log partition exists, edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/log partition. Example: <device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /var/log with the configured options: # mount -o remount /var/log.
sca.check.compliance.cis: 1.1.5.3
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1204,T1204.002
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["findmnt -kn /var/log"]
sca.check.result: failed

** Alert 1706006476.57850: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure nosuid option set on /var/log partition.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19014,"title":"Ensure nosuid option set on /var/log partition.","description":"The nosuid mount option specifies that the filesystem cannot contain setuid files.","rationale":"Since the /var/log filesystem is only intended for log files, set this option to ensure that users cannot create setuid files in /var/log.","remediation":"IF the /var/log partition exists, edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/log partition. Example: <device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /var/log with the configured options: # mount -o remount /var/log.","compliance":{"cis":"1.1.5.4","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1548,T1548.001","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:findmnt -kn /var/log -> r:\\s*/var/log\\s && r:nosuid"],"condition":"all","command":"findmnt -kn /var/log","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19014
sca.check.title: Ensure nosuid option set on /var/log partition.
sca.check.description: The nosuid mount option specifies that the filesystem cannot contain setuid files.
sca.check.rationale: Since the /var/log filesystem is only intended for log files, set this option to ensure that users cannot create setuid files in /var/log.
sca.check.remediation: IF the /var/log partition exists, edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/log partition. Example: <device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /var/log with the configured options: # mount -o remount /var/log.
sca.check.compliance.cis: 1.1.5.4
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1548,T1548.001
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["findmnt -kn /var/log"]
sca.check.result: failed

** Alert 1706006476.60997: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure separate partition exists for /var/log/audit.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19015,"title":"Ensure separate partition exists for /var/log/audit.","description":"The auditing daemon, auditd, stores log data in the /var/log/audit directory.","rationale":"The reasoning for mounting /var/log/audit on a separate partition is as follows. Protection from resource exhaustion The default installation only creates a single / partition. Since the /var/log/audit directory contains the audit.log file which can grow quite large, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to /var/log/audit and cause auditd to trigger it's space_left_action as the disk is full. See man auditd.conf for details. Fine grained control over the mount Configuring /var/log/audit as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev. These options limits an attackers ability to create exploits on the system. Other options allow for specific behavior. See man mount for exact details regarding filesystem-independent and filesystem-specific options. Protection of audit data As /var/log/audit contains audit logs, care should be taken to ensure the security and integrity of the data and mount point.","remediation":"For new installations, during installation create a custom partition setup and specify a separate partition for /var/log/audit. For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.","compliance":{"cis":"1.1.6.1","cis_csc_v8":"8.3","cis_csc_v7":"6.4","iso_27001-2013":"A.12.4.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1499,T1499.001","pci_dss_v3.2.1":"10.7","soc_2":"A1.1"},"rules":["c:findmnt -kn /var/log/audit -> r:\\s*/var/log/audit\\s"],"condition":"all","references":"http://tldp.org/HOWTO/LVM-HOWTO/","command":"findmnt -kn /var/log/audit","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19015
sca.check.title: Ensure separate partition exists for /var/log/audit.
sca.check.description: The auditing daemon, auditd, stores log data in the /var/log/audit directory.
sca.check.rationale: The reasoning for mounting /var/log/audit on a separate partition is as follows. Protection from resource exhaustion The default installation only creates a single / partition. Since the /var/log/audit directory contains the audit.log file which can grow quite large, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to /var/log/audit and cause auditd to trigger it's space_left_action as the disk is full. See man auditd.conf for details. Fine grained control over the mount Configuring /var/log/audit as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev. These options limits an attackers ability to create exploits on the system. Other options allow for specific behavior. See man mount for exact details regarding filesystem-independent and filesystem-specific options. Protection of audit data As /var/log/audit contains audit logs, care should be taken to ensure the security and integrity of the data and mount point.
sca.check.remediation: For new installations, during installation create a custom partition setup and specify a separate partition for /var/log/audit. For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.
sca.check.compliance.cis: 1.1.6.1
sca.check.compliance.cis_csc_v8: 8.3
sca.check.compliance.cis_csc_v7: 6.4
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1499,T1499.001
sca.check.compliance.pci_dss_v3.2.1: 10.7
sca.check.compliance.soc_2: A1.1
sca.check.references: http://tldp.org/HOWTO/LVM-HOWTO/
sca.check.command: ["findmnt -kn /var/log/audit"]
sca.check.result: failed

** Alert 1706006476.65586: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure nodev option set on /var/log/audit partition.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19016,"title":"Ensure nodev option set on /var/log/audit partition.","description":"The nodev mount option specifies that the filesystem cannot contain special devices.","rationale":"Since the /var/log/audit filesystem is not intended to support devices, set this option to ensure that users cannot create block or character special devices in /var/log/audit.","remediation":"IF the /var/log/audit partition exists, edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/log/audit partition. Example: <device> /var/log/audit <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /var/log/audit with the configured options: # mount -o remount /var/log/audit.","compliance":{"cis":"1.1.6.2","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1200","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:findmnt -kn /var/log/audit -> r:\\s*/var/log/audit\\s && r:nodev"],"condition":"all","command":"findmnt -kn /var/log/audit","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19016
sca.check.title: Ensure nodev option set on /var/log/audit partition.
sca.check.description: The nodev mount option specifies that the filesystem cannot contain special devices.
sca.check.rationale: Since the /var/log/audit filesystem is not intended to support devices, set this option to ensure that users cannot create block or character special devices in /var/log/audit.
sca.check.remediation: IF the /var/log/audit partition exists, edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/log/audit partition. Example: <device> /var/log/audit <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /var/log/audit with the configured options: # mount -o remount /var/log/audit.
sca.check.compliance.cis: 1.1.6.2
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1200
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["findmnt -kn /var/log/audit"]
sca.check.result: failed

** Alert 1706006476.68889: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure noexec option set on /var/log/audit partition.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19017,"title":"Ensure noexec option set on /var/log/audit partition.","description":"The noexec mount option specifies that the filesystem cannot contain executable binaries.","rationale":"Since the /var/log/audit filesystem is only intended for audit logs, set this option to ensure that users cannot run executable binaries from /var/log/audit.","remediation":"IF the /var/log/audit partition exists, edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var partition. Example: <device> /var/log/audit <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /var/log/audit with the configured options: # mount -o remount /var/log/audit.","compliance":{"cis":"1.1.6.3","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1204,T1204.002","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:findmnt -kn /var/log/audit -> r:\\s*/var/log/audit\\s && r:noexec"],"condition":"all","command":"findmnt -kn /var/log/audit","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19017
sca.check.title: Ensure noexec option set on /var/log/audit partition.
sca.check.description: The noexec mount option specifies that the filesystem cannot contain executable binaries.
sca.check.rationale: Since the /var/log/audit filesystem is only intended for audit logs, set this option to ensure that users cannot run executable binaries from /var/log/audit.
sca.check.remediation: IF the /var/log/audit partition exists, edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var partition. Example: <device> /var/log/audit <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /var/log/audit with the configured options: # mount -o remount /var/log/audit.
sca.check.compliance.cis: 1.1.6.3
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1204,T1204.002
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["findmnt -kn /var/log/audit"]
sca.check.result: failed

** Alert 1706006476.72170: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure nosuid option set on /var/log/audit partition.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19018,"title":"Ensure nosuid option set on /var/log/audit partition.","description":"The nosuid mount option specifies that the filesystem cannot contain setuid files.","rationale":"Since the /var/log/audit filesystem is only intended for variable files such as logs, set this option to ensure that users cannot create setuid files in /var/log/audit.","remediation":"IF the /var/log/audit partition exists, edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/log/audit partition. Example: <device> /var/log/audit <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /var/log/audit with the configured options: # mount -o remount /var/log/audit.","compliance":{"cis":"1.1.6.4","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1548,T1548.001","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:findmnt -kn /var/log/audit -> r:\\s*/var/log/audit\\s && r:nosuid"],"condition":"all","command":"findmnt -kn /var/log/audit","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19018
sca.check.title: Ensure nosuid option set on /var/log/audit partition.
sca.check.description: The nosuid mount option specifies that the filesystem cannot contain setuid files.
sca.check.rationale: Since the /var/log/audit filesystem is only intended for variable files such as logs, set this option to ensure that users cannot create setuid files in /var/log/audit.
sca.check.remediation: IF the /var/log/audit partition exists, edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/log/audit partition. Example: <device> /var/log/audit <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /var/log/audit with the configured options: # mount -o remount /var/log/audit.
sca.check.compliance.cis: 1.1.6.4
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1548,T1548.001
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["findmnt -kn /var/log/audit"]
sca.check.result: failed

** Alert 1706006476.75479: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure separate partition exists for /home.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19019,"title":"Ensure separate partition exists for /home.","description":"The /home directory is used to support disk storage needs of local users.","rationale":"The reasoning for mounting /home on a separate partition is as follows. Protection from resource exhaustion The default installation only creates a single / partition. Since the /home directory contains user generated data, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to /home and impact all local users. Fine grained control over the mount Configuring /home as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev. These options limits an attackers ability to create exploits on the system. In the case of /home options such as usrquota/grpquota may be considered to limit the impact that users can have on each other with regards to disk resource exhaustion. Other options allow for specific behavior. See man mount for exact details regarding filesystem-independent and filesystem-specific options. Protection of user data As /home contains user data, care should be taken to ensure the security and integrity of the data and mount point.","remediation":"For new installations, during installation create a custom partition setup and specify a separate partition for /home. For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.","compliance":{"cis":"1.1.7.1","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1038","mitre_tactics":"TA0005","mitre_techniques":"T1499,T1499.001","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:findmnt -kn /home -> r:\\s*/home\\s"],"condition":"all","references":"http://tldp.org/HOWTO/LVM-HOWTO/","command":"findmnt -kn /home","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19019
sca.check.title: Ensure separate partition exists for /home.
sca.check.description: The /home directory is used to support disk storage needs of local users.
sca.check.rationale: The reasoning for mounting /home on a separate partition is as follows. Protection from resource exhaustion The default installation only creates a single / partition. Since the /home directory contains user generated data, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to /home and impact all local users. Fine grained control over the mount Configuring /home as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev. These options limits an attackers ability to create exploits on the system. In the case of /home options such as usrquota/grpquota may be considered to limit the impact that users can have on each other with regards to disk resource exhaustion. Other options allow for specific behavior. See man mount for exact details regarding filesystem-independent and filesystem-specific options. Protection of user data As /home contains user data, care should be taken to ensure the security and integrity of the data and mount point.
sca.check.remediation: For new installations, during installation create a custom partition setup and specify a separate partition for /home. For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.
sca.check.compliance.cis: 1.1.7.1
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1038
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1499,T1499.001
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.references: http://tldp.org/HOWTO/LVM-HOWTO/
sca.check.command: ["findmnt -kn /home"]
sca.check.result: failed

** Alert 1706006476.80521: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure nodev option set on /home partition.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19020,"title":"Ensure nodev option set on /home partition.","description":"The nodev mount option specifies that the filesystem cannot contain special devices.","rationale":"Since the /home filesystem is not intended to support devices, set this option to ensure that users cannot create block or character special devices in /home.","remediation":"IF the /home partition exists, edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /home partition. Example: <device> /home <fstype> defaults,rw,nosuid,nodev,relatime 0 0 Run the following command to remount /home with the configured options: # mount -o remount /home.","compliance":{"cis":"1.1.7.2","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1200","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:findmnt -kn /home -> r:\\s*/home\\s && r:nodev"],"condition":"all","command":"findmnt -kn /home","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19020
sca.check.title: Ensure nodev option set on /home partition.
sca.check.description: The nodev mount option specifies that the filesystem cannot contain special devices.
sca.check.rationale: Since the /home filesystem is not intended to support devices, set this option to ensure that users cannot create block or character special devices in /home.
sca.check.remediation: IF the /home partition exists, edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /home partition. Example: <device> /home <fstype> defaults,rw,nosuid,nodev,relatime 0 0 Run the following command to remount /home with the configured options: # mount -o remount /home.
sca.check.compliance.cis: 1.1.7.2
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1200
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["findmnt -kn /home"]
sca.check.result: failed

** Alert 1706006476.83621: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure nosuid option set on /home partition.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19021,"title":"Ensure nosuid option set on /home partition.","description":"The nosuid mount option specifies that the filesystem cannot contain setuid files.","rationale":"Since the /home filesystem is only intended for user file storage, set this option to ensure that users cannot create setuid files in /home.","remediation":"IF the /home partition exists, edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /home partition. Example: <device> /home <fstype> defaults,rw,nosuid,nodev,relatime 0 0 Run the following command to remount /home with the configured options: # mount -o remount /home.","compliance":{"cis":"1.1.7.3","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1548,T1548.001","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:findmnt -kn /home -> r:\\s*/home\\s && r:nosuid"],"condition":"all","command":"findmnt -kn /home","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19021
sca.check.title: Ensure nosuid option set on /home partition.
sca.check.description: The nosuid mount option specifies that the filesystem cannot contain setuid files.
sca.check.rationale: Since the /home filesystem is only intended for user file storage, set this option to ensure that users cannot create setuid files in /home.
sca.check.remediation: IF the /home partition exists, edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /home partition. Example: <device> /home <fstype> defaults,rw,nosuid,nodev,relatime 0 0 Run the following command to remount /home with the configured options: # mount -o remount /home.
sca.check.compliance.cis: 1.1.7.3
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1548,T1548.001
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["findmnt -kn /home"]
sca.check.result: failed

** Alert 1706006476.86707: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure nodev option set on /dev/shm partition.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19022,"title":"Ensure nodev option set on /dev/shm partition.","description":"The nodev mount option specifies that the filesystem cannot contain special devices.","rationale":"Since the /dev/shm filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create special devices in /dev/shm partitions.","remediation":"Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information. Example: tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /dev/shm with the configured options: # mount -o remount /dev/shm NOTE It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.","compliance":{"cis":"1.1.8.1","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1038","mitre_tactics":"TA0005","mitre_techniques":"T1200","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:findmnt -kn /dev/shm -> r:\\s*/dev/shm\\s && r:nodev"],"condition":"all","command":"findmnt -kn /dev/shm","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19022
sca.check.title: Ensure nodev option set on /dev/shm partition.
sca.check.description: The nodev mount option specifies that the filesystem cannot contain special devices.
sca.check.rationale: Since the /dev/shm filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create special devices in /dev/shm partitions.
sca.check.remediation: Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information. Example: tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /dev/shm with the configured options: # mount -o remount /dev/shm NOTE It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.
sca.check.compliance.cis: 1.1.8.1
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1038
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1200
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["findmnt -kn /dev/shm"]
sca.check.result: passed

** Alert 1706006476.90162: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure noexec option set on /dev/shm partition.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19023,"title":"Ensure noexec option set on /dev/shm partition.","description":"The noexec mount option specifies that the filesystem cannot contain executable binaries.","rationale":"Setting this option on a file system prevents users from executing programs from shared memory. This deters users from introducing potentially malicious software on the system.","remediation":"Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /dev/shm partition. Example: tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /dev/shm with the configured options: # mount -o remount /dev/shm Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.","compliance":{"cis":"1.1.8.2","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1204,T1204.002","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:findmnt -kn /dev/shm  -> r:\\s*/dev/shm\\s && r:noexec"],"condition":"all","command":"findmnt -kn /dev/shm ","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19023
sca.check.title: Ensure noexec option set on /dev/shm partition.
sca.check.description: The noexec mount option specifies that the filesystem cannot contain executable binaries.
sca.check.rationale: Setting this option on a file system prevents users from executing programs from shared memory. This deters users from introducing potentially malicious software on the system.
sca.check.remediation: Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /dev/shm partition. Example: tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /dev/shm with the configured options: # mount -o remount /dev/shm Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.
sca.check.compliance.cis: 1.1.8.2
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1204,T1204.002
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["findmnt -kn /dev/shm "]
sca.check.result: passed

** Alert 1706006476.93574: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure nosuid option set on /dev/shm partition.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19024,"title":"Ensure nosuid option set on /dev/shm partition.","description":"The nosuid mount option specifies that the filesystem cannot contain setuid files.","rationale":"Setting this option on a file system prevents users from introducing privileged programs onto the system and allowing non-root users to execute them.","remediation":"Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information. Example: tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /dev/shm with the configured options: # mount -o remount /dev/shm Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.","compliance":{"cis":"1.1.8.3","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1038","mitre_tactics":"TA0005","mitre_techniques":"T1548,T1548.001","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:findmnt -kn /dev/shm  -> r:\\s*/dev/shm\\s && r:nosuid"],"condition":"all","command":"findmnt -kn /dev/shm ","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19024
sca.check.title: Ensure nosuid option set on /dev/shm partition.
sca.check.description: The nosuid mount option specifies that the filesystem cannot contain setuid files.
sca.check.rationale: Setting this option on a file system prevents users from introducing privileged programs onto the system and allowing non-root users to execute them.
sca.check.remediation: Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information. Example: tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0 Run the following command to remount /dev/shm with the configured options: # mount -o remount /dev/shm Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.
sca.check.compliance.cis: 1.1.8.3
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1038
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1548,T1548.001
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["findmnt -kn /dev/shm "]
sca.check.result: passed

** Alert 1706006476.97020: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Disable Automounting.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19025,"title":"Disable Automounting.","description":"autofs allows automatic mounting of devices, typically including CD/DVDs and USB drives.","rationale":"With automounting enabled anyone with physical access could attach a USB drive or disc and have its contents available in the filesystem even if they lacked permissions to mount it themselves.","remediation":"If there are no other packages that depends on autofs, remove the package with: # apt purge autofs -OR- if there are dependencies on the autofs package: Run the following commands to mask autofs: # systemctl stop autofs # systemctl mask autofs.","compliance":{"cis":"1.1.9","cis_csc_v8":"10.3","cis_csc_v7":"8.5","cmmc_v2.0":"MP.L2-3.8.7","hipaa":"164.310(d)(1)","iso_27001-2013":"A.12.2.1","mitre_techniques":"T1068,T1203,T1211,T1212"},"rules":["c: dpkg -s autofs -> r:package 'autofs' is not installed","c: systemctl is-enabled autofs -> r:No such file or directory|disabled"],"condition":"any","command":" dpkg -s autofs","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19025
sca.check.title: Disable Automounting.
sca.check.description: autofs allows automatic mounting of devices, typically including CD/DVDs and USB drives.
sca.check.rationale: With automounting enabled anyone with physical access could attach a USB drive or disc and have its contents available in the filesystem even if they lacked permissions to mount it themselves.
sca.check.remediation: If there are no other packages that depends on autofs, remove the package with: # apt purge autofs -OR- if there are dependencies on the autofs package: Run the following commands to mask autofs: # systemctl stop autofs # systemctl mask autofs.
sca.check.compliance.cis: 1.1.9
sca.check.compliance.cis_csc_v8: 10.3
sca.check.compliance.cis_csc_v7: 8.5
sca.check.compliance.cmmc_v2.0: MP.L2-3.8.7
sca.check.compliance.hipaa: 164.310(d)(1)
sca.check.compliance.iso_27001-2013: A.12.2.1
sca.check.compliance.mitre_techniques: T1068,T1203,T1211,T1212
sca.check.command: [" dpkg -s autofs"]
sca.check.result: passed

** Alert 1706006476.99501: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure AIDE is installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19026,"title":"Ensure AIDE is installed.","description":"AIDE takes a snapshot of filesystem state including modification times, permissions, and file hashes which can then be used to compare against the current state of the filesystem to detect modifications to the system.","rationale":"By monitoring the filesystem state compromised files can be detected to prevent or limit the exposure of accidental or malicious misconfigurations or modified binaries.","remediation":"Install AIDE using the appropriate package manager or manual installation: # apt install aide aide-common Configure AIDE as appropriate for your environment. Consult the AIDE documentation for options. Run the following commands to initialize AIDE: # aideinit # mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db.","compliance":{"cis":"1.2.1","cis_csc_v8":"3.14","cis_csc_v7":"14.9","cmmc_v2.0":"AC.L2-3.1.7","hipaa":"164.312(b),164.312(c)(1),164.312(c)(2)","iso_27001-2013":"A.12.4.3","mitre_techniques":"T1036,T1036.002,T1036.003,T1036.004,T1036.005,T1565,T1565.001","nist_sp_800-53":"AC-6(9)","pci_dss_v3.2.1":"10.2.1,11.5","pci_dss_v4.0":"10.2.1,10.2.1.1","soc_2":"CC6.1"},"rules":["c:dpkg -s aide -> r:install ok installed","c:dpkg -s aide-common -> r:install ok installed"],"condition":"all","command":"dpkg -s aide","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19026
sca.check.title: Ensure AIDE is installed.
sca.check.description: AIDE takes a snapshot of filesystem state including modification times, permissions, and file hashes which can then be used to compare against the current state of the filesystem to detect modifications to the system.
sca.check.rationale: By monitoring the filesystem state compromised files can be detected to prevent or limit the exposure of accidental or malicious misconfigurations or modified binaries.
sca.check.remediation: Install AIDE using the appropriate package manager or manual installation: # apt install aide aide-common Configure AIDE as appropriate for your environment. Consult the AIDE documentation for options. Run the following commands to initialize AIDE: # aideinit # mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db.
sca.check.compliance.cis: 1.2.1
sca.check.compliance.cis_csc_v8: 3.14
sca.check.compliance.cis_csc_v7: 14.9
sca.check.compliance.cmmc_v2.0: AC.L2-3.1.7
sca.check.compliance.hipaa: 164.312(b),164.312(c)(1),164.312(c)(2)
sca.check.compliance.iso_27001-2013: A.12.4.3
sca.check.compliance.mitre_techniques: T1036,T1036.002,T1036.003,T1036.004,T1036.005,T1565,T1565.001
sca.check.compliance.nist_sp_800-53: AC-6(9)
sca.check.compliance.pci_dss_v3.2.1: 10.2.1,11.5
sca.check.compliance.pci_dss_v4.0: 10.2.1,10.2.1.1
sca.check.compliance.soc_2: CC6.1
sca.check.command: ["dpkg -s aide"]
sca.check.result: failed

** Alert 1706006476.102711: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure filesystem integrity is regularly checked.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19027,"title":"Ensure filesystem integrity is regularly checked.","description":"Periodic checking of the filesystem integrity is needed to detect changes to the filesystem.","rationale":"Periodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion.","remediation":"If cron will be used to schedule and run aide check: Run the following command: # crontab -u root -e Add the following line to the crontab: 0 5 * * * /usr/bin/aide.wrapper --config /etc/aide/aide.conf --check OR If aidecheck.service and aidecheck.timer will be used to schedule and run aide check: Create or edit the file /etc/systemd/system/aidecheck.service and add the following lines: [Unit] Description=Aide Check [Service] Type=simple ExecStart=/usr/bin/aide.wrapper --config /etc/aide/aide.conf --check [Install] WantedBy=multi-user.target Create or edit the file /etc/systemd/system/aidecheck.timer and add the following lines: [Unit] Description=Aide check every day at 5AM [Timer] OnCalendar=*-*-* 05:00:00 Unit=aidecheck.service [Install] WantedBy=multi-user.target Run the following commands: # chown root:root /etc/systemd/system/aidecheck.* # chmod 0644 /etc/systemd/system/aidecheck.* # systemctl daemon-reload # systemctl enable aidecheck.service # systemctl --now enable aidecheck.timer.","compliance":{"cis":"1.2.2","cis_csc_v8":"8.5","cis_csc_v7":"14.9","cmmc_v2.0":"AU.L2-3.3.1","iso_27001-2013":"A.12.4.3","mitre_mitigations":"M1022","mitre_tactics":"TA0040","mitre_techniques":"T1036,T1036.002,T1036.003,T1036.004,T1036.005,T1565,T1565.001","nist_sp_800-53":"AU-3(1),AU-7","pci_dss_v3.2.1":"10.1,10.2.2,10.2.4,10.2.5,10.3","pci_dss_v4.0":"10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5","soc_2":"CC5.2,CC7.2"},"rules":["c:systemctl is-enabled aidecheck.service -> r:enabled","c:systemctl is-enabled aidecheck.timer -> r:enabled","c:systemctl status aidecheck.timer -> r:Active: active"],"condition":"all","references":"https://github.com/konstruktoid/hardening/blob/master/config/aidecheck.service,https://github.com/konstruktoid/hardening/blob/master/config/aidecheck.timer","command":"systemctl is-enabled aidecheck.service,systemctl is-enabled aidecheck.timer,systemctl status aidecheck.timer","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'systemctl is-enabled aidecheck.service'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19027
sca.check.title: Ensure filesystem integrity is regularly checked.
sca.check.description: Periodic checking of the filesystem integrity is needed to detect changes to the filesystem.
sca.check.rationale: Periodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion.
sca.check.remediation: If cron will be used to schedule and run aide check: Run the following command: # crontab -u root -e Add the following line to the crontab: 0 5 * * * /usr/bin/aide.wrapper --config /etc/aide/aide.conf --check OR If aidecheck.service and aidecheck.timer will be used to schedule and run aide check: Create or edit the file /etc/systemd/system/aidecheck.service and add the following lines: [Unit] Description=Aide Check [Service] Type=simple ExecStart=/usr/bin/aide.wrapper --config /etc/aide/aide.conf --check [Install] WantedBy=multi-user.target Create or edit the file /etc/systemd/system/aidecheck.timer and add the following lines: [Unit] Description=Aide check every day at 5AM [Timer] OnCalendar=*-*-* 05:00:00 Unit=aidecheck.service [Install] WantedBy=multi-user.target Run the following commands: # chown root:root /etc/systemd/system/aidecheck.* # chmod 0644 /etc/systemd/system/aidecheck.* # systemctl daemon-reload # systemctl enable aidecheck.service # systemctl --now enable aidecheck.timer.
sca.check.compliance.cis: 1.2.2
sca.check.compliance.cis_csc_v8: 8.5
sca.check.compliance.cis_csc_v7: 14.9
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.iso_27001-2013: A.12.4.3
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0040
sca.check.compliance.mitre_techniques: T1036,T1036.002,T1036.003,T1036.004,T1036.005,T1565,T1565.001
sca.check.compliance.nist_sp_800-53: AU-3(1),AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.1,10.2.2,10.2.4,10.2.5,10.3
sca.check.compliance.pci_dss_v4.0: 10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5
sca.check.compliance.soc_2: CC5.2,CC7.2
sca.check.references: https://github.com/konstruktoid/hardening/blob/master/config/aidecheck.service,https://github.com/konstruktoid/hardening/blob/master/config/aidecheck.timer
sca.check.command: ["systemctl is-enabled aidecheck.service", "systemctl is-enabled aidecheck.timer", "systemctl status aidecheck.timer"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'systemctl is-enabled aidecheck.service'

** Alert 1706006476.108060: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure bootloader password is set.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19028,"title":"Ensure bootloader password is set.","description":"Setting the boot loader password will require that anyone rebooting the system must enter a password before being able to set command line boot parameters.","rationale":"Requiring a boot password upon execution of the boot loader will prevent an unauthorized user from entering boot parameters or changing the boot partition. This prevents users from weakening security (e.g. turning off AppArmor at boot time).","remediation":"Create an encrypted password with grub-mkpasswd-pbkdf2: # grub-mkpasswd-pbkdf2 Enter password: <password> Reenter password: <password> PBKDF2 hash of your password is <encrypted-password> Add the following into a custom /etc/grub.d configuration file: cat <<EOF set superusers=\"<username>\" password_pbkdf2 <username> <encrypted-password> EOF The superuser/user information and password should not be contained in the /etc/grub.d/00_header file as this file could be overwritten in a package update. If there is a requirement to be able to boot/reboot without entering the password, edit /etc/grub.d/10_linux and add --unrestricted to the line CLASS= Example: CLASS=\"--class gnu-linux --class gnu --class os --unrestricted\" Run the following command to update the grub2 configuration: # update-grub.","compliance":{"cis":"1.4.1","cis_csc_v8":"5.2","cis_csc_v7":"4.4","cmmc_v2.0":"IA.L2-3.5.7","iso_27001-2013":"A.9.4.3","mitre_mitigations":"M1046","mitre_tactics":"TA0003","mitre_techniques":"T1542","pci_dss_v4.0":"2.2.2,8.3.5,8.3.6,8.6.3","soc_2":"CC6.1"},"rules":["f:/boot/grub/grub.cfg -> r:^\\s*\\t*set superusers","f:/boot/grub/grub.cfg -> r:^\\s*\\t*password"],"condition":"all","file":"/boot/grub/grub.cfg","status":"Not applicable","reason":"Could not open file '/boot/grub/grub.cfg'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19028
sca.check.title: Ensure bootloader password is set.
sca.check.description: Setting the boot loader password will require that anyone rebooting the system must enter a password before being able to set command line boot parameters.
sca.check.rationale: Requiring a boot password upon execution of the boot loader will prevent an unauthorized user from entering boot parameters or changing the boot partition. This prevents users from weakening security (e.g. turning off AppArmor at boot time).
sca.check.remediation: Create an encrypted password with grub-mkpasswd-pbkdf2: # grub-mkpasswd-pbkdf2 Enter password: <password> Reenter password: <password> PBKDF2 hash of your password is <encrypted-password> Add the following into a custom /etc/grub.d configuration file: cat <<EOF set superusers="<username>" password_pbkdf2 <username> <encrypted-password> EOF The superuser/user information and password should not be contained in the /etc/grub.d/00_header file as this file could be overwritten in a package update. If there is a requirement to be able to boot/reboot without entering the password, edit /etc/grub.d/10_linux and add --unrestricted to the line CLASS= Example: CLASS="--class gnu-linux --class gnu --class os --unrestricted" Run the following command to update the grub2 configuration: # update-grub.
sca.check.compliance.cis: 1.4.1
sca.check.compliance.cis_csc_v8: 5.2
sca.check.compliance.cis_csc_v7: 4.4
sca.check.compliance.cmmc_v2.0: IA.L2-3.5.7
sca.check.compliance.iso_27001-2013: A.9.4.3
sca.check.compliance.mitre_mitigations: M1046
sca.check.compliance.mitre_tactics: TA0003
sca.check.compliance.mitre_techniques: T1542
sca.check.compliance.pci_dss_v4.0: 2.2.2,8.3.5,8.3.6,8.6.3
sca.check.compliance.soc_2: CC6.1
sca.check.file: ["/boot/grub/grub.cfg"]
sca.check.result: not applicable
sca.check.reason: Could not open file '/boot/grub/grub.cfg'

** Alert 1706006476.112210: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure permissions on bootloader config are configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19029,"title":"Ensure permissions on bootloader config are configured.","description":"The grub configuration file contains information on boot settings and passwords for unlocking boot options.","rationale":"Setting the permissions to read and write for root only prevents non-root users from seeing the boot parameters or changing them. Non-root users who read the boot parameters may be able to identify weaknesses in security upon boot and be able to exploit them.","remediation":"Run the following commands to set permissions on your grub configuration: # chown root:root /boot/grub/grub.cfg # chmod u-x,go-rwx /boot/grub/grub.cfg.","compliance":{"cis":"1.4.2","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005,TA0007","mitre_techniques":"T1542","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:stat /boot/grub/grub.cfg -> r:Access:\\s*\\(0600/-r--------\\)\\s*Uid:\\s*\\(\\s*\\t*0/\\s*\\t*root\\)\\s*\\t*Gid:\\s*\\(\\s*\\t*0/\\s*\\t*root\\)","c:stat /boot/grub/grub.cfg -> r:Access:\\s*\\(0400/-r--------\\)\\s*Uid:\\s*\\(\\s*\\t*0/\\s*\\t*root\\)\\s*\\t*Gid:\\s*\\(\\s*\\t*0/\\s*\\t*root\\)"],"condition":"any","command":"stat /boot/grub/grub.cfg","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19029
sca.check.title: Ensure permissions on bootloader config are configured.
sca.check.description: The grub configuration file contains information on boot settings and passwords for unlocking boot options.
sca.check.rationale: Setting the permissions to read and write for root only prevents non-root users from seeing the boot parameters or changing them. Non-root users who read the boot parameters may be able to identify weaknesses in security upon boot and be able to exploit them.
sca.check.remediation: Run the following commands to set permissions on your grub configuration: # chown root:root /boot/grub/grub.cfg # chmod u-x,go-rwx /boot/grub/grub.cfg.
sca.check.compliance.cis: 1.4.2
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005,TA0007
sca.check.compliance.mitre_techniques: T1542
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["stat /boot/grub/grub.cfg"]
sca.check.result: failed

** Alert 1706006476.115568: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure authentication required for single user mode.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19030,"title":"Ensure authentication required for single user mode.","description":"Single user mode is used for recovery when the system detects an issue during boot or by manual selection from the bootloader.","rationale":"Requiring authentication in single user mode prevents an unauthorized user from rebooting the system into single user to gain root privileges without credentials.","remediation":"Run the following command and follow the prompts to set a password for the root user: # passwd root.","compliance":{"cis":"1.4.3","cis_csc_v8":"5.2","cis_csc_v7":"4.4","cmmc_v2.0":"IA.L2-3.5.7","iso_27001-2013":"A.9.4.3","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1548","pci_dss_v4.0":"2.2.2,8.3.5,8.3.6,8.6.3","soc_2":"CC6.1"},"rules":["f:/etc/shadow -> r:^root:\\p:"],"condition":"none","file":"/etc/shadow","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19030
sca.check.title: Ensure authentication required for single user mode.
sca.check.description: Single user mode is used for recovery when the system detects an issue during boot or by manual selection from the bootloader.
sca.check.rationale: Requiring authentication in single user mode prevents an unauthorized user from rebooting the system into single user to gain root privileges without credentials.
sca.check.remediation: Run the following command and follow the prompts to set a password for the root user: # passwd root.
sca.check.compliance.cis: 1.4.3
sca.check.compliance.cis_csc_v8: 5.2
sca.check.compliance.cis_csc_v7: 4.4
sca.check.compliance.cmmc_v2.0: IA.L2-3.5.7
sca.check.compliance.iso_27001-2013: A.9.4.3
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1548
sca.check.compliance.pci_dss_v4.0: 2.2.2,8.3.5,8.3.6,8.6.3
sca.check.compliance.soc_2: CC6.1
sca.check.file: ["/etc/shadow"]
sca.check.result: failed

** Alert 1706006476.117944: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure prelink is not installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19031,"title":"Ensure prelink is not installed.","description":"prelink is a program that modifies ELF shared libraries and ELF dynamically linked binaries in such a way that the time needed for the dynamic linker to perform relocations at startup significantly decreases.","rationale":"The prelinking feature can interfere with the operation of AIDE, because it changes binaries. Prelinking can also increase the vulnerability of the system if a malicious user is able to compromise a common library such as libc.","remediation":"Run the following command to restore binaries to normal: # prelink -ua Uninstall prelink using the appropriate package manager or manual installation: # apt purge prelink.","compliance":{"cis":"1.5.1","cis_csc_v8":"3.14","cis_csc_v7":"14.9","cmmc_v2.0":"AC.L2-3.1.7","hipaa":"164.312(b),164.312(c)(1),164.312(c)(2)","iso_27001-2013":"A.12.4.3","mitre_mitigations":"M1050","mitre_tactics":"TA0002","mitre_techniques":"T1055,T1055.009,T1065,T1065.001","nist_sp_800-53":"AC-6(9)","pci_dss_v3.2.1":"10.2.1,11.5","pci_dss_v4.0":"10.2.1,10.2.1.1","soc_2":"CC6.1"},"rules":["c:dpkg -s prelink -> r:package 'prelink' is not installed"],"condition":"all","command":"dpkg -s prelink","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19031
sca.check.title: Ensure prelink is not installed.
sca.check.description: prelink is a program that modifies ELF shared libraries and ELF dynamically linked binaries in such a way that the time needed for the dynamic linker to perform relocations at startup significantly decreases.
sca.check.rationale: The prelinking feature can interfere with the operation of AIDE, because it changes binaries. Prelinking can also increase the vulnerability of the system if a malicious user is able to compromise a common library such as libc.
sca.check.remediation: Run the following command to restore binaries to normal: # prelink -ua Uninstall prelink using the appropriate package manager or manual installation: # apt purge prelink.
sca.check.compliance.cis: 1.5.1
sca.check.compliance.cis_csc_v8: 3.14
sca.check.compliance.cis_csc_v7: 14.9
sca.check.compliance.cmmc_v2.0: AC.L2-3.1.7
sca.check.compliance.hipaa: 164.312(b),164.312(c)(1),164.312(c)(2)
sca.check.compliance.iso_27001-2013: A.12.4.3
sca.check.compliance.mitre_mitigations: M1050
sca.check.compliance.mitre_tactics: TA0002
sca.check.compliance.mitre_techniques: T1055,T1055.009,T1065,T1065.001
sca.check.compliance.nist_sp_800-53: AC-6(9)
sca.check.compliance.pci_dss_v3.2.1: 10.2.1,11.5
sca.check.compliance.pci_dss_v4.0: 10.2.1,10.2.1.1
sca.check.compliance.soc_2: CC6.1
sca.check.command: ["dpkg -s prelink"]
sca.check.result: passed

** Alert 1706006476.121047: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure Automatic Error Reporting is not enabled.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19032,"title":"Ensure Automatic Error Reporting is not enabled.","description":"The Apport Error Reporting Service automatically generates crash reports for debugging.","rationale":"Apport collects potentially sensitive data, such as core dumps, stack traces, and log files. They can contain passwords, credit card numbers, serial numbers, and other private material.","remediation":"Edit /etc/default/apport and add or edit the enabled parameter to equal 0: enabled=0 Run the following commands to stop and disable the apport service # systemctl stop apport.service # systemctl --now disable apport.service -- OR -- Run the following command to remove the apport package: # apt purge apport.","compliance":{"cis":"1.5.4","cis_csc_v8":"4.8","cis_csc_v7":"9.2","cmmc_v2.0":"CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","iso_27001-2013":"A.13.1.3","pci_dss_v3.2.1":"1.1.6,1.2.1,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,2.2.4,6.4.1","soc_2":"CC6.3,CC6.6"},"rules":["c:dpkg-query -s apport -> !r:enabled","c:systemctl is-active apport.service -> !r:active"],"condition":"all","command":"dpkg-query -s apport,systemctl is-active apport.service","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'systemctl is-active apport.service'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19032
sca.check.title: Ensure Automatic Error Reporting is not enabled.
sca.check.description: The Apport Error Reporting Service automatically generates crash reports for debugging.
sca.check.rationale: Apport collects potentially sensitive data, such as core dumps, stack traces, and log files. They can contain passwords, credit card numbers, serial numbers, and other private material.
sca.check.remediation: Edit /etc/default/apport and add or edit the enabled parameter to equal 0: enabled=0 Run the following commands to stop and disable the apport service # systemctl stop apport.service # systemctl --now disable apport.service -- OR -- Run the following command to remove the apport package: # apt purge apport.
sca.check.compliance.cis: 1.5.4
sca.check.compliance.cis_csc_v8: 4.8
sca.check.compliance.cis_csc_v7: 9.2
sca.check.compliance.cmmc_v2.0: CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.3
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,2.2.4,6.4.1
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.command: ["dpkg-query -s apport", "systemctl is-active apport.service"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'systemctl is-active apport.service'

** Alert 1706006476.124109: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure AppArmor is installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19033,"title":"Ensure AppArmor is installed.","description":"AppArmor provides Mandatory Access Controls.","rationale":"Without a Mandatory Access Control system installed only the default Discretionary Access Control system will be available.","remediation":"Install AppArmor. # apt install apparmor apparmor-utils.","compliance":{"cis":"1.6.1.1","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1026","mitre_tactics":"TA0003","mitre_techniques":"T1068,T1565,T1565.001,T1565.003","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:dpkg -s apparmor -> r:install ok installed"],"condition":"all","command":"dpkg -s apparmor","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19033
sca.check.title: Ensure AppArmor is installed.
sca.check.description: AppArmor provides Mandatory Access Controls.
sca.check.rationale: Without a Mandatory Access Control system installed only the default Discretionary Access Control system will be available.
sca.check.remediation: Install AppArmor. # apt install apparmor apparmor-utils.
sca.check.compliance.cis: 1.6.1.1
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1026
sca.check.compliance.mitre_tactics: TA0003
sca.check.compliance.mitre_techniques: T1068,T1565,T1565.001,T1565.003
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["dpkg -s apparmor"]
sca.check.result: failed

** Alert 1706006476.126572: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure AppArmor is enabled in the bootloader configuration.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19034,"title":"Ensure AppArmor is enabled in the bootloader configuration.","description":"Configure AppArmor to be enabled at boot time and verify that it has not been overwritten by the bootloader boot parameters. Note: This recommendation is designed around the grub bootloader, if LILO or another bootloader is in use in your environment enact equivalent settings.","rationale":"AppArmor must be enabled at boot time in your bootloader configuration to ensure that the controls it provides are not overridden.","remediation":"Edit /etc/default/grub and add the apparmor=1 and security=apparmor parameters to the GRUB_CMDLINE_LINUX= line GRUB_CMDLINE_LINUX=\"apparmor=1 security=apparmor\" Run the following command to update the grub2 configuration: # update-grub.","compliance":{"cis":"1.6.1.2","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1026","mitre_tactics":"TA0003","mitre_techniques":"T1068,T1565,T1565.001,T1565.003","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["f:/boot/grub/grub.cfg -> r:^\\s*\\t*linux && r:apparmor=1","f:/boot/grub/grub.cfg -> r:^\\s*\\t*linux && r:security=apparmor"],"condition":"all","file":"/boot/grub/grub.cfg","status":"Not applicable","reason":"Could not open file '/boot/grub/grub.cfg'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19034
sca.check.title: Ensure AppArmor is enabled in the bootloader configuration.
sca.check.description: Configure AppArmor to be enabled at boot time and verify that it has not been overwritten by the bootloader boot parameters. Note: This recommendation is designed around the grub bootloader, if LILO or another bootloader is in use in your environment enact equivalent settings.
sca.check.rationale: AppArmor must be enabled at boot time in your bootloader configuration to ensure that the controls it provides are not overridden.
sca.check.remediation: Edit /etc/default/grub and add the apparmor=1 and security=apparmor parameters to the GRUB_CMDLINE_LINUX= line GRUB_CMDLINE_LINUX="apparmor=1 security=apparmor" Run the following command to update the grub2 configuration: # update-grub.
sca.check.compliance.cis: 1.6.1.2
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1026
sca.check.compliance.mitre_tactics: TA0003
sca.check.compliance.mitre_techniques: T1068,T1565,T1565.001,T1565.003
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.file: ["/boot/grub/grub.cfg"]
sca.check.result: not applicable
sca.check.reason: Could not open file '/boot/grub/grub.cfg'

** Alert 1706006476.130176: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure all AppArmor Profiles are in enforce or complain mode.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19035,"title":"Ensure all AppArmor Profiles are in enforce or complain mode.","description":"AppArmor profiles define what resources applications are able to access.","rationale":"Security configuration requirements vary from site to site. Some sites may mandate a policy that is stricter than the default policy, which is perfectly acceptable. This item is intended to ensure that any policies that exist on the system are activated.","remediation":"Run the following command to set all profiles to enforce mode: # aa-enforce /etc/apparmor.d/* OR Run the following command to set all profiles to complain mode: # aa-complain /etc/apparmor.d/* Note: Any unconfined processes may need to have a profile created or activated for them and then be restarted.","compliance":{"cis":"1.6.1.3","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_tactics":"TA0005","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:apparmor_status -> n:^(\\d+)\\s+profiles\\s+are\\s+loaded compare > 0","c:apparmor_status -> r:0 processes are unconfined"],"condition":"all","command":"apparmor_status","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'apparmor_status'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19035
sca.check.title: Ensure all AppArmor Profiles are in enforce or complain mode.
sca.check.description: AppArmor profiles define what resources applications are able to access.
sca.check.rationale: Security configuration requirements vary from site to site. Some sites may mandate a policy that is stricter than the default policy, which is perfectly acceptable. This item is intended to ensure that any policies that exist on the system are activated.
sca.check.remediation: Run the following command to set all profiles to enforce mode: # aa-enforce /etc/apparmor.d/* OR Run the following command to set all profiles to complain mode: # aa-complain /etc/apparmor.d/* Note: Any unconfined processes may need to have a profile created or activated for them and then be restarted.
sca.check.compliance.cis: 1.6.1.3
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["apparmor_status"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'apparmor_status'

** Alert 1706006476.133605: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure all AppArmor Profiles are enforcing.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19036,"title":"Ensure all AppArmor Profiles are enforcing.","description":"AppArmor profiles define what resources applications are able to access.","rationale":"Security configuration requirements vary from site to site. Some sites may mandate a policy that is stricter than the default policy, which is perfectly acceptable. This item is intended to ensure that any policies that exist on the system are activated.","remediation":"Run the following command to set all profiles to enforce mode: # aa-enforce /etc/apparmor.d/* Note: Any unconfined processes may need to have a profile created or activated for them and then be restarted.","compliance":{"cis":"1.6.1.4","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_tactics":"TA0005","mitre_techniques":"T1068,T1565,T1565.001,T1565.003","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:apparmor_status -> n:^(\\d+)\\s+profiles\\s+are\\s+loaded compare > 0","c:apparmor_status -> n:^(\\d+)\\s+profiles\\s+are\\s+in\\s+enforce\\s+mode compare > 0","c:apparmor_status -> r:^0\\s*profiles\\s+are\\s+in\\s+complain\\s+mode","c:apparmor_status -> r:^0\\s*processes\\s+are\\s+unconfined"],"condition":"all","command":"apparmor_status","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'apparmor_status'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19036
sca.check.title: Ensure all AppArmor Profiles are enforcing.
sca.check.description: AppArmor profiles define what resources applications are able to access.
sca.check.rationale: Security configuration requirements vary from site to site. Some sites may mandate a policy that is stricter than the default policy, which is perfectly acceptable. This item is intended to ensure that any policies that exist on the system are activated.
sca.check.remediation: Run the following command to set all profiles to enforce mode: # aa-enforce /etc/apparmor.d/* Note: Any unconfined processes may need to have a profile created or activated for them and then be restarted.
sca.check.compliance.cis: 1.6.1.4
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1068,T1565,T1565.001,T1565.003
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["apparmor_status"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'apparmor_status'

** Alert 1706006476.137078: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure message of the day is configured properly.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19037,"title":"Ensure message of the day is configured properly.","description":"The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users. Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \\m - machine architecture \\r - operating system release \\s - operating system name \\v - operating system version.","rationale":"Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the \" uname -a \" command once they have logged in.","remediation":"Edit the /etc/motd file with the appropriate contents according to your site policy, remove any instances of \\m , \\r , \\s , \\v or references to the OS platform. Add or update the message text to follow local site policy. Example Text: # echo \"Authorized use only. All activity may be monitored and reported.\" > /etc/issue.net -- OR -- If the motd is not used, this file can be removed. Run the following command to remove the motd file: # rm /etc/motd.","compliance":{"cis":"1.7.1","mitre_tactics":"TA0007","mitre_techniques":"T1082,T1592,T1592.004"},"rules":["not f:/etc/motd -> r:\\\\v|\\\\r|\\\\m|\\\\s|Debian|Ubuntu","not f:/etc/motd"],"condition":"any","file":"/etc/motd","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19037
sca.check.title: Ensure message of the day is configured properly.
sca.check.description: The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users. Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \m - machine architecture \r - operating system release \s - operating system name \v - operating system version.
sca.check.rationale: Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the " uname -a " command once they have logged in.
sca.check.remediation: Edit the /etc/motd file with the appropriate contents according to your site policy, remove any instances of \m , \r , \s , \v or references to the OS platform. Add or update the message text to follow local site policy. Example Text: # echo "Authorized use only. All activity may be monitored and reported." > /etc/issue.net -- OR -- If the motd is not used, this file can be removed. Run the following command to remove the motd file: # rm /etc/motd.
sca.check.compliance.cis: 1.7.1
sca.check.compliance.mitre_tactics: TA0007
sca.check.compliance.mitre_techniques: T1082,T1592,T1592.004
sca.check.file: ["/etc/motd"]
sca.check.result: passed

** Alert 1706006476.141363: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure local login warning banner is configured properly.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19038,"title":"Ensure local login warning banner is configured properly.","description":"The contents of the /etc/issue file are displayed to users prior to login for local terminals. Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \\m - machine architecture \\r - operating system release \\s - operating system name \\v - operating system version - or the operating system's name.","rationale":"Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the \" uname -a \" command once they have logged in.","remediation":"Edit the /etc/issue file with the appropriate contents according to your site policy, remove any instances of \\m , \\r , \\s , \\v or references to the OS platform. Add or update the message text to follow local site policy. Example Text: # echo \"Authorized use only. All activity may be monitored and reported.\" > /etc/issue.net.","compliance":{"cis":"1.7.2","mitre_tactics":"TA0007","mitre_techniques":"T1082,T1592,T1592.004"},"rules":["f:/etc/issue -> r:\\\\v|\\\\r|\\\\m|\\\\s|Debian|Ubuntu"],"condition":"none","file":"/etc/issue","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19038
sca.check.title: Ensure local login warning banner is configured properly.
sca.check.description: The contents of the /etc/issue file are displayed to users prior to login for local terminals. Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \m - machine architecture \r - operating system release \s - operating system name \v - operating system version - or the operating system's name.
sca.check.rationale: Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the " uname -a " command once they have logged in.
sca.check.remediation: Edit the /etc/issue file with the appropriate contents according to your site policy, remove any instances of \m , \r , \s , \v or references to the OS platform. Add or update the message text to follow local site policy. Example Text: # echo "Authorized use only. All activity may be monitored and reported." > /etc/issue.net.
sca.check.compliance.cis: 1.7.2
sca.check.compliance.mitre_tactics: TA0007
sca.check.compliance.mitre_techniques: T1082,T1592,T1592.004
sca.check.file: ["/etc/issue"]
sca.check.result: failed

** Alert 1706006476.145396: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure remote login warning banner is configured properly.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19039,"title":"Ensure remote login warning banner is configured properly.","description":"The contents of the /etc/issue.net file are displayed to users prior to login for remote connections from configured services. Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \\m - machine architecture \\r - operating system release \\s - operating system name \\v - operating system version.","rationale":"Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the \" uname -a \" command once they have logged in.","remediation":"Edit the /etc/issue.net file with the appropriate contents according to your site policy, remove any instances of \\m , \\r , \\s , \\v or references to the OS platform. Add or update the message text to follow local site policy. Example Text: # echo \"Authorized use only. All activity may be monitored and reported.\" > /etc/issue.net.","compliance":{"cis":"1.7.3","mitre_tactics":"TA0007","mitre_techniques":"T1018,T1082,T1592,T1592.004"},"rules":["f:/etc/issue.net -> r:\\\\v|\\\\r|\\\\m|\\\\s|Debian|Ubuntu"],"condition":"none","file":"/etc/issue.net","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19039
sca.check.title: Ensure remote login warning banner is configured properly.
sca.check.description: The contents of the /etc/issue.net file are displayed to users prior to login for remote connections from configured services. Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \m - machine architecture \r - operating system release \s - operating system name \v - operating system version.
sca.check.rationale: Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the " uname -a " command once they have logged in.
sca.check.remediation: Edit the /etc/issue.net file with the appropriate contents according to your site policy, remove any instances of \m , \r , \s , \v or references to the OS platform. Add or update the message text to follow local site policy. Example Text: # echo "Authorized use only. All activity may be monitored and reported." > /etc/issue.net.
sca.check.compliance.cis: 1.7.3
sca.check.compliance.mitre_tactics: TA0007
sca.check.compliance.mitre_techniques: T1018,T1082,T1592,T1592.004
sca.check.file: ["/etc/issue.net"]
sca.check.result: failed

** Alert 1706006476.149462: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure permissions on /etc/motd are configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19040,"title":"Ensure permissions on /etc/motd are configured.","description":"The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users.","rationale":"If the /etc/motd file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information.","remediation":"Run the following commands to set permissions on /etc/motd : # chown root:root $(readlink -e /etc/motd) # chmod u-x,go-wx $(readlink -e /etc/motd) -- OR -- Run the following command to remove the /etc/motd file: # rm /etc/motd.","compliance":{"cis":"1.7.4","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1222,T1222.002","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:stat /etc/motd -> r:Access:\\s*\\(0644/-rw-r--r--\\)\\s*Uid:\\s*\\(\\s*\\t*0/\\s*\\t*root\\)\\s*\\t*Gid:\\s*\\(\\s*\\t*0/\\s*\\t*root\\)","not f:/etc/motd"],"condition":"any","file":"/etc/motd","command":"stat /etc/motd","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19040
sca.check.title: Ensure permissions on /etc/motd are configured.
sca.check.description: The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users.
sca.check.rationale: If the /etc/motd file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information.
sca.check.remediation: Run the following commands to set permissions on /etc/motd : # chown root:root $(readlink -e /etc/motd) # chmod u-x,go-wx $(readlink -e /etc/motd) -- OR -- Run the following command to remove the /etc/motd file: # rm /etc/motd.
sca.check.compliance.cis: 1.7.4
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1222,T1222.002
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.file: ["/etc/motd"]
sca.check.command: ["stat /etc/motd"]
sca.check.result: passed

** Alert 1706006476.152654: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure permissions on /etc/issue are configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19041,"title":"Ensure permissions on /etc/issue are configured.","description":"The contents of the /etc/issue file are displayed to users prior to login for local terminals.","rationale":"If the /etc/issue file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information.","remediation":"Run the following commands to set permissions on /etc/issue: # chown root:root $(readlink -e /etc/issue) # chmod u-x,go-wx $(readlink -e /etc/issue).","compliance":{"cis":"1.7.5","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1222,T1222.002","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:stat /etc/issue -> r:Access:\\s*\\(0644/-rw-r--r--\\)\\s*Uid:\\s*\\(\\s*\\t*0/\\s*\\t*root\\)\\s*\\t*Gid:\\s*\\(\\s*\\t*0/\\s*\\t*root\\)"],"condition":"all","command":"stat /etc/issue","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19041
sca.check.title: Ensure permissions on /etc/issue are configured.
sca.check.description: The contents of the /etc/issue file are displayed to users prior to login for local terminals.
sca.check.rationale: If the /etc/issue file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information.
sca.check.remediation: Run the following commands to set permissions on /etc/issue: # chown root:root $(readlink -e /etc/issue) # chmod u-x,go-wx $(readlink -e /etc/issue).
sca.check.compliance.cis: 1.7.5
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1222,T1222.002
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["stat /etc/issue"]
sca.check.result: passed

** Alert 1706006476.155557: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure permissions on /etc/issue.net are configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19042,"title":"Ensure permissions on /etc/issue.net are configured.","description":"The contents of the /etc/issue.net file are displayed to users prior to login for remote connections from configured services.","rationale":"If the /etc/issue.net file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information.","remediation":"Run the following commands to set permissions on /etc/issue.net : # chown root:root $(readlink -e /etc/issue.net) # chmod u-x,go-wx $(readlink -e /etc/issue.net).","compliance":{"cis":"1.7.6","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1222,T1222.002","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:stat /etc/issue.net -> r:Access:\\s*\\(0644/-rw-r--r--\\)\\s*Uid:\\s*\\(\\s*\\t*0/\\s*\\t*root\\)\\s*\\t*Gid:\\s*\\(\\s*\\t*0/\\s*\\t*root\\)"],"condition":"all","command":"stat /etc/issue.net","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19042
sca.check.title: Ensure permissions on /etc/issue.net are configured.
sca.check.description: The contents of the /etc/issue.net file are displayed to users prior to login for remote connections from configured services.
sca.check.rationale: If the /etc/issue.net file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information.
sca.check.remediation: Run the following commands to set permissions on /etc/issue.net : # chown root:root $(readlink -e /etc/issue.net) # chmod u-x,go-wx $(readlink -e /etc/issue.net).
sca.check.compliance.cis: 1.7.6
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1222,T1222.002
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["stat /etc/issue.net"]
sca.check.result: passed

** Alert 1706006476.158582: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure GNOME Display Manager is removed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19043,"title":"Ensure GNOME Display Manager is removed.","description":"The GNOME Display Manager (GDM) is a program that manages graphical display servers and handles graphical user logins.","rationale":"If a Graphical User Interface (GUI) is not required, it should be removed to reduce the attack surface of the system.","remediation":"Run the following command to uninstall gdm3: # apt purge gdm3.","compliance":{"cis":"1.8.1","cis_csc_v8":"4.8","cis_csc_v7":"9.2","cmmc_v2.0":"CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","iso_27001-2013":"A.13.1.3","mitre_tactics":"TA0002","mitre_techniques":"T1543,T1543.002","pci_dss_v3.2.1":"1.1.6,1.2.1,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,2.2.4,6.4.1","soc_2":"CC6.3,CC6.6"},"rules":["c:dpkg -s gdm3 -> r: package 'gdm3' is not installed"],"condition":"all","command":"dpkg -s gdm3","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19043
sca.check.title: Ensure GNOME Display Manager is removed.
sca.check.description: The GNOME Display Manager (GDM) is a program that manages graphical display servers and handles graphical user logins.
sca.check.rationale: If a Graphical User Interface (GUI) is not required, it should be removed to reduce the attack surface of the system.
sca.check.remediation: Run the following command to uninstall gdm3: # apt purge gdm3.
sca.check.compliance.cis: 1.8.1
sca.check.compliance.cis_csc_v8: 4.8
sca.check.compliance.cis_csc_v7: 9.2
sca.check.compliance.cmmc_v2.0: CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.3
sca.check.compliance.mitre_tactics: TA0002
sca.check.compliance.mitre_techniques: T1543,T1543.002
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,2.2.4,6.4.1
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.command: ["dpkg -s gdm3"]
sca.check.result: passed

** Alert 1706006476.160872: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure XDCMP is not enabled.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19044,"title":"Ensure XDCMP is not enabled.","description":"X Display Manager Control Protocol (XDMCP) is designed to provide authenticated access to display management services for remote displays.","rationale":"XDMCP is inherently insecure. - XDMCP is not a ciphered protocol. This may allow an attacker to capture keystrokes entered by a user - XDMCP is vulnerable to man-in-the-middle attacks. This may allow an attacker to steal the credentials of legitimate users by impersonating the XDMCP server.","remediation":"Edit the file /etc/gdm3/custom.conf and remove the line: Enable=true.","compliance":{"cis":"1.8.10","cis_csc_v8":"4.8","cis_csc_v7":"9.2","cmmc_v2.0":"CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","iso_27001-2013":"A.13.1.3","mitre_mitigations":"M1050","mitre_tactics":"TA0002","mitre_techniques":"T1040,T1056,T1056.001,T1557","pci_dss_v3.2.1":"1.1.6,1.2.1,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,2.2.4,6.4.1","soc_2":"CC6.3,CC6.6"},"rules":["not f:/etc/gdm3/custom.conf -> r:^\\s*Enable\\s*=\\s*true"],"condition":"all","file":"/etc/gdm3/custom.conf","status":"Not applicable","reason":"Could not open file '/etc/gdm3/custom.conf'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19044
sca.check.title: Ensure XDCMP is not enabled.
sca.check.description: X Display Manager Control Protocol (XDMCP) is designed to provide authenticated access to display management services for remote displays.
sca.check.rationale: XDMCP is inherently insecure. - XDMCP is not a ciphered protocol. This may allow an attacker to capture keystrokes entered by a user - XDMCP is vulnerable to man-in-the-middle attacks. This may allow an attacker to steal the credentials of legitimate users by impersonating the XDMCP server.
sca.check.remediation: Edit the file /etc/gdm3/custom.conf and remove the line: Enable=true.
sca.check.compliance.cis: 1.8.10
sca.check.compliance.cis_csc_v8: 4.8
sca.check.compliance.cis_csc_v7: 9.2
sca.check.compliance.cmmc_v2.0: CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.3
sca.check.compliance.mitre_mitigations: M1050
sca.check.compliance.mitre_tactics: TA0002
sca.check.compliance.mitre_techniques: T1040,T1056,T1056.001,T1557
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,2.2.4,6.4.1
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.file: ["/etc/gdm3/custom.conf"]
sca.check.result: not applicable
sca.check.reason: Could not open file '/etc/gdm3/custom.conf'

** Alert 1706006476.163778: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure a single time synchronization daemon is in use.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19045,"title":"Ensure a single time synchronization daemon is in use.","description":"System time should be synchronized between all systems in an environment. This is typically done by establishing an authoritative time server or set of servers and having all systems synchronize their clocks to them. Note: - On virtual systems where host based time synchronization is available consult your virtualization software documentation and verify that host based synchronization is in use and follows local site policy. In this scenario, this section should be skipped - Only one time synchronization method should be in use on the system. Configuring multiple time synchronization methods could lead to unexpected or unreliable results.","rationale":"Time synchronization is important to support time sensitive security mechanisms and ensures log files have consistent time records across the enterprise, which aids in forensic investigations.","remediation":"On physical systems, and virtual systems where host based time synchronization is not available. Select one of the three time synchronization daemons; chrony (1), systemd-timesyncd (2), or ntp (3), and following the remediation procedure for the selected daemon. Note: enabling more than one synchronization daemon could lead to unexpected or unreliable results: 1. chrony Run the following command to install chrony: # apt install chrony Run the following commands to stop and mask the systemd-timesyncd daemon: # systemctl stop systemd-timesyncd.service # systemctl --now mask systemd-timesyncd.service Run the following command to remove the ntp package: # apt purge ntp NOTE: - Subsection: Configure chrony should be followed - Subsections: Configure systemd-timesyncd and Configure ntp should be skipped 2. systemd-timesyncd Run the following command to remove the chrony package: # apt purge chrony Run the following command to remove the ntp package: # apt purge ntp NOTE: - Subsection: Configure systemd-timesyncd should be followed - Subsections: Configure chrony and Configure ntp should be skipped 3. ntp Run the following command to install ntp: # apt install ntp Run the following commands to stop and mask the systemd-timesyncd daemon: # systemctl stop systemd-timesyncd.service # systemctl --now mask systemd-timesyncd.service Run the following command to remove the chrony package: # apt purge chrony NOTE: - Subsection: Configure ntp should be followed - Subsections: Configure chrony and Configure systemd-timesyncd should be skipped.","compliance":{"cis":"2.1.1.1","cis_csc_v8":"8.4","cis_csc_v7":"6.1","cmmc_v2.0":"AU.L2-3.3.7","iso_27001-2013":"A.12.4.4","mitre_tactics":"TA0005","mitre_techniques":"T1070,T1070.002,T1562,T1562.001","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"10.4","pci_dss_v4.0":"10.6,10.6.1,10.6.2,10.6.3","soc_2":"CC4.1,CC5.2"},"rules":["c:dpkg -s ntp -> r:install ok installed","c:dpkg -s chrony -> r:install ok installed","c:systemctl is-enabled systemd-timesyncd -> r:^enabled"],"condition":"any","command":"dpkg -s ntp,dpkg -s chrony,systemctl is-enabled systemd-timesyncd","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'systemctl is-enabled systemd-timesyncd'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19045
sca.check.title: Ensure a single time synchronization daemon is in use.
sca.check.description: System time should be synchronized between all systems in an environment. This is typically done by establishing an authoritative time server or set of servers and having all systems synchronize their clocks to them. Note: - On virtual systems where host based time synchronization is available consult your virtualization software documentation and verify that host based synchronization is in use and follows local site policy. In this scenario, this section should be skipped - Only one time synchronization method should be in use on the system. Configuring multiple time synchronization methods could lead to unexpected or unreliable results.
sca.check.rationale: Time synchronization is important to support time sensitive security mechanisms and ensures log files have consistent time records across the enterprise, which aids in forensic investigations.
sca.check.remediation: On physical systems, and virtual systems where host based time synchronization is not available. Select one of the three time synchronization daemons; chrony (1), systemd-timesyncd (2), or ntp (3), and following the remediation procedure for the selected daemon. Note: enabling more than one synchronization daemon could lead to unexpected or unreliable results: 1. chrony Run the following command to install chrony: # apt install chrony Run the following commands to stop and mask the systemd-timesyncd daemon: # systemctl stop systemd-timesyncd.service # systemctl --now mask systemd-timesyncd.service Run the following command to remove the ntp package: # apt purge ntp NOTE: - Subsection: Configure chrony should be followed - Subsections: Configure systemd-timesyncd and Configure ntp should be skipped 2. systemd-timesyncd Run the following command to remove the chrony package: # apt purge chrony Run the following command to remove the ntp package: # apt purge ntp NOTE: - Subsection: Configure systemd-timesyncd should be followed - Subsections: Configure chrony and Configure ntp should be skipped 3. ntp Run the following command to install ntp: # apt install ntp Run the following commands to stop and mask the systemd-timesyncd daemon: # systemctl stop systemd-timesyncd.service # systemctl --now mask systemd-timesyncd.service Run the following command to remove the chrony package: # apt purge chrony NOTE: - Subsection: Configure ntp should be followed - Subsections: Configure chrony and Configure systemd-timesyncd should be skipped.
sca.check.compliance.cis: 2.1.1.1
sca.check.compliance.cis_csc_v8: 8.4
sca.check.compliance.cis_csc_v7: 6.1
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.7
sca.check.compliance.iso_27001-2013: A.12.4.4
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1070,T1070.002,T1562,T1562.001
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.4
sca.check.compliance.pci_dss_v4.0: 10.6,10.6.1,10.6.2,10.6.3
sca.check.compliance.soc_2: CC4.1,CC5.2
sca.check.command: ["dpkg -s ntp", "dpkg -s chrony", "systemctl is-enabled systemd-timesyncd"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'systemctl is-enabled systemd-timesyncd'

** Alert 1706006476.170754: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure chrony is configured with authorized timeserver.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19046,"title":"Ensure chrony is configured with authorized timeserver.","description":"-> server - The server directive specifies an NTP server which can be used as a time source. The client-server relationship is strictly hierarchical: a client might synchronize its system time to that of the server, but the server's system time will never be influenced by that of a client. - This directive can be used multiple times to specify multiple servers. o The directive is immediately followed by either the name of the server, or its IP address. -> pool - The syntax of this directive is similar to that for the server directive, except that it is used to specify a pool of NTP servers rather than a single NTP server. The pool name is expected to resolve to multiple addresses which might change over time. - This directive can be used multiple times to specify multiple pools. - All options valid in the server directive can be used in this directive too.","rationale":"Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations.","remediation":"Edit /etc/chrony/chrony.conf or a file ending in .sources in /etc/chrony/sources.d/ and add or edit server or pool lines as appropriate according to local site policy: <[server|pool]> <[remote-server|remote-pool]> Examples: pool directive: pool time.nist.gov iburst maxsources 4 #The maxsources option is unique to the pool directive server directive: server time-a-g.nist.gov iburst server 132.163.97.3 iburst server time-d-b.nist.gov iburst Run one of the following commands to load the updated time sources into chronyd running config: # systemctl restart chronyd - OR if sources are in a .sources file - # chronyc reload sources OR If another time synchronization service is in use on the system, run the following command to remove chrony from the system: # apt purge chrony.","compliance":{"cis":"2.1.2.1","cis_csc_v8":"8.4","cis_csc_v7":"6.1","cmmc_v2.0":"AU.L2-3.3.7","iso_27001-2013":"A.12.4.4","mitre_mitigations":"M1022","mitre_tactics":"TA0002","mitre_techniques":"T1070,T1070.002,T1562,T1562.001","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"10.4","pci_dss_v4.0":"10.6,10.6.1,10.6.2,10.6.3","soc_2":"CC4.1,CC5.2"},"rules":["c:ps -ef -> r:^_chrony && r:/chronyd","f:/etc/chrony/chrony.conf -> r:^server\\.+|^pool\\.+"],"condition":"all","command":"ps -ef","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19046
sca.check.title: Ensure chrony is configured with authorized timeserver.
sca.check.description: -> server - The server directive specifies an NTP server which can be used as a time source. The client-server relationship is strictly hierarchical: a client might synchronize its system time to that of the server, but the server's system time will never be influenced by that of a client. - This directive can be used multiple times to specify multiple servers. o The directive is immediately followed by either the name of the server, or its IP address. -> pool - The syntax of this directive is similar to that for the server directive, except that it is used to specify a pool of NTP servers rather than a single NTP server. The pool name is expected to resolve to multiple addresses which might change over time. - This directive can be used multiple times to specify multiple pools. - All options valid in the server directive can be used in this directive too.
sca.check.rationale: Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations.
sca.check.remediation: Edit /etc/chrony/chrony.conf or a file ending in .sources in /etc/chrony/sources.d/ and add or edit server or pool lines as appropriate according to local site policy: <[server|pool]> <[remote-server|remote-pool]> Examples: pool directive: pool time.nist.gov iburst maxsources 4 #The maxsources option is unique to the pool directive server directive: server time-a-g.nist.gov iburst server 132.163.97.3 iburst server time-d-b.nist.gov iburst Run one of the following commands to load the updated time sources into chronyd running config: # systemctl restart chronyd - OR if sources are in a .sources file - # chronyc reload sources OR If another time synchronization service is in use on the system, run the following command to remove chrony from the system: # apt purge chrony.
sca.check.compliance.cis: 2.1.2.1
sca.check.compliance.cis_csc_v8: 8.4
sca.check.compliance.cis_csc_v7: 6.1
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.7
sca.check.compliance.iso_27001-2013: A.12.4.4
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0002
sca.check.compliance.mitre_techniques: T1070,T1070.002,T1562,T1562.001
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.4
sca.check.compliance.pci_dss_v4.0: 10.6,10.6.1,10.6.2,10.6.3
sca.check.compliance.soc_2: CC4.1,CC5.2
sca.check.command: ["ps -ef"]
sca.check.result: failed

** Alert 1706006476.176300: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure chrony is running as user _chrony.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19047,"title":"Ensure chrony is running as user _chrony.","description":"The chrony package is installed with a dedicated user account _chrony. This account is granted the access required by the chronyd service.","rationale":"The chronyd service should run with only the required privileges.","remediation":"Add or edit the user line to /etc/chrony/chrony.conf or a file ending in .conf in /etc/chrony/conf.d/: user _chrony OR If another time synchronization service is in use on the system, run the following command to remove chrony from the system: # apt purge chrony.","compliance":{"cis":"2.1.2.2","cis_csc_v8":"8.4","cis_csc_v7":"6.1","cmmc_v2.0":"AU.L2-3.3.7","iso_27001-2013":"A.12.4.4","mitre_mitigations":"M1022","mitre_tactics":"TA0002","mitre_techniques":"T1070,T1070.002,T1562,T1562.001","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"10.4","pci_dss_v4.0":"10.6,10.6.1,10.6.2,10.6.3","soc_2":"CC4.1,CC5.2"},"rules":["f:/etc/chrony/chrony.conf -> r:^user _chrony"],"condition":"all","file":"/etc/chrony/chrony.conf","status":"Not applicable","reason":"Could not open file '/etc/chrony/chrony.conf'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19047
sca.check.title: Ensure chrony is running as user _chrony.
sca.check.description: The chrony package is installed with a dedicated user account _chrony. This account is granted the access required by the chronyd service.
sca.check.rationale: The chronyd service should run with only the required privileges.
sca.check.remediation: Add or edit the user line to /etc/chrony/chrony.conf or a file ending in .conf in /etc/chrony/conf.d/: user _chrony OR If another time synchronization service is in use on the system, run the following command to remove chrony from the system: # apt purge chrony.
sca.check.compliance.cis: 2.1.2.2
sca.check.compliance.cis_csc_v8: 8.4
sca.check.compliance.cis_csc_v7: 6.1
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.7
sca.check.compliance.iso_27001-2013: A.12.4.4
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0002
sca.check.compliance.mitre_techniques: T1070,T1070.002,T1562,T1562.001
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.4
sca.check.compliance.pci_dss_v4.0: 10.6,10.6.1,10.6.2,10.6.3
sca.check.compliance.soc_2: CC4.1,CC5.2
sca.check.file: ["/etc/chrony/chrony.conf"]
sca.check.result: not applicable
sca.check.reason: Could not open file '/etc/chrony/chrony.conf'

** Alert 1706006476.179180: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure chrony is enabled and running.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19048,"title":"Ensure chrony is enabled and running.","description":"chrony is a daemon for synchronizing the system clock across the network.","rationale":"chrony needs to be enabled and running in order to synchronize the system to a timeserver. Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations.","remediation":"IF chrony is in use on the system, run the following commands: Run the following command to unmask chrony.service: # systemctl unmask chrony.service Run the following command to enable and start chrony.service: # systemctl --now enable chrony.service OR If another time synchronization service is in use on the system, run the following command to remove chrony: # apt purge chrony.","compliance":{"cis":"2.1.2.3","cis_csc_v8":"8.4","cis_csc_v7":"6.1","cmmc_v2.0":"AU.L2-3.3.7","iso_27001-2013":"A.12.4.4","mitre_mitigations":"M1022","mitre_tactics":"TA0002","mitre_techniques":"T1070,T1070.002,T1562,T1562.001","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"10.4","pci_dss_v4.0":"10.6,10.6.1,10.6.2,10.6.3","soc_2":"CC4.1,CC5.2"},"rules":["c:systemctl is-enabled chrony.service -> r:^enabled","c:systemctl is-active chrony.service -> r:^active"],"condition":"all","command":"systemctl is-enabled chrony.service,systemctl is-active chrony.service","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'systemctl is-enabled chrony.service'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19048
sca.check.title: Ensure chrony is enabled and running.
sca.check.description: chrony is a daemon for synchronizing the system clock across the network.
sca.check.rationale: chrony needs to be enabled and running in order to synchronize the system to a timeserver. Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations.
sca.check.remediation: IF chrony is in use on the system, run the following commands: Run the following command to unmask chrony.service: # systemctl unmask chrony.service Run the following command to enable and start chrony.service: # systemctl --now enable chrony.service OR If another time synchronization service is in use on the system, run the following command to remove chrony: # apt purge chrony.
sca.check.compliance.cis: 2.1.2.3
sca.check.compliance.cis_csc_v8: 8.4
sca.check.compliance.cis_csc_v7: 6.1
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.7
sca.check.compliance.iso_27001-2013: A.12.4.4
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0002
sca.check.compliance.mitre_techniques: T1070,T1070.002,T1562,T1562.001
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.4
sca.check.compliance.pci_dss_v4.0: 10.6,10.6.1,10.6.2,10.6.3
sca.check.compliance.soc_2: CC4.1,CC5.2
sca.check.command: ["systemctl is-enabled chrony.service", "systemctl is-active chrony.service"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'systemctl is-enabled chrony.service'

** Alert 1706006476.182830: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure systemd-timesyncd configured with authorized timeserver.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19049,"title":"Ensure systemd-timesyncd configured with authorized timeserver.","description":"NTP= - A space-separated list of NTP server host names or IP addresses. During runtime this list is combined with any per-interface NTP servers acquired from systemd-networkd.service(8). systemd-timesyncd will contact all configured system or per-interface servers in turn, until one responds. When the empty string is assigned, the list of NTP servers is reset, and all prior assignments will have no effect. This setting defaults to an empty list. FallbackNTP= - A space-separated list of NTP server host names or IP addresses to be used as the fallback NTP servers. Any per-interface NTP servers obtained from systemd-networkd.service(8) take precedence over this setting, as do any servers set via NTP= above. This setting is hence only relevant if no other NTP server information is known. When the empty string is assigned, the list of NTP servers is reset, and all prior assignments will have no effect. If this option is not given, a compiled-in list of NTP servers is used.","rationale":"Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations.","remediation":"Edit /etc/systemd/timesyncd.conf and add the NTP= and/or FallbackNTP= lines to the [Time] section: Example: [Time] NTP=time.nist.gov # Uses the generic name for NIST's time servers -AND/OR- FallbackNTP=time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov # Space separated list of NIST time servers Note: Servers added to these line(s) should follow local site policy. NIST servers are for example. Example script: The following example script will add the example NIST time servers to /etc/systemd/timesyncd.conf #!/usr/bin/env bash { l_ntp_ts=\"time.nist.gov\" l_ntp_fb=\"time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov\" l_conf_file=\"/etc/systemd/timesyncd.conf\" if ! grep -Ph '^\\h*NTP=\\H+' \"$l_conf_file\"; then ! grep -Pqs '^\\h*\\[Time\\]' \"$l_conf_file\" && echo \"[Time]\" >> \"$l_conf_file\" echo \"NTP=$l_ntp_ts\" >> \"$l_conf_file\" fi if ! grep -Ph '^\\h*FallbackNTP=\\H+' \"$l_conf_file\"; then ! grep -Pqs '^\\h*\\[Time\\]' \"$l_conf_file\" && echo \"[Time]\" >> \"$l_conf_file\" echo \"FallbackNTP=$l_ntp_fb\" >> \"$l_conf_file\" fi } Run the following command to reload the systemd-timesyncd configuration: # systemctl try-reload-or-restart systemd-timesyncd -OR- If another time synchronization service is in use on the system, run the following command to stop and mask systemd-timesyncd: # systemctl --now mask systemd-timesyncd.","compliance":{"cis":"2.1.3.1","cis_csc_v8":"8.4","cis_csc_v7":"6.1","cmmc_v2.0":"AU.L2-3.3.7","iso_27001-2013":"A.12.4.4","mitre_mitigations":"M1022","mitre_tactics":"TA0002","mitre_techniques":"T1070,T1070.002,T1562,T1562.001","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"10.4","pci_dss_v4.0":"10.6,10.6.1,10.6.2,10.6.3","soc_2":"CC4.1,CC5.2"},"rules":["d:/etc/systemd","d:/etc/systemd -> r:\\.+.conf$","d:/etc/systemd -> r:\\.+.conf$ -> r:^\\s*NTP=|^\\s*FallbackNTP="],"condition":"all","references":"https://www.freedesktop.org/software/systemd/man/timesyncd.conf.html,https://tf.nist.gov/tf-cgi/servers.cgi","directory":"/etc/systemd","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19049
sca.check.title: Ensure systemd-timesyncd configured with authorized timeserver.
sca.check.description: NTP= - A space-separated list of NTP server host names or IP addresses. During runtime this list is combined with any per-interface NTP servers acquired from systemd-networkd.service(8). systemd-timesyncd will contact all configured system or per-interface servers in turn, until one responds. When the empty string is assigned, the list of NTP servers is reset, and all prior assignments will have no effect. This setting defaults to an empty list. FallbackNTP= - A space-separated list of NTP server host names or IP addresses to be used as the fallback NTP servers. Any per-interface NTP servers obtained from systemd-networkd.service(8) take precedence over this setting, as do any servers set via NTP= above. This setting is hence only relevant if no other NTP server information is known. When the empty string is assigned, the list of NTP servers is reset, and all prior assignments will have no effect. If this option is not given, a compiled-in list of NTP servers is used.
sca.check.rationale: Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations.
sca.check.remediation: Edit /etc/systemd/timesyncd.conf and add the NTP= and/or FallbackNTP= lines to the [Time] section: Example: [Time] NTP=time.nist.gov # Uses the generic name for NIST's time servers -AND/OR- FallbackNTP=time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov # Space separated list of NIST time servers Note: Servers added to these line(s) should follow local site policy. NIST servers are for example. Example script: The following example script will add the example NIST time servers to /etc/systemd/timesyncd.conf #!/usr/bin/env bash { l_ntp_ts="time.nist.gov" l_ntp_fb="time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov" l_conf_file="/etc/systemd/timesyncd.conf" if ! grep -Ph '^\h*NTP=\H+' "$l_conf_file"; then ! grep -Pqs '^\h*\[Time\]' "$l_conf_file" && echo "[Time]" >> "$l_conf_file" echo "NTP=$l_ntp_ts" >> "$l_conf_file" fi if ! grep -Ph '^\h*FallbackNTP=\H+' "$l_conf_file"; then ! grep -Pqs '^\h*\[Time\]' "$l_conf_file" && echo "[Time]" >> "$l_conf_file" echo "FallbackNTP=$l_ntp_fb" >> "$l_conf_file" fi } Run the following command to reload the systemd-timesyncd configuration: # systemctl try-reload-or-restart systemd-timesyncd -OR- If another time synchronization service is in use on the system, run the following command to stop and mask systemd-timesyncd: # systemctl --now mask systemd-timesyncd.
sca.check.compliance.cis: 2.1.3.1
sca.check.compliance.cis_csc_v8: 8.4
sca.check.compliance.cis_csc_v7: 6.1
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.7
sca.check.compliance.iso_27001-2013: A.12.4.4
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0002
sca.check.compliance.mitre_techniques: T1070,T1070.002,T1562,T1562.001
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.4
sca.check.compliance.pci_dss_v4.0: 10.6,10.6.1,10.6.2,10.6.3
sca.check.compliance.soc_2: CC4.1,CC5.2
sca.check.references: https://www.freedesktop.org/software/systemd/man/timesyncd.conf.html,https://tf.nist.gov/tf-cgi/servers.cgi
sca.check.directory: ["/etc/systemd"]
sca.check.result: failed

** Alert 1706006476.190041: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure systemd-timesyncd is enabled and running.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19050,"title":"Ensure systemd-timesyncd is enabled and running.","description":"systemd-timesyncd is a daemon that has been added for synchronizing the system clock across the network.","rationale":"systemd-timesyncd needs to be enabled and running in order to synchronize the system to a timeserver. Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations.","remediation":"IF systemd-timesyncd is in use on the system, run the following commands: Run the following command to unmask systemd-timesyncd.service: # systemctl unmask systemd-timesyncd.service Run the following command to enable and start systemd-timesyncd.service: # systemctl --now enable systemd-timesyncd.service OR If another time synchronization service is in use on the system, run the following command to stop and mask systemd-timesyncd: # systemctl --now mask systemd-timesyncd.service.","compliance":{"cis":"2.1.3.2","cis_csc_v8":"8.4","cis_csc_v7":"6.1","cmmc_v2.0":"AU.L2-3.3.7","iso_27001-2013":"A.12.4.4","mitre_mitigations":"M1022","mitre_tactics":"TA0002","mitre_techniques":"T1070,T1070.002,T1562,T1562.001","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"10.4","pci_dss_v4.0":"10.6,10.6.1,10.6.2,10.6.3","soc_2":"CC4.1,CC5.2"},"rules":["c:systemctl is-enabled systemd-timesyncd.service -> r:^enabled","c:systemctl is-active systemd-timesyncd.service -> r:^active"],"condition":"all","command":"systemctl is-enabled systemd-timesyncd.service,systemctl is-active systemd-timesyncd.service","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'systemctl is-enabled systemd-timesyncd.service'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19050
sca.check.title: Ensure systemd-timesyncd is enabled and running.
sca.check.description: systemd-timesyncd is a daemon that has been added for synchronizing the system clock across the network.
sca.check.rationale: systemd-timesyncd needs to be enabled and running in order to synchronize the system to a timeserver. Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations.
sca.check.remediation: IF systemd-timesyncd is in use on the system, run the following commands: Run the following command to unmask systemd-timesyncd.service: # systemctl unmask systemd-timesyncd.service Run the following command to enable and start systemd-timesyncd.service: # systemctl --now enable systemd-timesyncd.service OR If another time synchronization service is in use on the system, run the following command to stop and mask systemd-timesyncd: # systemctl --now mask systemd-timesyncd.service.
sca.check.compliance.cis: 2.1.3.2
sca.check.compliance.cis_csc_v8: 8.4
sca.check.compliance.cis_csc_v7: 6.1
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.7
sca.check.compliance.iso_27001-2013: A.12.4.4
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0002
sca.check.compliance.mitre_techniques: T1070,T1070.002,T1562,T1562.001
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.4
sca.check.compliance.pci_dss_v4.0: 10.6,10.6.1,10.6.2,10.6.3
sca.check.compliance.soc_2: CC4.1,CC5.2
sca.check.command: ["systemctl is-enabled systemd-timesyncd.service", "systemctl is-active systemd-timesyncd.service"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'systemctl is-enabled systemd-timesyncd.service'

** Alert 1706006476.194102: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure ntp access control is configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19051,"title":"Ensure ntp access control is configured.","description":"ntp Access Control Commands: restrict address [mask mask] [ippeerlimit int] [flag ...] The address argument expressed in dotted-quad form is the address of a host or network. Alternatively, the address argument can be a valid host DNS name. The mask argument expressed in dotted-quad form defaults to 255.255.255.255, meaning that the address is treated as the address of an individual host. A default entry (address 0.0.0.0, mask 0.0.0.0) is always included and is always the first entry in the list. Note: the text string default, with no mask option, may be used to indicate the default entry. The ippeerlimit directive limits the number of peer requests for each IP to int, where a value of -1 means \"unlimited\", the current default. A value of 0 means \"none\". There would usually be at most 1 peering request per IP, but if the remote peering requests are behind a proxy there could well be more than 1 per IP. In the current implementation, flag always restricts access, i.e., an entry with no flags indicates that free access to the server is to be given. The flags are not orthogonal, in that more restrictive flags will often make less restrictive ones redundant. The flags can generally be classed into two categories, those which restrict time service and those which restrict informational queries and attempts to do run-time reconfiguration of the server. One or more of the following flags may be specified: - kod - If this flag is set when an access violation occurs, a kiss-o'-death (KoD) packet is sent. KoD packets are rate limited to no more than one per second. If another KoD packet occurs within one second after the last one, the packet is dropped. - limited - Deny service if the packet spacing violates the lower limits specified in the discard command. A history of clients is kept using the monitoring capability of ntpd. Thus, monitoring is always active as long as there is a restriction entry with the limited flag. - lowpriotrap - Declare traps set by matching hosts to be low priority. The number of traps a server can maintain is limited (the current limit is 3). Traps are usually assigned on a first come, first served basis, with later trap requestors being denied service. This flag modifies the assignment algorithm by allowing low priority traps to be overridden by later requests for normal priority traps. - noepeer - Deny ephemeral peer requests, even if they come from an authenticated source. Note that the ability to use a symmetric key for authentication may be restricted to one or more IPs or subnets via the third field of the ntp.keys file. This restriction is not enabled by default, to maintain backward compatibility. Expect noepeer to become the default in ntp-4.4. - nomodify - Deny ntpq and ntpdc queries which attempt to modify the state of the server (i.e., run time reconfiguration). Queries which return information are permitted. - noquery - Deny ntpq and ntpdc queries. Time service is not affected. - nopeer - Deny unauthenticated packets which would result in mobilizing a new association. This includes broadcast and symmetric active packets when a configured association does not exist. It also includes pool associations, so if you want to use servers from a pool directive and also want to use nopeer by default, you'll want a restrict source ... line as well that does not include the nopeer directive. - noserve - Deny all packets except ntpq and ntpdc queries. - notrap - Decline to provide mode 6 control message trap service to matching hosts. The trap service is a subsystem of the ntpq control message protocol which is intended for use by remote event logging programs. - notrust - Deny service unless the packet is cryptographically authenticated. - ntpport - This is actually a match algorithm modifier, rather than a restriction flag. Its presence causes the restriction entry to be matched only if the source port in the packet is the standard NTP UDP port (123). Both ntpport and non-ntpport may be specified. The ntpport is considered more specific and is sorted later in the list.","rationale":"If ntp is in use on the system, proper configuration is vital to ensuring time synchronization is accurate.","remediation":"Add or edit restrict lines in /etc/ntp.conf to match the following: restrict -4 default kod nomodify notrap nopeer noquery restrict -6 default kod nomodify notrap nopeer noquery OR If another time synchronization service is in use on the system, run the following command to remove ntp from the system: # apt purge ntp.","compliance":{"cis":"2.1.4.1","cis_csc_v8":"8.4","cis_csc_v7":"6.1","cmmc_v2.0":"AU.L2-3.3.7","iso_27001-2013":"A.12.4.4","mitre_mitigations":"M1022","mitre_tactics":"TA0002","mitre_techniques":"T1070,T1070.002,T1498,T1498.002,T1562,T1562.001","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"10.4","pci_dss_v4.0":"10.6,10.6.1,10.6.2,10.6.3","soc_2":"CC4.1,CC5.2"},"rules":["f:/etc/ntp.conf -> r:^restrict\\s*\\t*-4\\s*\\t*default|^restrict\\s*\\t*default && r:\\s*kod && r:\\s*nomodify && r:\\s*notrap && r:\\s*nopeer && r:\\s*noquery","f:/etc/ntp.conf -> r:^restrict\\s*\\t*-6\\s*\\t*default && r:\\s*kod && r:\\s*nomodify && r:\\s*notrap && r:\\s*nopeer && r:\\s*noquery"],"condition":"all","references":"http://www.ntp.org/","file":"/etc/ntp.conf","status":"Not applicable","reason":"Could not open file '/etc/ntp.conf'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19051
sca.check.title: Ensure ntp access control is configured.
sca.check.description: ntp Access Control Commands: restrict address [mask mask] [ippeerlimit int] [flag ...] The address argument expressed in dotted-quad form is the address of a host or network. Alternatively, the address argument can be a valid host DNS name. The mask argument expressed in dotted-quad form defaults to 255.255.255.255, meaning that the address is treated as the address of an individual host. A default entry (address 0.0.0.0, mask 0.0.0.0) is always included and is always the first entry in the list. Note: the text string default, with no mask option, may be used to indicate the default entry. The ippeerlimit directive limits the number of peer requests for each IP to int, where a value of -1 means "unlimited", the current default. A value of 0 means "none". There would usually be at most 1 peering request per IP, but if the remote peering requests are behind a proxy there could well be more than 1 per IP. In the current implementation, flag always restricts access, i.e., an entry with no flags indicates that free access to the server is to be given. The flags are not orthogonal, in that more restrictive flags will often make less restrictive ones redundant. The flags can generally be classed into two categories, those which restrict time service and those which restrict informational queries and attempts to do run-time reconfiguration of the server. One or more of the following flags may be specified: - kod - If this flag is set when an access violation occurs, a kiss-o'-death (KoD) packet is sent. KoD packets are rate limited to no more than one per second. If another KoD packet occurs within one second after the last one, the packet is dropped. - limited - Deny service if the packet spacing violates the lower limits specified in the discard command. A history of clients is kept using the monitoring capability of ntpd. Thus, monitoring is always active as long as there is a restriction entry with the limited flag. - lowpriotrap - Declare traps set by matching hosts to be low priority. The number of traps a server can maintain is limited (the current limit is 3). Traps are usually assigned on a first come, first served basis, with later trap requestors being denied service. This flag modifies the assignment algorithm by allowing low priority traps to be overridden by later requests for normal priority traps. - noepeer - Deny ephemeral peer requests, even if they come from an authenticated source. Note that the ability to use a symmetric key for authentication may be restricted to one or more IPs or subnets via the third field of the ntp.keys file. This restriction is not enabled by default, to maintain backward compatibility. Expect noepeer to become the default in ntp-4.4. - nomodify - Deny ntpq and ntpdc queries which attempt to modify the state of the server (i.e., run time reconfiguration). Queries which return information are permitted. - noquery - Deny ntpq and ntpdc queries. Time service is not affected. - nopeer - Deny unauthenticated packets which would result in mobilizing a new association. This includes broadcast and symmetric active packets when a configured association does not exist. It also includes pool associations, so if you want to use servers from a pool directive and also want to use nopeer by default, you'll want a restrict source ... line as well that does not include the nopeer directive. - noserve - Deny all packets except ntpq and ntpdc queries. - notrap - Decline to provide mode 6 control message trap service to matching hosts. The trap service is a subsystem of the ntpq control message protocol which is intended for use by remote event logging programs. - notrust - Deny service unless the packet is cryptographically authenticated. - ntpport - This is actually a match algorithm modifier, rather than a restriction flag. Its presence causes the restriction entry to be matched only if the source port in the packet is the standard NTP UDP port (123). Both ntpport and non-ntpport may be specified. The ntpport is considered more specific and is sorted later in the list.
sca.check.rationale: If ntp is in use on the system, proper configuration is vital to ensuring time synchronization is accurate.
sca.check.remediation: Add or edit restrict lines in /etc/ntp.conf to match the following: restrict -4 default kod nomodify notrap nopeer noquery restrict -6 default kod nomodify notrap nopeer noquery OR If another time synchronization service is in use on the system, run the following command to remove ntp from the system: # apt purge ntp.
sca.check.compliance.cis: 2.1.4.1
sca.check.compliance.cis_csc_v8: 8.4
sca.check.compliance.cis_csc_v7: 6.1
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.7
sca.check.compliance.iso_27001-2013: A.12.4.4
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0002
sca.check.compliance.mitre_techniques: T1070,T1070.002,T1498,T1498.002,T1562,T1562.001
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.4
sca.check.compliance.pci_dss_v4.0: 10.6,10.6.1,10.6.2,10.6.3
sca.check.compliance.soc_2: CC4.1,CC5.2
sca.check.references: http://www.ntp.org/
sca.check.file: ["/etc/ntp.conf"]
sca.check.result: not applicable
sca.check.reason: Could not open file '/etc/ntp.conf'

** Alert 1706006476.205352: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure ntp is configured with authorized timeserver.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19052,"title":"Ensure ntp is configured with authorized timeserver.","description":"The various modes are determined by the command keyword and the type of the required IP address. Addresses are classed by type as (s) a remote server or peer (IPv4 class A, B and C), (b) the broadcast address of a local interface, (m) a multicast address (IPv4 class D), or (r) a reference clock address (127.127.x.x). Note: That only those options applicable to each command are listed below. Use of options not listed may not be caught as an error, but may result in some weird and even destructive behavior. If the Basic Socket Interface Extensions for IPv6 (RFC-2553) is detected, support for the IPv6 address family is generated in addition to the default support of the IPv4 address family. In a few cases, including the reslist billboard generated by ntpq or ntpdc, IPv6 addresses are automatically generated. IPv6 addresses can be identified by the presence of colons \":\" in the address field. IPv6 addresses can be used almost everywhere where IPv4 addresses can be used, with the exception of reference clock addresses, which are always IPv4. Note: In contexts where a host name is expected, a -4 qualifier preceding the host name forces DNS resolution to the IPv4 namespace, while a -6 qualifier forces DNS resolution to the IPv6 namespace. See IPv6 references for the equivalent classes for that address family. - pool - For type s addresses, this command mobilizes a persistent client mode association with a number of remote servers. In this mode the local clock can synchronized to the remote server, but the remote server can never be synchronized to the local clock. - server - For type s and r addresses, this command mobilizes a persistent client mode association with the specified remote server or local radio clock. In this mode the local clock can synchronized to the remote server, but the remote server can never be synchronized to the local clock. This command should not be used for type b or m addresses.","rationale":"Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations.","remediation":"Edit /etc/ntp.conf and add or edit server or pool lines as appropriate according to local site policy: <[server|pool]> <[remote-server|remote-pool]> Examples: pool mode: pool time.nist.gov iburst server mode: server time-a-g.nist.gov iburst server 132.163.97.3 iburst server time-d-b.nist.gov iburst Run the following command to load the updated time sources into ntp running config: # systemctl restart ntp OR If another time synchronization service is in use on the system, run the following command to remove ntp from the system: # apt purge ntp.","compliance":{"cis":"2.1.4.2","cis_csc_v8":"8.4","cis_csc_v7":"6.1","cmmc_v2.0":"AU.L2-3.3.7","iso_27001-2013":"A.12.4.4","mitre_mitigations":"M1022","mitre_tactics":"TA0002","mitre_techniques":"T1070,T1070.002,T1498,T1498.002,T1562,T1562.001","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"10.4","pci_dss_v4.0":"10.6,10.6.1,10.6.2,10.6.3","soc_2":"CC4.1,CC5.2"},"rules":["f:/etc/ntp.conf -> r:^pool","f:/etc/ntp.conf -> r:^server"],"condition":"all","references":"http://www.ntp.org/,https://tf.nist.gov/tf-cgi/servers.cgi","file":"/etc/ntp.conf","status":"Not applicable","reason":"Could not open file '/etc/ntp.conf'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19052
sca.check.title: Ensure ntp is configured with authorized timeserver.
sca.check.description: The various modes are determined by the command keyword and the type of the required IP address. Addresses are classed by type as (s) a remote server or peer (IPv4 class A, B and C), (b) the broadcast address of a local interface, (m) a multicast address (IPv4 class D), or (r) a reference clock address (127.127.x.x). Note: That only those options applicable to each command are listed below. Use of options not listed may not be caught as an error, but may result in some weird and even destructive behavior. If the Basic Socket Interface Extensions for IPv6 (RFC-2553) is detected, support for the IPv6 address family is generated in addition to the default support of the IPv4 address family. In a few cases, including the reslist billboard generated by ntpq or ntpdc, IPv6 addresses are automatically generated. IPv6 addresses can be identified by the presence of colons ":" in the address field. IPv6 addresses can be used almost everywhere where IPv4 addresses can be used, with the exception of reference clock addresses, which are always IPv4. Note: In contexts where a host name is expected, a -4 qualifier preceding the host name forces DNS resolution to the IPv4 namespace, while a -6 qualifier forces DNS resolution to the IPv6 namespace. See IPv6 references for the equivalent classes for that address family. - pool - For type s addresses, this command mobilizes a persistent client mode association with a number of remote servers. In this mode the local clock can synchronized to the remote server, but the remote server can never be synchronized to the local clock. - server - For type s and r addresses, this command mobilizes a persistent client mode association with the specified remote server or local radio clock. In this mode the local clock can synchronized to the remote server, but the remote server can never be synchronized to the local clock. This command should not be used for type b or m addresses.
sca.check.rationale: Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations.
sca.check.remediation: Edit /etc/ntp.conf and add or edit server or pool lines as appropriate according to local site policy: <[server|pool]> <[remote-server|remote-pool]> Examples: pool mode: pool time.nist.gov iburst server mode: server time-a-g.nist.gov iburst server 132.163.97.3 iburst server time-d-b.nist.gov iburst Run the following command to load the updated time sources into ntp running config: # systemctl restart ntp OR If another time synchronization service is in use on the system, run the following command to remove ntp from the system: # apt purge ntp.
sca.check.compliance.cis: 2.1.4.2
sca.check.compliance.cis_csc_v8: 8.4
sca.check.compliance.cis_csc_v7: 6.1
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.7
sca.check.compliance.iso_27001-2013: A.12.4.4
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0002
sca.check.compliance.mitre_techniques: T1070,T1070.002,T1498,T1498.002,T1562,T1562.001
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.4
sca.check.compliance.pci_dss_v4.0: 10.6,10.6.1,10.6.2,10.6.3
sca.check.compliance.soc_2: CC4.1,CC5.2
sca.check.references: http://www.ntp.org/,https://tf.nist.gov/tf-cgi/servers.cgi
sca.check.file: ["/etc/ntp.conf"]
sca.check.result: not applicable
sca.check.reason: Could not open file '/etc/ntp.conf'

** Alert 1706006476.212835: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure ntp is running as user ntp.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19053,"title":"Ensure ntp is running as user ntp.","description":"The ntp package is installed with a dedicated user account ntp. This account is granted the access required by the ntpd daemon Note: - If chrony or systemd-timesyncd are used, ntp should be removed and this section skipped - This recommendation only applies if ntp is in use on the system - Only one time synchronization method should be in use on the system.","rationale":"The ntpd daemon should run with only the required privlidge.","remediation":"Add or edit the following line in /usr/lib/ntp/ntp-systemd-wrapper: RUNASUSER=ntp Run the following command to restart ntp.servocee: # systemctl restart ntp.service OR If another time synchronization service is in use on the system, run the following command to remove ntp from the system: # apt purge ntp.","compliance":{"cis":"2.1.4.3","cis_csc_v8":"8.4","cis_csc_v7":"6.1","cmmc_v2.0":"AU.L2-3.3.7","iso_27001-2013":"A.12.4.4","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"10.4","pci_dss_v4.0":"10.6,10.6.1,10.6.2,10.6.3","soc_2":"CC4.1,CC5.2"},"rules":["f:/usr/lib/ntp/ntp-systemd-wrapper -> r:^RUNASUSER=ntp"],"condition":"all","references":"http://www.ntp.org/","file":"/usr/lib/ntp/ntp-systemd-wrapper","status":"Not applicable","reason":"Could not open file '/usr/lib/ntp/ntp-systemd-wrapper'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19053
sca.check.title: Ensure ntp is running as user ntp.
sca.check.description: The ntp package is installed with a dedicated user account ntp. This account is granted the access required by the ntpd daemon Note: - If chrony or systemd-timesyncd are used, ntp should be removed and this section skipped - This recommendation only applies if ntp is in use on the system - Only one time synchronization method should be in use on the system.
sca.check.rationale: The ntpd daemon should run with only the required privlidge.
sca.check.remediation: Add or edit the following line in /usr/lib/ntp/ntp-systemd-wrapper: RUNASUSER=ntp Run the following command to restart ntp.servocee: # systemctl restart ntp.service OR If another time synchronization service is in use on the system, run the following command to remove ntp from the system: # apt purge ntp.
sca.check.compliance.cis: 2.1.4.3
sca.check.compliance.cis_csc_v8: 8.4
sca.check.compliance.cis_csc_v7: 6.1
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.7
sca.check.compliance.iso_27001-2013: A.12.4.4
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.4
sca.check.compliance.pci_dss_v4.0: 10.6,10.6.1,10.6.2,10.6.3
sca.check.compliance.soc_2: CC4.1,CC5.2
sca.check.references: http://www.ntp.org/
sca.check.file: ["/usr/lib/ntp/ntp-systemd-wrapper"]
sca.check.result: not applicable
sca.check.reason: Could not open file '/usr/lib/ntp/ntp-systemd-wrapper'

** Alert 1706006476.216069: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure ntp is enabled and running.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19054,"title":"Ensure ntp is enabled and running.","description":"ntp is a daemon for synchronizing the system clock across the network.","rationale":"ntp needs to be enabled and running in order to synchronize the system to a timeserver. Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations.","remediation":"IF ntp is in use on the system, run the following commands: Run the following command to unmask ntp.service: # systemctl unmask ntp.service Run the following command to enable and start ntp.service: # systemctl --now enable ntp.service OR If another time synchronization service is in use on the system, run the following command to remove ntp: # apt purge ntp.","compliance":{"cis":"2.1.4.4","cis_csc_v8":"8.4","cis_csc_v7":"6.1","cmmc_v2.0":"AU.L2-3.3.7","iso_27001-2013":"A.12.4.4","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"10.4","pci_dss_v4.0":"10.6,10.6.1,10.6.2,10.6.3","soc_2":"CC4.1,CC5.2"},"rules":["c:systemctl is-enabled ntp.service -> r:^enabled","c:systemctl is-active ntp.service -> r:^active"],"condition":"all","command":"systemctl is-enabled ntp.service,systemctl is-active ntp.service","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'systemctl is-enabled ntp.service'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19054
sca.check.title: Ensure ntp is enabled and running.
sca.check.description: ntp is a daemon for synchronizing the system clock across the network.
sca.check.rationale: ntp needs to be enabled and running in order to synchronize the system to a timeserver. Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations.
sca.check.remediation: IF ntp is in use on the system, run the following commands: Run the following command to unmask ntp.service: # systemctl unmask ntp.service Run the following command to enable and start ntp.service: # systemctl --now enable ntp.service OR If another time synchronization service is in use on the system, run the following command to remove ntp: # apt purge ntp.
sca.check.compliance.cis: 2.1.4.4
sca.check.compliance.cis_csc_v8: 8.4
sca.check.compliance.cis_csc_v7: 6.1
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.7
sca.check.compliance.iso_27001-2013: A.12.4.4
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.4
sca.check.compliance.pci_dss_v4.0: 10.6,10.6.1,10.6.2,10.6.3
sca.check.compliance.soc_2: CC4.1,CC5.2
sca.check.command: ["systemctl is-enabled ntp.service", "systemctl is-active ntp.service"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'systemctl is-enabled ntp.service'

** Alert 1706006476.219366: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure X Window System is not installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19055,"title":"Ensure X Window System is not installed.","description":"The X Window System provides a Graphical User Interface (GUI) where users can have multiple windows in which to run programs and various add on. The X Windows system is typically used on workstations where users login, but not on servers where users typically do not login.","rationale":"Unless your organization specifically requires graphical login access via X Windows, remove it to reduce the potential attack surface.","remediation":"Remove the X Windows System packages: apt purge xserver-xorg*.","compliance":{"cis":"2.2.1","cis_csc_v8":"4.8","cis_csc_v7":"2.6","cmmc_v2.0":"CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","iso_27001-2013":"A.12.5.1,A.12.6.2","mitre_mitigations":"M1042","mitre_tactics":"TA0008","mitre_techniques":"T1203,T1210,T1543,T1543.002","pci_dss_v3.2.1":"1.1.6,1.2.1,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,2.2.4,6.4.1","soc_2":"CC6.3,CC6.6"},"rules":["c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' xserver-xorg -> r:unknown ok not-installed","not c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' xserver-xorg -> r:install ok installed"],"condition":"any","command":"dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' xserver-xorg","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19055
sca.check.title: Ensure X Window System is not installed.
sca.check.description: The X Window System provides a Graphical User Interface (GUI) where users can have multiple windows in which to run programs and various add on. The X Windows system is typically used on workstations where users login, but not on servers where users typically do not login.
sca.check.rationale: Unless your organization specifically requires graphical login access via X Windows, remove it to reduce the potential attack surface.
sca.check.remediation: Remove the X Windows System packages: apt purge xserver-xorg*.
sca.check.compliance.cis: 2.2.1
sca.check.compliance.cis_csc_v8: 4.8
sca.check.compliance.cis_csc_v7: 2.6
sca.check.compliance.cmmc_v2.0: CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.12.5.1,A.12.6.2
sca.check.compliance.mitre_mitigations: M1042
sca.check.compliance.mitre_tactics: TA0008
sca.check.compliance.mitre_techniques: T1203,T1210,T1543,T1543.002
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,2.2.4,6.4.1
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.command: ["dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' xserver-xorg"]
sca.check.result: passed

** Alert 1706006476.222451: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure Avahi Server is not installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19056,"title":"Ensure Avahi Server is not installed.","description":"Avahi is a free zeroconf implementation, including a system for multicast DNS/DNS-SD service discovery. Avahi allows programs to publish and discover services and hosts running on a local network with no specific configuration. For example, a user can plug a computer into a network and Avahi automatically finds printers to print to, files to look at and people to talk to, as well as network services running on the machine.","rationale":"Automatic discovery of network services is not normally required for system functionality. It is recommended to remove this package to reduce the potential attack surface.","remediation":"Run the following commands to remove avahi-daemon: # systemctl stop avahi-daaemon.service # systemctl stop avahi-daemon.socket # apt purge avahi-daemon.","compliance":{"cis":"2.2.2","cis_csc_v8":"4.8","cis_csc_v7":"9.2","cmmc_v2.0":"CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","iso_27001-2013":"A.13.1.3","mitre_mitigations":"M1042","mitre_tactics":"TA0008","mitre_techniques":"T1203,T1210,T1543,T1543.002","pci_dss_v3.2.1":"1.1.6,1.2.1,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,2.2.4,6.4.1","soc_2":"CC6.3,CC6.6"},"rules":["c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' avahi-daemon -> r:unknown ok not-installed","not c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' avahi-daemon -> r:install ok installed"],"condition":"any","command":"dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' avahi-daemon","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19056
sca.check.title: Ensure Avahi Server is not installed.
sca.check.description: Avahi is a free zeroconf implementation, including a system for multicast DNS/DNS-SD service discovery. Avahi allows programs to publish and discover services and hosts running on a local network with no specific configuration. For example, a user can plug a computer into a network and Avahi automatically finds printers to print to, files to look at and people to talk to, as well as network services running on the machine.
sca.check.rationale: Automatic discovery of network services is not normally required for system functionality. It is recommended to remove this package to reduce the potential attack surface.
sca.check.remediation: Run the following commands to remove avahi-daemon: # systemctl stop avahi-daaemon.service # systemctl stop avahi-daemon.socket # apt purge avahi-daemon.
sca.check.compliance.cis: 2.2.2
sca.check.compliance.cis_csc_v8: 4.8
sca.check.compliance.cis_csc_v7: 9.2
sca.check.compliance.cmmc_v2.0: CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.3
sca.check.compliance.mitre_mitigations: M1042
sca.check.compliance.mitre_tactics: TA0008
sca.check.compliance.mitre_techniques: T1203,T1210,T1543,T1543.002
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,2.2.4,6.4.1
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.command: ["dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' avahi-daemon"]
sca.check.result: passed

** Alert 1706006476.226069: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure CUPS is not installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19057,"title":"Ensure CUPS is not installed.","description":"The Common Unix Print System (CUPS) provides the ability to print to both local and network printers. A system running CUPS can also accept print jobs from remote systems and print them to local printers. It also provides a web based remote administration capability.","rationale":"If the system does not need to print jobs or accept print jobs from other systems, it is recommended that CUPS be removed to reduce the potential attack surface.","remediation":"Run one of the following commands to remove cups : # apt purge cups.","compliance":{"cis":"2.2.3","cis_csc_v8":"4.8","cis_csc_v7":"9.2","cmmc_v2.0":"CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","iso_27001-2013":"A.13.1.3","mitre_mitigations":"M1042","mitre_tactics":"TA0008","mitre_techniques":"T1203,T1210,T1543,T1543.002","pci_dss_v3.2.1":"1.1.6,1.2.1,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,2.2.4,6.4.1","soc_2":"CC6.3,CC6.6"},"rules":["c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' cups -> r:unknown ok not-installed","not c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' cups -> r:install ok installed"],"condition":"any","references":"http://www.cups.org.","command":"dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' cups","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19057
sca.check.title: Ensure CUPS is not installed.
sca.check.description: The Common Unix Print System (CUPS) provides the ability to print to both local and network printers. A system running CUPS can also accept print jobs from remote systems and print them to local printers. It also provides a web based remote administration capability.
sca.check.rationale: If the system does not need to print jobs or accept print jobs from other systems, it is recommended that CUPS be removed to reduce the potential attack surface.
sca.check.remediation: Run one of the following commands to remove cups : # apt purge cups.
sca.check.compliance.cis: 2.2.3
sca.check.compliance.cis_csc_v8: 4.8
sca.check.compliance.cis_csc_v7: 9.2
sca.check.compliance.cmmc_v2.0: CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.3
sca.check.compliance.mitre_mitigations: M1042
sca.check.compliance.mitre_tactics: TA0008
sca.check.compliance.mitre_techniques: T1203,T1210,T1543,T1543.002
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,2.2.4,6.4.1
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.references: http://www.cups.org.
sca.check.command: ["dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' cups"]
sca.check.result: passed

** Alert 1706006476.229204: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure DHCP Server is not installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19058,"title":"Ensure DHCP Server is not installed.","description":"The Dynamic Host Configuration Protocol (DHCP) is a service that allows machines to be dynamically assigned IP addresses.","rationale":"Unless a system is specifically set up to act as a DHCP server, it is recommended that this package be removed to reduce the potential attack surface.","remediation":"Run the following command to remove isc-dhcp-server: # apt purge isc-dhcp-server.","compliance":{"cis":"2.2.4","cis_csc_v8":"4.8","cis_csc_v7":"9.2","cmmc_v2.0":"CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","iso_27001-2013":"A.13.1.3","mitre_mitigations":"M1042","mitre_tactics":"TA0008","mitre_techniques":"T1203,T1210,T1543,T1543.002","pci_dss_v3.2.1":"1.1.6,1.2.1,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,2.2.4,6.4.1","soc_2":"CC6.3,CC6.6"},"rules":["c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' isc-dhcp-server -> r:unknown ok not-installed","not c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' isc-dhcp-server -> r:install ok installed"],"condition":"any","references":"http://www.isc.org/software/dhcp.","command":"dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' isc-dhcp-server","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19058
sca.check.title: Ensure DHCP Server is not installed.
sca.check.description: The Dynamic Host Configuration Protocol (DHCP) is a service that allows machines to be dynamically assigned IP addresses.
sca.check.rationale: Unless a system is specifically set up to act as a DHCP server, it is recommended that this package be removed to reduce the potential attack surface.
sca.check.remediation: Run the following command to remove isc-dhcp-server: # apt purge isc-dhcp-server.
sca.check.compliance.cis: 2.2.4
sca.check.compliance.cis_csc_v8: 4.8
sca.check.compliance.cis_csc_v7: 9.2
sca.check.compliance.cmmc_v2.0: CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.3
sca.check.compliance.mitre_mitigations: M1042
sca.check.compliance.mitre_tactics: TA0008
sca.check.compliance.mitre_techniques: T1203,T1210,T1543,T1543.002
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,2.2.4,6.4.1
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.references: http://www.isc.org/software/dhcp.
sca.check.command: ["dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' isc-dhcp-server"]
sca.check.result: passed

** Alert 1706006476.232142: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure LDAP server is not installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19059,"title":"Ensure LDAP server is not installed.","description":"The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for NIS/YP. It is a service that provides a method for looking up information from a central database.","rationale":"If the system will not need to act as an LDAP server, it is recommended that the software be removed to reduce the potential attack surface.","remediation":"Run one of the following commands to remove slapd: # apt purge slapd.","compliance":{"cis":"2.2.5","cis_csc_v8":"4.8","cis_csc_v7":"9.2","cmmc_v2.0":"CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","iso_27001-2013":"A.13.1.3","mitre_mitigations":"M1042","mitre_tactics":"TA0008","mitre_techniques":"T1203,T1210,T1543,T1543.002","pci_dss_v3.2.1":"1.1.6,1.2.1,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,2.2.4,6.4.1","soc_2":"CC6.3,CC6.6"},"rules":["c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' slapd -> r:unknown ok not-installed","not c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' slapd -> r:install ok installed"],"condition":"any","references":"http://www.openldap.org.","command":"dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' slapd","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19059
sca.check.title: Ensure LDAP server is not installed.
sca.check.description: The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for NIS/YP. It is a service that provides a method for looking up information from a central database.
sca.check.rationale: If the system will not need to act as an LDAP server, it is recommended that the software be removed to reduce the potential attack surface.
sca.check.remediation: Run one of the following commands to remove slapd: # apt purge slapd.
sca.check.compliance.cis: 2.2.5
sca.check.compliance.cis_csc_v8: 4.8
sca.check.compliance.cis_csc_v7: 9.2
sca.check.compliance.cmmc_v2.0: CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.3
sca.check.compliance.mitre_mitigations: M1042
sca.check.compliance.mitre_tactics: TA0008
sca.check.compliance.mitre_techniques: T1203,T1210,T1543,T1543.002
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,2.2.4,6.4.1
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.references: http://www.openldap.org.
sca.check.command: ["dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' slapd"]
sca.check.result: passed

** Alert 1706006476.235102: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure NFS is not installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19060,"title":"Ensure NFS is not installed.","description":"The Network File System (NFS) is one of the first and most widely distributed file systems in the UNIX environment. It provides the ability for systems to mount file systems of other servers through the network.","rationale":"If the system does not export NFS shares, it is recommended that the nfs-kernel-server package be removed to reduce the remote attack surface.","remediation":"Run the following command to remove nfs: # apt purge nfs-kernel-server.","compliance":{"cis":"2.2.6","cis_csc_v8":"4.8","cis_csc_v7":"9.2","cmmc_v2.0":"CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","iso_27001-2013":"A.13.1.3","pci_dss_v3.2.1":"1.1.6,1.2.1,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,2.2.4,6.4.1","soc_2":"CC6.3,CC6.6"},"rules":["c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' nfs-kernel-server -> r:unknown ok not-installed","not c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' nfs-kernel-server -> r:install ok installed"],"condition":"any","command":"dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' nfs-kernel-server","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19060
sca.check.title: Ensure NFS is not installed.
sca.check.description: The Network File System (NFS) is one of the first and most widely distributed file systems in the UNIX environment. It provides the ability for systems to mount file systems of other servers through the network.
sca.check.rationale: If the system does not export NFS shares, it is recommended that the nfs-kernel-server package be removed to reduce the remote attack surface.
sca.check.remediation: Run the following command to remove nfs: # apt purge nfs-kernel-server.
sca.check.compliance.cis: 2.2.6
sca.check.compliance.cis_csc_v8: 4.8
sca.check.compliance.cis_csc_v7: 9.2
sca.check.compliance.cmmc_v2.0: CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.3
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,2.2.4,6.4.1
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.command: ["dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' nfs-kernel-server"]
sca.check.result: passed

** Alert 1706006476.237805: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure DNS Server is not installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19061,"title":"Ensure DNS Server is not installed.","description":"The Domain Name System (DNS) is a hierarchical naming system that maps names to IP addresses for computers, services and other resources connected to a network.","rationale":"Unless a system is specifically designated to act as a DNS server, it is recommended that the package be deleted to reduce the potential attack surface.","remediation":"Run the following commands to disable DNS server: # apt purge bind9.","compliance":{"cis":"2.2.7","cis_csc_v8":"4.8","cis_csc_v7":"9.2","cmmc_v2.0":"CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","iso_27001-2013":"A.13.1.3","mitre_mitigations":"M1042","mitre_tactics":"TA0008","mitre_techniques":"T1203,T1210,T1543,T1543.002","pci_dss_v3.2.1":"1.1.6,1.2.1,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,2.2.4,6.4.1","soc_2":"CC6.3,CC6.6"},"rules":["c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' bind9 -> r:unknown ok not-installed","not c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' bind9 -> r:install ok installed"],"condition":"any","command":"dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' bind9","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19061
sca.check.title: Ensure DNS Server is not installed.
sca.check.description: The Domain Name System (DNS) is a hierarchical naming system that maps names to IP addresses for computers, services and other resources connected to a network.
sca.check.rationale: Unless a system is specifically designated to act as a DNS server, it is recommended that the package be deleted to reduce the potential attack surface.
sca.check.remediation: Run the following commands to disable DNS server: # apt purge bind9.
sca.check.compliance.cis: 2.2.7
sca.check.compliance.cis_csc_v8: 4.8
sca.check.compliance.cis_csc_v7: 9.2
sca.check.compliance.cmmc_v2.0: CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.3
sca.check.compliance.mitre_mitigations: M1042
sca.check.compliance.mitre_tactics: TA0008
sca.check.compliance.mitre_techniques: T1203,T1210,T1543,T1543.002
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,2.2.4,6.4.1
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.command: ["dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' bind9"]
sca.check.result: passed

** Alert 1706006476.240651: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure FTP Server is not installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19062,"title":"Ensure FTP Server is not installed.","description":"The File Transfer Protocol (FTP) provides networked computers with the ability to transfer files.","rationale":"FTP does not protect the confidentiality of data or authentication credentials. It is recommended SFTP be used if file transfer is required. Unless there is a need to run the system as a FTP server (for example, to allow anonymous downloads), it is recommended that the package be deleted to reduce the potential attack surface.","remediation":"Run the following command to remove vsftpd: # apt purge vsftpd.","compliance":{"cis":"2.2.8","cis_csc_v8":"4.8","cis_csc_v7":"9.2","cmmc_v2.0":"CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","iso_27001-2013":"A.13.1.3","mitre_mitigations":"M1042","mitre_tactics":"TA0008","mitre_techniques":"T1203,T1210,T1543,T1543.002","pci_dss_v3.2.1":"1.1.6,1.2.1,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,2.2.4,6.4.1","soc_2":"CC6.3,CC6.6"},"rules":["c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' vsftpd -> r:unknown ok not-installed","not c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' vsftpd -> r:install ok installed"],"condition":"any","command":"dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' vsftpd","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19062
sca.check.title: Ensure FTP Server is not installed.
sca.check.description: The File Transfer Protocol (FTP) provides networked computers with the ability to transfer files.
sca.check.rationale: FTP does not protect the confidentiality of data or authentication credentials. It is recommended SFTP be used if file transfer is required. Unless there is a need to run the system as a FTP server (for example, to allow anonymous downloads), it is recommended that the package be deleted to reduce the potential attack surface.
sca.check.remediation: Run the following command to remove vsftpd: # apt purge vsftpd.
sca.check.compliance.cis: 2.2.8
sca.check.compliance.cis_csc_v8: 4.8
sca.check.compliance.cis_csc_v7: 9.2
sca.check.compliance.cmmc_v2.0: CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.3
sca.check.compliance.mitre_mitigations: M1042
sca.check.compliance.mitre_tactics: TA0008
sca.check.compliance.mitre_techniques: T1203,T1210,T1543,T1543.002
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,2.2.4,6.4.1
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.command: ["dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' vsftpd"]
sca.check.result: passed

** Alert 1706006476.243717: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure HTTP server is not installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19063,"title":"Ensure HTTP server is not installed.","description":"HTTP or web servers provide the ability to host web site content.","rationale":"Unless there is a need to run the system as a web server, it is recommended that the package be deleted to reduce the potential attack surface.","remediation":"Run the following command to remove apache2: # apt purge apache2.","compliance":{"cis":"2.2.9","cis_csc_v8":"4.8","cis_csc_v7":"9.2","cmmc_v2.0":"CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","iso_27001-2013":"A.13.1.3","mitre_mitigations":"M1042","mitre_tactics":"TA0008","mitre_techniques":"T1203,T1210,T1543,T1543.002","pci_dss_v3.2.1":"1.1.6,1.2.1,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,2.2.4,6.4.1","soc_2":"CC6.3,CC6.6"},"rules":["c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' apache2 -> r:unknown ok not-installed","not c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' apache2 -> r:install ok installed"],"condition":"any","command":"dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' apache2","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19063
sca.check.title: Ensure HTTP server is not installed.
sca.check.description: HTTP or web servers provide the ability to host web site content.
sca.check.rationale: Unless there is a need to run the system as a web server, it is recommended that the package be deleted to reduce the potential attack surface.
sca.check.remediation: Run the following command to remove apache2: # apt purge apache2.
sca.check.compliance.cis: 2.2.9
sca.check.compliance.cis_csc_v8: 4.8
sca.check.compliance.cis_csc_v7: 9.2
sca.check.compliance.cmmc_v2.0: CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.3
sca.check.compliance.mitre_mitigations: M1042
sca.check.compliance.mitre_tactics: TA0008
sca.check.compliance.mitre_techniques: T1203,T1210,T1543,T1543.002
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,2.2.4,6.4.1
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.command: ["dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' apache2"]
sca.check.result: passed

** Alert 1706006476.246360: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure IMAP and POP3 server are not installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19064,"title":"Ensure IMAP and POP3 server are not installed.","description":"dovecot-imapd and dovecot-pop3d are an open source IMAP and POP3 server for Linux based systems.","rationale":"Unless POP3 and/or IMAP servers are to be provided by this system, it is recommended that the package be removed to reduce the potential attack surface.","remediation":"Run one of the following commands to remove dovecot-imapd and dovecot-pop3d: # apt purge dovecot-imapd dovecot-pop3d.","compliance":{"cis":"2.2.10","cis_csc_v8":"4.8","cis_csc_v7":"9.2","cmmc_v2.0":"CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","iso_27001-2013":"A.13.1.3","mitre_mitigations":"M1042","mitre_tactics":"TA0008","mitre_techniques":"T1203,T1210,T1543,T1543.002","pci_dss_v3.2.1":"1.1.6,1.2.1,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,2.2.4,6.4.1","soc_2":"CC6.3,CC6.6"},"rules":["not c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' dovecot-imapd -> r:install ok installed","not c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' dovecot-pop3d -> r:install ok installed"],"condition":"all","command":"dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' dovecot-imapd,dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' dovecot-pop3d","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19064
sca.check.title: Ensure IMAP and POP3 server are not installed.
sca.check.description: dovecot-imapd and dovecot-pop3d are an open source IMAP and POP3 server for Linux based systems.
sca.check.rationale: Unless POP3 and/or IMAP servers are to be provided by this system, it is recommended that the package be removed to reduce the potential attack surface.
sca.check.remediation: Run one of the following commands to remove dovecot-imapd and dovecot-pop3d: # apt purge dovecot-imapd dovecot-pop3d.
sca.check.compliance.cis: 2.2.10
sca.check.compliance.cis_csc_v8: 4.8
sca.check.compliance.cis_csc_v7: 9.2
sca.check.compliance.cmmc_v2.0: CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.3
sca.check.compliance.mitre_mitigations: M1042
sca.check.compliance.mitre_tactics: TA0008
sca.check.compliance.mitre_techniques: T1203,T1210,T1543,T1543.002
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,2.2.4,6.4.1
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.command: ["dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' dovecot-imapd", "dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' dovecot-pop3d"]
sca.check.result: passed

** Alert 1706006476.249422: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure Samba is not installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19065,"title":"Ensure Samba is not installed.","description":"The Samba daemon allows system administrators to configure their Linux systems to share file systems and directories with Windows desktops. Samba will advertise the file systems and directories via the Server Message Block (SMB) protocol. Windows desktop users will be able to mount these directories and file systems as letter drives on their systems.","rationale":"If there is no need to mount directories and file systems to Windows systems, then this service should be deleted to reduce the potential attack surface.","remediation":"Run the following command to remove samba: # apt purge samba.","compliance":{"cis":"2.2.11","cis_csc_v8":"4.8","cis_csc_v7":"9.2","cmmc_v2.0":"CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","iso_27001-2013":"A.13.1.3","mitre_tactics":"TA0008","mitre_techniques":"T1005,T1039,T1083,T1135,T1203,T1210,T1543,T1543.002","pci_dss_v3.2.1":"1.1.6,1.2.1,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,2.2.4,6.4.1","soc_2":"CC6.3,CC6.6"},"rules":["c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' samba -> r:unknown ok not-installed","not c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' samba -> r:install ok installed"],"condition":"any","command":"dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' samba","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19065
sca.check.title: Ensure Samba is not installed.
sca.check.description: The Samba daemon allows system administrators to configure their Linux systems to share file systems and directories with Windows desktops. Samba will advertise the file systems and directories via the Server Message Block (SMB) protocol. Windows desktop users will be able to mount these directories and file systems as letter drives on their systems.
sca.check.rationale: If there is no need to mount directories and file systems to Windows systems, then this service should be deleted to reduce the potential attack surface.
sca.check.remediation: Run the following command to remove samba: # apt purge samba.
sca.check.compliance.cis: 2.2.11
sca.check.compliance.cis_csc_v8: 4.8
sca.check.compliance.cis_csc_v7: 9.2
sca.check.compliance.cmmc_v2.0: CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.3
sca.check.compliance.mitre_tactics: TA0008
sca.check.compliance.mitre_techniques: T1005,T1039,T1083,T1135,T1203,T1210,T1543,T1543.002
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,2.2.4,6.4.1
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.command: ["dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' samba"]
sca.check.result: passed

** Alert 1706006476.252601: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure HTTP Proxy Server is not installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19066,"title":"Ensure HTTP Proxy Server is not installed.","description":"Squid is a standard proxy server used in many distributions and environments.","rationale":"If there is no need for a proxy server, it is recommended that the squid proxy be deleted to reduce the potential attack surface.","remediation":"Run the following command to remove squid: # apt purge squid.","compliance":{"cis":"2.2.12","cis_csc_v8":"4.8","cis_csc_v7":"9.2","cmmc_v2.0":"CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","iso_27001-2013":"A.13.1.3","mitre_mitigations":"M1042","mitre_tactics":"TA0008","mitre_techniques":"T1203,T1210,T1543,T1543.002","pci_dss_v3.2.1":"1.1.6,1.2.1,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,2.2.4,6.4.1","soc_2":"CC6.3,CC6.6"},"rules":["c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' squid -> r:unknown ok not-installed","not c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' squid -> r:install ok installed"],"condition":"any","command":"dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' squid","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19066
sca.check.title: Ensure HTTP Proxy Server is not installed.
sca.check.description: Squid is a standard proxy server used in many distributions and environments.
sca.check.rationale: If there is no need for a proxy server, it is recommended that the squid proxy be deleted to reduce the potential attack surface.
sca.check.remediation: Run the following command to remove squid: # apt purge squid.
sca.check.compliance.cis: 2.2.12
sca.check.compliance.cis_csc_v8: 4.8
sca.check.compliance.cis_csc_v7: 9.2
sca.check.compliance.cmmc_v2.0: CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.3
sca.check.compliance.mitre_mitigations: M1042
sca.check.compliance.mitre_tactics: TA0008
sca.check.compliance.mitre_techniques: T1203,T1210,T1543,T1543.002
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,2.2.4,6.4.1
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.command: ["dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' squid"]
sca.check.result: passed

** Alert 1706006476.255244: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure SNMP Server is not installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19067,"title":"Ensure SNMP Server is not installed.","description":"Simple Network Management Protocol (SNMP) is a widely used protocol for monitoring the health and welfare of network equipment, computer equipment and devices like UPSs. Net-SNMP is a suite of applications used to implement SNMPv1 (RFC 1157), SNMPv2 (RFCs 1901-1908), and SNMPv3 (RFCs 3411-3418) using both IPv4 and IPv6. Support for SNMPv2 classic (a.k.a. \"SNMPv2 historic\" - RFCs 1441-1452) was dropped with the 4.0 release of the UCD-snmp package. The Simple Network Management Protocol (SNMP) server is used to listen for SNMP commands from an SNMP management system, execute the commands or collect the information and then send results back to the requesting system.","rationale":"The SNMP server can communicate using SNMPv1, which transmits data in the clear and does not require authentication to execute commands. SNMPv3 replaces the simple/clear text password sharing used in SNMPv2 with more securely encoded parameters. If the the SNMP service is not required, the snmpd package should be removed to reduce the attack surface of the system. Note: If SNMP is required: - The server should be configured for SNMP v3 only. User Authentication and Message Encryption should be configured. If SNMP v2 is absolutely necessary, modify the community strings' values. -.","remediation":"Run the following command to remove snmpd: # apt purge snmpd.","compliance":{"cis":"2.2.13","cis_csc_v8":"4.8","cis_csc_v7":"9.2","cmmc_v2.0":"CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","iso_27001-2013":"A.13.1.3","mitre_mitigations":"M1042","mitre_tactics":"TA0008","mitre_techniques":"T1203,T1210,T1543,T1543.002","pci_dss_v3.2.1":"1.1.6,1.2.1,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,2.2.4,6.4.1","soc_2":"CC6.3,CC6.6"},"rules":["c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' snmp -> r:unknown ok not-installed","not c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' snmp -> r:install ok installed"],"condition":"any","command":"dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' snmp","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19067
sca.check.title: Ensure SNMP Server is not installed.
sca.check.description: Simple Network Management Protocol (SNMP) is a widely used protocol for monitoring the health and welfare of network equipment, computer equipment and devices like UPSs. Net-SNMP is a suite of applications used to implement SNMPv1 (RFC 1157), SNMPv2 (RFCs 1901-1908), and SNMPv3 (RFCs 3411-3418) using both IPv4 and IPv6. Support for SNMPv2 classic (a.k.a. "SNMPv2 historic" - RFCs 1441-1452) was dropped with the 4.0 release of the UCD-snmp package. The Simple Network Management Protocol (SNMP) server is used to listen for SNMP commands from an SNMP management system, execute the commands or collect the information and then send results back to the requesting system.
sca.check.rationale: The SNMP server can communicate using SNMPv1, which transmits data in the clear and does not require authentication to execute commands. SNMPv3 replaces the simple/clear text password sharing used in SNMPv2 with more securely encoded parameters. If the the SNMP service is not required, the snmpd package should be removed to reduce the attack surface of the system. Note: If SNMP is required: - The server should be configured for SNMP v3 only. User Authentication and Message Encryption should be configured. If SNMP v2 is absolutely necessary, modify the community strings' values. -.
sca.check.remediation: Run the following command to remove snmpd: # apt purge snmpd.
sca.check.compliance.cis: 2.2.13
sca.check.compliance.cis_csc_v8: 4.8
sca.check.compliance.cis_csc_v7: 9.2
sca.check.compliance.cmmc_v2.0: CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.3
sca.check.compliance.mitre_mitigations: M1042
sca.check.compliance.mitre_tactics: TA0008
sca.check.compliance.mitre_techniques: T1203,T1210,T1543,T1543.002
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,2.2.4,6.4.1
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.command: ["dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' snmp"]
sca.check.result: passed

** Alert 1706006476.259973: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure NIS Server is not installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19068,"title":"Ensure NIS Server is not installed.","description":"The Network Information Service (NIS) (formally known as Yellow Pages) is a client-server directory service protocol for distributing system configuration files. The NIS server is a collection of programs that allow for the distribution of configuration files.","rationale":"The NIS service is inherently an insecure system that has been vulnerable to DOS attacks, buffer overflows and has poor authentication for querying NIS maps. NIS generally has been replaced by such protocols as Lightweight Directory Access Protocol (LDAP). It is recommended that the service be removed and other, more secure services be used.","remediation":"Run the following command to remove nis: # apt purge nis.","compliance":{"cis":"2.2.14","cis_csc_v8":"4.8","cis_csc_v7":"9.2","cmmc_v2.0":"CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","iso_27001-2013":"A.13.1.3","mitre_mitigations":"M1042","mitre_tactics":"TA0008","mitre_techniques":"T1203,T1210,T1543,T1543.002","pci_dss_v3.2.1":"1.1.6,1.2.1,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,2.2.4,6.4.1","soc_2":"CC6.3,CC6.6"},"rules":["c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' nis -> r:unknown ok not-installed","not c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' nis -> r:install ok installed"],"condition":"any","command":"dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' nis","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19068
sca.check.title: Ensure NIS Server is not installed.
sca.check.description: The Network Information Service (NIS) (formally known as Yellow Pages) is a client-server directory service protocol for distributing system configuration files. The NIS server is a collection of programs that allow for the distribution of configuration files.
sca.check.rationale: The NIS service is inherently an insecure system that has been vulnerable to DOS attacks, buffer overflows and has poor authentication for querying NIS maps. NIS generally has been replaced by such protocols as Lightweight Directory Access Protocol (LDAP). It is recommended that the service be removed and other, more secure services be used.
sca.check.remediation: Run the following command to remove nis: # apt purge nis.
sca.check.compliance.cis: 2.2.14
sca.check.compliance.cis_csc_v8: 4.8
sca.check.compliance.cis_csc_v7: 9.2
sca.check.compliance.cmmc_v2.0: CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.3
sca.check.compliance.mitre_mitigations: M1042
sca.check.compliance.mitre_tactics: TA0008
sca.check.compliance.mitre_techniques: T1203,T1210,T1543,T1543.002
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,2.2.4,6.4.1
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.command: ["dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' nis"]
sca.check.result: passed

** Alert 1706006476.263373: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure dnsmasq is not installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19069,"title":"Ensure dnsmasq is not installed.","description":"dnsmasq is a lightweight tool that provides DNS caching, DNS forwarding and DHCP (Dynamic Host Configuration Protocol) services.","rationale":"Unless a system is specifically designated to act as a DNS caching, DNS forwarding and/or DHCP server, it is recommended that the package be removed to reduce the potential attack surface.","remediation":"Run the following command to remove dnsmasq: # apt purge dnsmasq.","compliance":{"cis":"2.2.15","cis_csc_v8":"4.8","cis_csc_v7":"9.2","cmmc_v2.0":"CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","iso_27001-2013":"A.13.1.3","mitre_mitigations":"M1042","mitre_tactics":"TA0008","mitre_techniques":"T1203,T1210,T1543,T1543.002","pci_dss_v3.2.1":"1.1.6,1.2.1,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,2.2.4,6.4.1","soc_2":"CC6.3,CC6.6"},"rules":["c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' dnsmaq -> r:unknown ok not-installed","not c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' dnsmaq -> r:install ok installed"],"condition":"any","command":"dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' dnsmaq","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19069
sca.check.title: Ensure dnsmasq is not installed.
sca.check.description: dnsmasq is a lightweight tool that provides DNS caching, DNS forwarding and DHCP (Dynamic Host Configuration Protocol) services.
sca.check.rationale: Unless a system is specifically designated to act as a DNS caching, DNS forwarding and/or DHCP server, it is recommended that the package be removed to reduce the potential attack surface.
sca.check.remediation: Run the following command to remove dnsmasq: # apt purge dnsmasq.
sca.check.compliance.cis: 2.2.15
sca.check.compliance.cis_csc_v8: 4.8
sca.check.compliance.cis_csc_v7: 9.2
sca.check.compliance.cmmc_v2.0: CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.3
sca.check.compliance.mitre_mitigations: M1042
sca.check.compliance.mitre_tactics: TA0008
sca.check.compliance.mitre_techniques: T1203,T1210,T1543,T1543.002
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,2.2.4,6.4.1
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.command: ["dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' dnsmaq"]
sca.check.result: passed

** Alert 1706006476.266218: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure mail transfer agent is configured for local-only mode.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19070,"title":"Ensure mail transfer agent is configured for local-only mode.","description":"Mail Transfer Agents (MTA), such as sendmail and Postfix, are used to listen for incoming mail and transfer the messages to the appropriate user or mail server. If the system is not intended to be a mail server, it is recommended that the MTA be configured to only process local mail.","rationale":"The software for all Mail Transfer Agents is complex and most have a long history of security issues. While it is important to ensure that the system can process local mail messages, it is not necessary to have the MTA's daemon listening on a port unless the server is intended to be a mail server that receives and processes mail from other systems. Note: - This recommendation is designed around the postfix mail server. - Depending on your environment you may have an alternative MTA installed such as exim4. If this is the case consult the documentation for your installed MTA to configure the recommended state.","remediation":"Edit /etc/postfix/main.cf and add the following line to the RECEIVING MAIL section. If the line already exists, change it to look like the line below: inet_interfaces = loopback-only Run the following command to restart postfix: # systemctl restart postfix.","compliance":{"cis":"2.2.16","cis_csc_v8":"4.8","cis_csc_v7":"9.2","cmmc_v2.0":"CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","iso_27001-2013":"A.13.1.3","mitre_mitigations":"M1042","mitre_tactics":"TA0008","mitre_techniques":"T1018,T1210","pci_dss_v3.2.1":"1.1.6,1.2.1,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,2.2.4,6.4.1","soc_2":"CC6.3,CC6.6"},"rules":["c:ss -lntu -> r:\\.*:25\\.*LISTEN && !r:127.0.0.1:25\\.*LISTEN|::1:25\\.*LISTEN"],"condition":"all","command":"ss -lntu","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'ss -lntu'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19070
sca.check.title: Ensure mail transfer agent is configured for local-only mode.
sca.check.description: Mail Transfer Agents (MTA), such as sendmail and Postfix, are used to listen for incoming mail and transfer the messages to the appropriate user or mail server. If the system is not intended to be a mail server, it is recommended that the MTA be configured to only process local mail.
sca.check.rationale: The software for all Mail Transfer Agents is complex and most have a long history of security issues. While it is important to ensure that the system can process local mail messages, it is not necessary to have the MTA's daemon listening on a port unless the server is intended to be a mail server that receives and processes mail from other systems. Note: - This recommendation is designed around the postfix mail server. - Depending on your environment you may have an alternative MTA installed such as exim4. If this is the case consult the documentation for your installed MTA to configure the recommended state.
sca.check.remediation: Edit /etc/postfix/main.cf and add the following line to the RECEIVING MAIL section. If the line already exists, change it to look like the line below: inet_interfaces = loopback-only Run the following command to restart postfix: # systemctl restart postfix.
sca.check.compliance.cis: 2.2.16
sca.check.compliance.cis_csc_v8: 4.8
sca.check.compliance.cis_csc_v7: 9.2
sca.check.compliance.cmmc_v2.0: CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.3
sca.check.compliance.mitre_mitigations: M1042
sca.check.compliance.mitre_tactics: TA0008
sca.check.compliance.mitre_techniques: T1018,T1210
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,2.2.4,6.4.1
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.command: ["ss -lntu"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'ss -lntu'

** Alert 1706006476.270543: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure rsync service is either not installed or is masked.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19071,"title":"Ensure rsync service is either not installed or is masked.","description":"The rsync service can be used to synchronize files between systems over network links.","rationale":"The rsync service presents a security risk as the rsync protocol is unencrypted. The rsync package should be removed or if required for dependencies, the rsync service should be stopped and masked to reduce the attack area of the system.","remediation":"Run the following command to remove rsync: # apt purge rsync -- OR -- Run the following commands to stop and mask rsync: # systemctl stop rsync # systemctl mask rsync.","compliance":{"cis":"2.2.17","cis_csc_v8":"4.8","cis_csc_v7":"9.2","cmmc_v2.0":"CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","iso_27001-2013":"A.13.1.3","mitre_mitigations":"M1042","mitre_tactics":"TA0008","mitre_techniques":"T1105,T1203,T1210,T1543,T1543.002,T1570","pci_dss_v3.2.1":"1.1.6,1.2.1,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,2.2.4,6.4.1","soc_2":"CC6.3,CC6.6"},"rules":["c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' rsync -> r:unknown ok not-installed","c:systemctl is-active rsync -> r:^inactive","c:systemctl is-enabled rsync -> r:^masked"],"condition":"any","command":"dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' rsync,systemctl is-active rsync,systemctl is-enabled rsync","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'systemctl is-active rsync'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19071
sca.check.title: Ensure rsync service is either not installed or is masked.
sca.check.description: The rsync service can be used to synchronize files between systems over network links.
sca.check.rationale: The rsync service presents a security risk as the rsync protocol is unencrypted. The rsync package should be removed or if required for dependencies, the rsync service should be stopped and masked to reduce the attack area of the system.
sca.check.remediation: Run the following command to remove rsync: # apt purge rsync -- OR -- Run the following commands to stop and mask rsync: # systemctl stop rsync # systemctl mask rsync.
sca.check.compliance.cis: 2.2.17
sca.check.compliance.cis_csc_v8: 4.8
sca.check.compliance.cis_csc_v7: 9.2
sca.check.compliance.cmmc_v2.0: CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.3
sca.check.compliance.mitre_mitigations: M1042
sca.check.compliance.mitre_tactics: TA0008
sca.check.compliance.mitre_techniques: T1105,T1203,T1210,T1543,T1543.002,T1570
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,2.2.4,6.4.1
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.command: ["dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' rsync", "systemctl is-active rsync", "systemctl is-enabled rsync"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'systemctl is-active rsync'

** Alert 1706006476.273990: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure NIS Client is not installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19072,"title":"Ensure NIS Client is not installed.","description":"The Network Information Service (NIS), formerly known as Yellow Pages, is a client-server directory service protocol used to distribute system configuration files. The NIS client was used to bind a machine to an NIS server and receive the distributed configuration files.","rationale":"The NIS service is inherently an insecure system that has been vulnerable to DOS attacks, buffer overflows and has poor authentication for querying NIS maps. NIS generally has been replaced by such protocols as Lightweight Directory Access Protocol (LDAP). It is recommended that the service be removed.","remediation":"Uninstall nis: # apt purge nis.","compliance":{"cis":"2.3.1","cis_csc_v8":"4.8","cis_csc_v7":"2.6","cmmc_v2.0":"CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","iso_27001-2013":"A.12.5.1,A.12.6.2","mitre_mitigations":"M1042","mitre_tactics":"TA0008","mitre_techniques":"T1203,T1543,T1543.002","pci_dss_v3.2.1":"1.1.6,1.2.1,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,2.2.4,6.4.1","soc_2":"CC6.3,CC6.6"},"rules":["c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' nis -> r:unknown ok not-installed","not c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' nis -> r:install ok installed"],"condition":"any","command":"dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' nis","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19072
sca.check.title: Ensure NIS Client is not installed.
sca.check.description: The Network Information Service (NIS), formerly known as Yellow Pages, is a client-server directory service protocol used to distribute system configuration files. The NIS client was used to bind a machine to an NIS server and receive the distributed configuration files.
sca.check.rationale: The NIS service is inherently an insecure system that has been vulnerable to DOS attacks, buffer overflows and has poor authentication for querying NIS maps. NIS generally has been replaced by such protocols as Lightweight Directory Access Protocol (LDAP). It is recommended that the service be removed.
sca.check.remediation: Uninstall nis: # apt purge nis.
sca.check.compliance.cis: 2.3.1
sca.check.compliance.cis_csc_v8: 4.8
sca.check.compliance.cis_csc_v7: 2.6
sca.check.compliance.cmmc_v2.0: CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.12.5.1,A.12.6.2
sca.check.compliance.mitre_mitigations: M1042
sca.check.compliance.mitre_tactics: TA0008
sca.check.compliance.mitre_techniques: T1203,T1543,T1543.002
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,2.2.4,6.4.1
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.command: ["dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' nis"]
sca.check.result: passed

** Alert 1706006476.277284: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure rsh client is not installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19073,"title":"Ensure rsh client is not installed.","description":"The rsh-client package contains the client commands for the rsh services.","rationale":"These legacy clients contain numerous security exposures and have been replaced with the more secure SSH package. Even if the server is removed, it is best to ensure the clients are also removed to prevent users from inadvertently attempting to use these commands and therefore exposing their credentials. Note that removing the rsh-client package removes the clients for rsh, rcp and rlogin.","remediation":"Uninstall rsh: # apt purge rsh-client.","compliance":{"cis":"2.3.2","cis_csc_v8":"4.8","cis_csc_v7":"9.2","cmmc_v2.0":"CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","iso_27001-2013":"A.13.1.3","mitre_mitigations":"M1041,M1042","mitre_tactics":"TA0008","mitre_techniques":"T1040,T1203,T1543,T1543.002","pci_dss_v3.2.1":"1.1.6,1.2.1,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,2.2.4,6.4.1","soc_2":"CC6.3,CC6.6"},"rules":["c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' rsh-client -> r:unknown ok not-installed","not c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' rsh-client -> r:install ok installed"],"condition":"any","command":"dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' rsh-client","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19073
sca.check.title: Ensure rsh client is not installed.
sca.check.description: The rsh-client package contains the client commands for the rsh services.
sca.check.rationale: These legacy clients contain numerous security exposures and have been replaced with the more secure SSH package. Even if the server is removed, it is best to ensure the clients are also removed to prevent users from inadvertently attempting to use these commands and therefore exposing their credentials. Note that removing the rsh-client package removes the clients for rsh, rcp and rlogin.
sca.check.remediation: Uninstall rsh: # apt purge rsh-client.
sca.check.compliance.cis: 2.3.2
sca.check.compliance.cis_csc_v8: 4.8
sca.check.compliance.cis_csc_v7: 9.2
sca.check.compliance.cmmc_v2.0: CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.3
sca.check.compliance.mitre_mitigations: M1041,M1042
sca.check.compliance.mitre_tactics: TA0008
sca.check.compliance.mitre_techniques: T1040,T1203,T1543,T1543.002
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,2.2.4,6.4.1
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.command: ["dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' rsh-client"]
sca.check.result: passed

** Alert 1706006476.280408: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure talk client is not installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19074,"title":"Ensure talk client is not installed.","description":"The talk software makes it possible for users to send and receive messages across systems through a terminal session. The talk client, which allows initialization of talk sessions, is installed by default.","rationale":"The software presents a security risk as it uses unencrypted protocols for communication.","remediation":"Uninstall talk: # apt purge talk.","compliance":{"cis":"2.3.3","cis_csc_v8":"4.8","cis_csc_v7":"9.2","cmmc_v2.0":"CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","iso_27001-2013":"A.13.1.3","mitre_mitigations":"M1041,M1042","mitre_tactics":"TA0006,TA0008","mitre_techniques":"T1203,T1543,T1543.002","pci_dss_v3.2.1":"1.1.6,1.2.1,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,2.2.4,6.4.1","soc_2":"CC6.3,CC6.6"},"rules":["c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' talk -> r:unknown ok not-installed","c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' talk -> r:no packages found matching talk","not c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' talk -> r:install ok installed"],"condition":"any","command":"dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' talk","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19074
sca.check.title: Ensure talk client is not installed.
sca.check.description: The talk software makes it possible for users to send and receive messages across systems through a terminal session. The talk client, which allows initialization of talk sessions, is installed by default.
sca.check.rationale: The software presents a security risk as it uses unencrypted protocols for communication.
sca.check.remediation: Uninstall talk: # apt purge talk.
sca.check.compliance.cis: 2.3.3
sca.check.compliance.cis_csc_v8: 4.8
sca.check.compliance.cis_csc_v7: 9.2
sca.check.compliance.cmmc_v2.0: CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.3
sca.check.compliance.mitre_mitigations: M1041,M1042
sca.check.compliance.mitre_tactics: TA0006,TA0008
sca.check.compliance.mitre_techniques: T1203,T1543,T1543.002
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,2.2.4,6.4.1
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.command: ["dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' talk"]
sca.check.result: passed

** Alert 1706006476.283281: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure telnet client is not installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19075,"title":"Ensure telnet client is not installed.","description":"The telnet package contains the telnet client, which allows users to start connections to other systems via the telnet protocol.","rationale":"The telnet protocol is insecure and unencrypted. The use of an unencrypted transmission medium could allow an unauthorized user to steal credentials. The ssh package provides an encrypted session and stronger security and is included in most Linux distributions.","remediation":"Uninstall telnet: # apt purge telnet.","compliance":{"cis":"2.3.4","cis_csc_v8":"4.8","cis_csc_v7":"9.2","cmmc_v2.0":"CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","iso_27001-2013":"A.13.1.3","mitre_mitigations":"M1041,M1042","mitre_tactics":"TA0006,TA0008","mitre_techniques":"T1040,T1203,T1543,T1543.002","pci_dss_v3.2.1":"1.1.6,1.2.1,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,2.2.4,6.4.1","soc_2":"CC6.3,CC6.6"},"rules":["c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' telnet -> r:unknown ok not-installed","not c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' telnet -> r:install ok installed"],"condition":"any","command":"dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' telnet","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19075
sca.check.title: Ensure telnet client is not installed.
sca.check.description: The telnet package contains the telnet client, which allows users to start connections to other systems via the telnet protocol.
sca.check.rationale: The telnet protocol is insecure and unencrypted. The use of an unencrypted transmission medium could allow an unauthorized user to steal credentials. The ssh package provides an encrypted session and stronger security and is included in most Linux distributions.
sca.check.remediation: Uninstall telnet: # apt purge telnet.
sca.check.compliance.cis: 2.3.4
sca.check.compliance.cis_csc_v8: 4.8
sca.check.compliance.cis_csc_v7: 9.2
sca.check.compliance.cmmc_v2.0: CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.3
sca.check.compliance.mitre_mitigations: M1041,M1042
sca.check.compliance.mitre_tactics: TA0006,TA0008
sca.check.compliance.mitre_techniques: T1040,T1203,T1543,T1543.002
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,2.2.4,6.4.1
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.command: ["dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' telnet"]
sca.check.result: passed

** Alert 1706006476.286260: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure LDAP client is not installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19076,"title":"Ensure LDAP client is not installed.","description":"The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for NIS/YP. It is a service that provides a method for looking up information from a central database.","rationale":"If the system will not need to act as an LDAP client, it is recommended that the software be removed to reduce the potential attack surface.","remediation":"Uninstall ldap-utils: # apt purge ldap-utils.","compliance":{"cis":"2.3.5","cis_csc_v8":"4.8","cis_csc_v7":"9.2","cmmc_v2.0":"CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","iso_27001-2013":"A.13.1.3","mitre_mitigations":"M1042","mitre_tactics":"TA0008","mitre_techniques":"T1203,T1543,T1543.002","pci_dss_v3.2.1":"1.1.6,1.2.1,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,2.2.4,6.4.1","soc_2":"CC6.3,CC6.6"},"rules":["c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' ldap-utils -> r:unknown ok not-installed","not c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' ldap-utils -> r:install ok installed"],"condition":"any","command":"dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' ldap-utils","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19076
sca.check.title: Ensure LDAP client is not installed.
sca.check.description: The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for NIS/YP. It is a service that provides a method for looking up information from a central database.
sca.check.rationale: If the system will not need to act as an LDAP client, it is recommended that the software be removed to reduce the potential attack surface.
sca.check.remediation: Uninstall ldap-utils: # apt purge ldap-utils.
sca.check.compliance.cis: 2.3.5
sca.check.compliance.cis_csc_v8: 4.8
sca.check.compliance.cis_csc_v7: 9.2
sca.check.compliance.cmmc_v2.0: CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.3
sca.check.compliance.mitre_mitigations: M1042
sca.check.compliance.mitre_tactics: TA0008
sca.check.compliance.mitre_techniques: T1203,T1543,T1543.002
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,2.2.4,6.4.1
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.command: ["dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' ldap-utils"]
sca.check.result: passed

** Alert 1706006476.289093: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure RPC is not installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19077,"title":"Ensure RPC is not installed.","description":"Remote Procedure Call (RPC) is a method for creating low level client server applications across different system architectures. It requires an RPC compliant client listening on a network port. The supporting package is rpcbind.\".","rationale":"If RPC is not required, it is recommended that this services be removed to reduce the remote attack surface.","remediation":"Run the following command to remove rpcbind: # apt purge rpcbind.","compliance":{"cis":"2.3.6","cis_csc_v8":"4.8","cis_csc_v7":"9.2","cmmc_v2.0":"CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","iso_27001-2013":"A.13.1.3","mitre_mitigations":"M1042","mitre_tactics":"TA0008","mitre_techniques":"T1203,T1543,T1543.002","pci_dss_v3.2.1":"1.1.6,1.2.1,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,2.2.4,6.4.1","soc_2":"CC6.3,CC6.6"},"rules":["c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' rpcbind -> r:unknown ok not-installed","not c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' rpcbind -> r:install ok installed"],"condition":"any","command":"dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' rpcbind","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19077
sca.check.title: Ensure RPC is not installed.
sca.check.description: Remote Procedure Call (RPC) is a method for creating low level client server applications across different system architectures. It requires an RPC compliant client listening on a network port. The supporting package is rpcbind.".
sca.check.rationale: If RPC is not required, it is recommended that this services be removed to reduce the remote attack surface.
sca.check.remediation: Run the following command to remove rpcbind: # apt purge rpcbind.
sca.check.compliance.cis: 2.3.6
sca.check.compliance.cis_csc_v8: 4.8
sca.check.compliance.cis_csc_v7: 9.2
sca.check.compliance.cmmc_v2.0: CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.3
sca.check.compliance.mitre_mitigations: M1042
sca.check.compliance.mitre_tactics: TA0008
sca.check.compliance.mitre_techniques: T1203,T1543,T1543.002
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,2.2.4,6.4.1
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.command: ["dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' rpcbind"]
sca.check.result: passed

** Alert 1706006476.291961: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure IPv6 status is identified.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19078,"title":"Ensure IPv6 status is identified.","description":"Internet Protocol Version 6 (IPv6) is the most recent version of Internet Protocol (IP). It's designed to supply IP addressing and additional security to support the predicted growth of connected devices. IPv6 is based on 128-bit addressing and can support 340 undecillion addresses, which is 340 followed by 36 zeroes. Features of IPv6 - Hierarchical addressing and routing infrastructure - Stateful and Stateless configuration - Support for quality of service (QoS) - An ideal protocol for neighboring node interaction.","rationale":"IETF RFC 4038 recommends that applications are built with an assumption of dual stack. It is recommended that IPv6 be enabled and configured in accordance with Benchmark recommendations. If dual stack and IPv6 are not used in your environment, IPv6 may be disabled to reduce the attack surface of the system, and recommendations pertaining to IPv6 can be skipped. Note: It is recommended that IPv6 be enabled and configured unless this is against local site policy.","remediation":"Enable or disable IPv6 in accordance with system requirements and local site policy.","compliance":{"cis":"3.1.1","cis_csc_v8":"4.8","cis_csc_v7":"9.2","cmmc_v2.0":"CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","iso_27001-2013":"A.13.1.3","mitre_mitigations":"M1042","mitre_tactics":"TA0008","mitre_techniques":"T1557,T1595,T1595.001,T1595.002","pci_dss_v3.2.1":"1.1.6,1.2.1,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,2.2.4,6.4.1","soc_2":"CC6.3,CC6.6"},"rules":["f:/sys/module/ipv6/parameters/disable -> r:^0$"],"condition":"all","file":"/sys/module/ipv6/parameters/disable","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19078
sca.check.title: Ensure IPv6 status is identified.
sca.check.description: Internet Protocol Version 6 (IPv6) is the most recent version of Internet Protocol (IP). It's designed to supply IP addressing and additional security to support the predicted growth of connected devices. IPv6 is based on 128-bit addressing and can support 340 undecillion addresses, which is 340 followed by 36 zeroes. Features of IPv6 - Hierarchical addressing and routing infrastructure - Stateful and Stateless configuration - Support for quality of service (QoS) - An ideal protocol for neighboring node interaction.
sca.check.rationale: IETF RFC 4038 recommends that applications are built with an assumption of dual stack. It is recommended that IPv6 be enabled and configured in accordance with Benchmark recommendations. If dual stack and IPv6 are not used in your environment, IPv6 may be disabled to reduce the attack surface of the system, and recommendations pertaining to IPv6 can be skipped. Note: It is recommended that IPv6 be enabled and configured unless this is against local site policy.
sca.check.remediation: Enable or disable IPv6 in accordance with system requirements and local site policy.
sca.check.compliance.cis: 3.1.1
sca.check.compliance.cis_csc_v8: 4.8
sca.check.compliance.cis_csc_v7: 9.2
sca.check.compliance.cmmc_v2.0: CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.3
sca.check.compliance.mitre_mitigations: M1042
sca.check.compliance.mitre_tactics: TA0008
sca.check.compliance.mitre_techniques: T1557,T1595,T1595.001,T1595.002
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,2.2.4,6.4.1
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.file: ["/sys/module/ipv6/parameters/disable"]
sca.check.result: passed

** Alert 1706006476.295916: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure bluetooth is disabled.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19079,"title":"Ensure bluetooth is disabled.","description":"Bluetooth is a short-range wireless technology standard that is used for exchanging data between devices over short distances. It employs UHF radio waves in the ISM bands, from 2.402 GHz to 2.48 GHz. It is mainly used as an alternative to wire connections.","rationale":"An attacker may be able to find a way to access or corrupt your data. One example of this type of activity is bluesnarfing, which refers to attackers using a Bluetooth connection to steal information off of your Bluetooth device. Also, viruses or other malicious code can take advantage of Bluetooth technology to infect other devices. If you are infected, your data may be corrupted, compromised, stolen, or lost.","remediation":"Run the following commands to stop and mask the Bluetooth service # systemctl stop bluetooth.service # systemctl mask bluetooth.service Note: A reboot may be required.","compliance":{"cis":"3.1.3","cis_csc_v8":"4.8","cis_csc_v7":"9.2","cmmc_v2.0":"CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","iso_27001-2013":"A.13.1.3","pci_dss_v3.2.1":"1.1.6,1.2.1,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,2.2.4,6.4.1","soc_2":"CC6.3,CC6.6"},"rules":["not c:systemctl is-enabled bluetooth.service -> r:^enabled","not c:systemctl is-active bluetooth.service -> r:^active"],"condition":"all","references":"https://www.cisa.gov/tips/st05-015","command":"systemctl is-enabled bluetooth.service,systemctl is-active bluetooth.service","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'systemctl is-enabled bluetooth.service'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19079
sca.check.title: Ensure bluetooth is disabled.
sca.check.description: Bluetooth is a short-range wireless technology standard that is used for exchanging data between devices over short distances. It employs UHF radio waves in the ISM bands, from 2.402 GHz to 2.48 GHz. It is mainly used as an alternative to wire connections.
sca.check.rationale: An attacker may be able to find a way to access or corrupt your data. One example of this type of activity is bluesnarfing, which refers to attackers using a Bluetooth connection to steal information off of your Bluetooth device. Also, viruses or other malicious code can take advantage of Bluetooth technology to infect other devices. If you are infected, your data may be corrupted, compromised, stolen, or lost.
sca.check.remediation: Run the following commands to stop and mask the Bluetooth service # systemctl stop bluetooth.service # systemctl mask bluetooth.service Note: A reboot may be required.
sca.check.compliance.cis: 3.1.3
sca.check.compliance.cis_csc_v8: 4.8
sca.check.compliance.cis_csc_v7: 9.2
sca.check.compliance.cmmc_v2.0: CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.3
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,2.2.4,6.4.1
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.references: https://www.cisa.gov/tips/st05-015
sca.check.command: ["systemctl is-enabled bluetooth.service", "systemctl is-active bluetooth.service"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'systemctl is-enabled bluetooth.service'

** Alert 1706006476.299621: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure ufw is installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19080,"title":"Ensure ufw is installed.","description":"The Uncomplicated Firewall (ufw) is a frontend for iptables and is particularly well-suited for host-based firewalls. ufw provides a framework for managing netfilter, as well as a command-line interface for manipulating the firewall.","rationale":"A firewall utility is required to configure the Linux kernel's netfilter framework via the iptables or nftables back-end. The Linux kernel's netfilter framework host-based firewall can protect against threats originating from within a corporate network to include malicious mobile code and poorly configured software on a host. Note: Only one firewall utility should be installed and configured. UFW is dependent on the iptables package.","remediation":"Run the following command to install Uncomplicated Firewall (UFW): apt install ufw.","compliance":{"cis":"3.4.1.1","cis_csc_v8":"4.4,4.5","cis_csc_v7":"9.4","cmmc_v2.0":"AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6","iso_27001-2013":"A.13.1.1","mitre_mitigations":"M1031,M1037","mitre_tactics":"TA0011","mitre_techniques":"T1562,T1562.004","nist_sp_800-53":"SC-7(5)","pci_dss_v3.2.1":"1.1.4,1.3.1,1.4","pci_dss_v4.0":"1.2.1,1.4.1","soc_2":"CC6.6"},"rules":["c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' ufw -> r:install ok installed"],"condition":"all","command":"dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' ufw","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19080
sca.check.title: Ensure ufw is installed.
sca.check.description: The Uncomplicated Firewall (ufw) is a frontend for iptables and is particularly well-suited for host-based firewalls. ufw provides a framework for managing netfilter, as well as a command-line interface for manipulating the firewall.
sca.check.rationale: A firewall utility is required to configure the Linux kernel's netfilter framework via the iptables or nftables back-end. The Linux kernel's netfilter framework host-based firewall can protect against threats originating from within a corporate network to include malicious mobile code and poorly configured software on a host. Note: Only one firewall utility should be installed and configured. UFW is dependent on the iptables package.
sca.check.remediation: Run the following command to install Uncomplicated Firewall (UFW): apt install ufw.
sca.check.compliance.cis: 3.4.1.1
sca.check.compliance.cis_csc_v8: 4.4,4.5
sca.check.compliance.cis_csc_v7: 9.4
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.1
sca.check.compliance.mitre_mitigations: M1031,M1037
sca.check.compliance.mitre_tactics: TA0011
sca.check.compliance.mitre_techniques: T1562,T1562.004
sca.check.compliance.nist_sp_800-53: SC-7(5)
sca.check.compliance.pci_dss_v3.2.1: 1.1.4,1.3.1,1.4
sca.check.compliance.pci_dss_v4.0: 1.2.1,1.4.1
sca.check.compliance.soc_2: CC6.6
sca.check.command: ["dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' ufw"]
sca.check.result: failed

** Alert 1706006476.303116: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure iptables-persistent is not installed with ufw.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19081,"title":"Ensure iptables-persistent is not installed with ufw.","description":"The iptables-persistent is a boot-time loader for netfilter rules, iptables plugin.","rationale":"Running both ufw and the services included in the iptables-persistent package may lead to conflict.","remediation":"Run the following command to remove the iptables-persistent package: # apt purge iptables-persistent.","compliance":{"cis":"3.4.1.2","cis_csc_v8":"4.4,4.5","cis_csc_v7":"9.4","cmmc_v2.0":"AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6","iso_27001-2013":"A.13.1.1","mitre_tactics":"TA0005","mitre_techniques":"T1562,T1562.004","nist_sp_800-53":"SC-7(5)","pci_dss_v3.2.1":"1.1.4,1.3.1,1.4","pci_dss_v4.0":"1.2.1,1.4.1","soc_2":"CC6.6"},"rules":["c:dpkg-query -s iptables-persistent -> r:package 'iptables-persistent' is not installed"],"condition":"all","command":"dpkg-query -s iptables-persistent","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19081
sca.check.title: Ensure iptables-persistent is not installed with ufw.
sca.check.description: The iptables-persistent is a boot-time loader for netfilter rules, iptables plugin.
sca.check.rationale: Running both ufw and the services included in the iptables-persistent package may lead to conflict.
sca.check.remediation: Run the following command to remove the iptables-persistent package: # apt purge iptables-persistent.
sca.check.compliance.cis: 3.4.1.2
sca.check.compliance.cis_csc_v8: 4.4,4.5
sca.check.compliance.cis_csc_v7: 9.4
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.1
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1562,T1562.004
sca.check.compliance.nist_sp_800-53: SC-7(5)
sca.check.compliance.pci_dss_v3.2.1: 1.1.4,1.3.1,1.4
sca.check.compliance.pci_dss_v4.0: 1.2.1,1.4.1
sca.check.compliance.soc_2: CC6.6
sca.check.command: ["dpkg-query -s iptables-persistent"]
sca.check.result: passed

** Alert 1706006476.305566: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure ufw service is enabled.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19082,"title":"Ensure ufw service is enabled.","description":"UncomplicatedFirewall (ufw) is a frontend for iptables. ufw provides a framework for managing netfilter, as well as a command-line and available graphical user interface for manipulating the firewall. Note: - When running ufw enable or starting ufw via its initscript, ufw will flush its chains. This is required so ufw can maintain a consistent state, but it may drop existing connections (eg ssh). ufw does support adding rules before enabling the firewall. - Run the following command before running ufw enable. # ufw allow proto tcp from any to any port 22 - The rules will still be flushed, but the ssh port will be open after enabling the firewall. Please note that once ufw is 'enabled', ufw will not flush the chains when adding or removing rules (but will when modifying a rule or changing the default policy) - By default, ufw will prompt when enabling the firewall while running under ssh. This can be disabled by using ufw --force enable.","rationale":"The ufw service must be enabled and running in order for ufw to protect the system.","remediation":"Run the following command to unmask the ufw daemon: # systemctl unmask ufw.service Run the following command to enable and start the ufw daemon: # systemctl --now enable ufw.service active Run the following command to enable ufw: # ufw enable.","compliance":{"cis":"3.4.1.3","cis_csc_v8":"4.4,4.5","cis_csc_v7":"9.4","cmmc_v2.0":"AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6","iso_27001-2013":"A.13.1.1","mitre_tactics":"TA0005","mitre_techniques":"T1562,T1562.004","nist_sp_800-53":"SC-7(5)","pci_dss_v3.2.1":"1.1.4,1.3.1,1.4","pci_dss_v4.0":"1.2.1,1.4.1","soc_2":"CC6.6"},"rules":["c:systemctl is-enabled ufw.service -> r:enabled","c:systemctl is-active ufw -> r:^active","c:ufw status -> r:active"],"condition":"all","references":"http://manpages.ubuntu.com/manpages/precise/en/man8/ufw.8.html","command":"systemctl is-enabled ufw.service,systemctl is-active ufw,ufw status","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'systemctl is-enabled ufw.service'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19082
sca.check.title: Ensure ufw service is enabled.
sca.check.description: UncomplicatedFirewall (ufw) is a frontend for iptables. ufw provides a framework for managing netfilter, as well as a command-line and available graphical user interface for manipulating the firewall. Note: - When running ufw enable or starting ufw via its initscript, ufw will flush its chains. This is required so ufw can maintain a consistent state, but it may drop existing connections (eg ssh). ufw does support adding rules before enabling the firewall. - Run the following command before running ufw enable. # ufw allow proto tcp from any to any port 22 - The rules will still be flushed, but the ssh port will be open after enabling the firewall. Please note that once ufw is 'enabled', ufw will not flush the chains when adding or removing rules (but will when modifying a rule or changing the default policy) - By default, ufw will prompt when enabling the firewall while running under ssh. This can be disabled by using ufw --force enable.
sca.check.rationale: The ufw service must be enabled and running in order for ufw to protect the system.
sca.check.remediation: Run the following command to unmask the ufw daemon: # systemctl unmask ufw.service Run the following command to enable and start the ufw daemon: # systemctl --now enable ufw.service active Run the following command to enable ufw: # ufw enable.
sca.check.compliance.cis: 3.4.1.3
sca.check.compliance.cis_csc_v8: 4.4,4.5
sca.check.compliance.cis_csc_v7: 9.4
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.1
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1562,T1562.004
sca.check.compliance.nist_sp_800-53: SC-7(5)
sca.check.compliance.pci_dss_v3.2.1: 1.1.4,1.3.1,1.4
sca.check.compliance.pci_dss_v4.0: 1.2.1,1.4.1
sca.check.compliance.soc_2: CC6.6
sca.check.references: http://manpages.ubuntu.com/manpages/precise/en/man8/ufw.8.html
sca.check.command: ["systemctl is-enabled ufw.service", "systemctl is-active ufw", "ufw status"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'systemctl is-enabled ufw.service'

** Alert 1706006476.310411: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure ufw loopback traffic is configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19083,"title":"Ensure ufw loopback traffic is configured.","description":"Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8 for IPv4 and ::1/128 for IPv6).","rationale":"Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8 for IPv4 and ::1/128 for IPv6) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.","remediation":"Run the following commands to implement the loopback rules: # ufw allow in on lo # ufw allow out on lo # ufw deny in from 127.0.0.0/8 # ufw deny in from ::1.","compliance":{"cis":"3.4.1.4","cis_csc_v8":"4.4,4.5","cis_csc_v7":"9.4","cmmc_v2.0":"AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6","iso_27001-2013":"A.13.1.1","mitre_mitigations":"M1031,M1037","mitre_tactics":"TA0011","mitre_techniques":"T1562,T1562.004","nist_sp_800-53":"SC-7(5)","pci_dss_v3.2.1":"1.1.4,1.3.1,1.4","pci_dss_v4.0":"1.2.1,1.4.1","soc_2":"CC6.6"},"rules":["c:ufw status verbose -> r:Anywhere on lo\\s*\\t*ALLOW IN\\s*\\t*Anywhere","c:ufw status verbose -> r:Anywhere\\s*\\t*DENY IN\\s*\\t*127.0.0.0/8","c:ufw status verbose -> r:Anywhere \\(v6\\) on lo\\s*\\t*ALLOW IN\\s*\\t*Anywhere \\(v6\\)","c:ufw status verbose -> r:Anywhere \\(v6\\)\\s*\\t*DENY IN\\s*\\t*::1","c:ufw status verbose -> r:Anywhere\\s*\\t*ALLOW OUT\\s*\\t*Anywhere on lo","c:ufw status verbose -> r:Anywhere \\(v6\\)\\s*\\t*ALLOW OUT\\s*\\t*Anywhere \\(v6\\) on lo"],"condition":"all","command":"ufw status verbose","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'ufw status verbose'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19083
sca.check.title: Ensure ufw loopback traffic is configured.
sca.check.description: Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8 for IPv4 and ::1/128 for IPv6).
sca.check.rationale: Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8 for IPv4 and ::1/128 for IPv6) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.
sca.check.remediation: Run the following commands to implement the loopback rules: # ufw allow in on lo # ufw allow out on lo # ufw deny in from 127.0.0.0/8 # ufw deny in from ::1.
sca.check.compliance.cis: 3.4.1.4
sca.check.compliance.cis_csc_v8: 4.4,4.5
sca.check.compliance.cis_csc_v7: 9.4
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.1
sca.check.compliance.mitre_mitigations: M1031,M1037
sca.check.compliance.mitre_tactics: TA0011
sca.check.compliance.mitre_techniques: T1562,T1562.004
sca.check.compliance.nist_sp_800-53: SC-7(5)
sca.check.compliance.pci_dss_v3.2.1: 1.1.4,1.3.1,1.4
sca.check.compliance.pci_dss_v4.0: 1.2.1,1.4.1
sca.check.compliance.soc_2: CC6.6
sca.check.command: ["ufw status verbose"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'ufw status verbose'

** Alert 1706006476.314204: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure ufw default deny firewall policy.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19084,"title":"Ensure ufw default deny firewall policy.","description":"A default deny policy on connections ensures that any unconfigured network usage will be rejected. Note: Any port or protocol without a explicit allow before the default deny will be blocked.","rationale":"With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage.","remediation":"Run the following commands to implement a default deny policy: # ufw default deny incoming # ufw default deny outgoing # ufw default deny routed.","compliance":{"cis":"3.4.1.7","cis_csc_v8":"4.4,4.5","cis_csc_v7":"9.4","cmmc_v2.0":"AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6","iso_27001-2013":"A.13.1.1","mitre_mitigations":"M1031,M1037","mitre_tactics":"TA0011","mitre_techniques":"T1562,T1562.004","nist_sp_800-53":"SC-7(5)","pci_dss_v3.2.1":"1.1.4,1.3.1,1.4","pci_dss_v4.0":"1.2.1,1.4.1","soc_2":"CC6.6"},"rules":["c:ufw status verbose -> r:^Default && r:deny\\W+(incoming)|reject\\W+(incoming)","c:ufw status verbose -> r:^Default && r:deny\\W+(outgoing)|reject\\W+(outgoing)","c:ufw status verbose -> r:^Default && r:deny\\W+(routed)|reject\\W+(routed)"],"condition":"all","command":"ufw status verbose","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'ufw status verbose'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19084
sca.check.title: Ensure ufw default deny firewall policy.
sca.check.description: A default deny policy on connections ensures that any unconfigured network usage will be rejected. Note: Any port or protocol without a explicit allow before the default deny will be blocked.
sca.check.rationale: With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage.
sca.check.remediation: Run the following commands to implement a default deny policy: # ufw default deny incoming # ufw default deny outgoing # ufw default deny routed.
sca.check.compliance.cis: 3.4.1.7
sca.check.compliance.cis_csc_v8: 4.4,4.5
sca.check.compliance.cis_csc_v7: 9.4
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.1
sca.check.compliance.mitre_mitigations: M1031,M1037
sca.check.compliance.mitre_tactics: TA0011
sca.check.compliance.mitre_techniques: T1562,T1562.004
sca.check.compliance.nist_sp_800-53: SC-7(5)
sca.check.compliance.pci_dss_v3.2.1: 1.1.4,1.3.1,1.4
sca.check.compliance.pci_dss_v4.0: 1.2.1,1.4.1
sca.check.compliance.soc_2: CC6.6
sca.check.command: ["ufw status verbose"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'ufw status verbose'

** Alert 1706006476.317482: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure nftables is installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19085,"title":"Ensure nftables is installed.","description":"nftables provides a new in-kernel packet classification framework that is based on a network-specific Virtual Machine (VM) and a new nft userspace command line tool. nftables reuses the existing Netfilter subsystems such as the existing hook infrastructure, the connection tracking system, NAT, userspace queuing and logging subsystem. Notes: - nftables is available in Linux kernel 3.13 and newer - Only one firewall utility should be installed and configured - Changing firewall settings while connected over the network can result in being locked out of the system.","rationale":"nftables is a subsystem of the Linux kernel that can protect against threats originating from within a corporate network to include malicious mobile code and poorly configured software on a host.","remediation":"Run the following command to install nftables: # apt install nftables.","compliance":{"cis":"3.4.2.1","cis_csc_v8":"4.4,4.5","cis_csc_v7":"9.4","cmmc_v2.0":"AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6","iso_27001-2013":"A.13.1.1","mitre_mitigations":"M1031,M1037","mitre_tactics":"TA0011","mitre_techniques":"T1562,T1562.004","nist_sp_800-53":"SC-7(5)","pci_dss_v3.2.1":"1.1.4,1.3.1,1.4","pci_dss_v4.0":"1.2.1,1.4.1","soc_2":"CC6.6"},"rules":["c:dpkg-query -s nftables -> r:install ok installed"],"condition":"all","command":"dpkg-query -s nftables","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19085
sca.check.title: Ensure nftables is installed.
sca.check.description: nftables provides a new in-kernel packet classification framework that is based on a network-specific Virtual Machine (VM) and a new nft userspace command line tool. nftables reuses the existing Netfilter subsystems such as the existing hook infrastructure, the connection tracking system, NAT, userspace queuing and logging subsystem. Notes: - nftables is available in Linux kernel 3.13 and newer - Only one firewall utility should be installed and configured - Changing firewall settings while connected over the network can result in being locked out of the system.
sca.check.rationale: nftables is a subsystem of the Linux kernel that can protect against threats originating from within a corporate network to include malicious mobile code and poorly configured software on a host.
sca.check.remediation: Run the following command to install nftables: # apt install nftables.
sca.check.compliance.cis: 3.4.2.1
sca.check.compliance.cis_csc_v8: 4.4,4.5
sca.check.compliance.cis_csc_v7: 9.4
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.1
sca.check.compliance.mitre_mitigations: M1031,M1037
sca.check.compliance.mitre_tactics: TA0011
sca.check.compliance.mitre_techniques: T1562,T1562.004
sca.check.compliance.nist_sp_800-53: SC-7(5)
sca.check.compliance.pci_dss_v3.2.1: 1.1.4,1.3.1,1.4
sca.check.compliance.pci_dss_v4.0: 1.2.1,1.4.1
sca.check.compliance.soc_2: CC6.6
sca.check.command: ["dpkg-query -s nftables"]
sca.check.result: failed

** Alert 1706006476.320987: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure ufw is uninstalled or disabled with nftables.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19086,"title":"Ensure ufw is uninstalled or disabled with nftables.","description":"Uncomplicated Firewall (UFW) is a program for managing a netfilter firewall designed to be easy to use.","rationale":"Running both the nftables service and ufw may lead to conflict and unexpected results.","remediation":"Run one of the following to either remove ufw or disable ufw and mask ufw.service: Run the following command to remove ufw: # apt purge ufw -OR- Run the following commands to disable ufw and mask ufw.service: # ufw disable # systemctl stop ufw.service # systemctl mask ufw.service Note: ufw disable needs to be run before systemctl mask ufw.service in order to correctly disable UFW.","compliance":{"cis":"3.4.2.2","cis_csc_v8":"4.4,4.5","cis_csc_v7":"9.4","cmmc_v2.0":"AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6","iso_27001-2013":"A.13.1.1","mitre_tactics":"TA0005","mitre_techniques":"T1562,T1562.004","nist_sp_800-53":"SC-7(5)","pci_dss_v3.2.1":"1.1.4,1.3.1,1.4","pci_dss_v4.0":"1.2.1,1.4.1","soc_2":"CC6.6"},"rules":["not c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' ufw -> r:install ok installed","c:ufw status -> r:inactive","c:systemctl is-enabled ufw.service -> r:^masked"],"condition":"any","command":"dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' ufw","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19086
sca.check.title: Ensure ufw is uninstalled or disabled with nftables.
sca.check.description: Uncomplicated Firewall (UFW) is a program for managing a netfilter firewall designed to be easy to use.
sca.check.rationale: Running both the nftables service and ufw may lead to conflict and unexpected results.
sca.check.remediation: Run one of the following to either remove ufw or disable ufw and mask ufw.service: Run the following command to remove ufw: # apt purge ufw -OR- Run the following commands to disable ufw and mask ufw.service: # ufw disable # systemctl stop ufw.service # systemctl mask ufw.service Note: ufw disable needs to be run before systemctl mask ufw.service in order to correctly disable UFW.
sca.check.compliance.cis: 3.4.2.2
sca.check.compliance.cis_csc_v8: 4.4,4.5
sca.check.compliance.cis_csc_v7: 9.4
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.1
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1562,T1562.004
sca.check.compliance.nist_sp_800-53: SC-7(5)
sca.check.compliance.pci_dss_v3.2.1: 1.1.4,1.3.1,1.4
sca.check.compliance.pci_dss_v4.0: 1.2.1,1.4.1
sca.check.compliance.soc_2: CC6.6
sca.check.command: ["dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' ufw"]
sca.check.result: passed

** Alert 1706006476.324201: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure a nftables table exists.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19087,"title":"Ensure a nftables table exists.","description":"Tables hold chains. Each table only has one address family and only applies to packets of this family. Tables can have one of five families.","rationale":"nftables doesn't have any default tables. Without a table being build, nftables will not filter network traffic.","remediation":"Run the following command to create a table in nftables # nft create table inet <table name> Example: # nft create table inet filter.","compliance":{"cis":"3.4.2.4","cis_csc_v8":"4.4,4.5","cis_csc_v7":"9.4","cmmc_v2.0":"AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6","iso_27001-2013":"A.13.1.1","mitre_mitigations":"M1031,M1037","mitre_tactics":"TA0011","mitre_techniques":"T1562,T1562.004","nist_sp_800-53":"SC-7(5)","pci_dss_v3.2.1":"1.1.4,1.3.1,1.4","pci_dss_v4.0":"1.2.1,1.4.1","soc_2":"CC6.6"},"rules":["c:nft list tables -> r:\\w+"],"condition":"all","command":"nft list tables","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'nft list tables'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19087
sca.check.title: Ensure a nftables table exists.
sca.check.description: Tables hold chains. Each table only has one address family and only applies to packets of this family. Tables can have one of five families.
sca.check.rationale: nftables doesn't have any default tables. Without a table being build, nftables will not filter network traffic.
sca.check.remediation: Run the following command to create a table in nftables # nft create table inet <table name> Example: # nft create table inet filter.
sca.check.compliance.cis: 3.4.2.4
sca.check.compliance.cis_csc_v8: 4.4,4.5
sca.check.compliance.cis_csc_v7: 9.4
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.1
sca.check.compliance.mitre_mitigations: M1031,M1037
sca.check.compliance.mitre_tactics: TA0011
sca.check.compliance.mitre_techniques: T1562,T1562.004
sca.check.compliance.nist_sp_800-53: SC-7(5)
sca.check.compliance.pci_dss_v3.2.1: 1.1.4,1.3.1,1.4
sca.check.compliance.pci_dss_v4.0: 1.2.1,1.4.1
sca.check.compliance.soc_2: CC6.6
sca.check.command: ["nft list tables"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'nft list tables'

** Alert 1706006476.326958: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure nftables base chains exist.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19088,"title":"Ensure nftables base chains exist.","description":"Chains are containers for rules. They exist in two kinds, base chains and regular chains. A base chain is an entry point for packets from the networking stack, a regular chain may be used as jump target and is used for better rule organization.","rationale":"If a base chain doesn't exist with a hook for input, forward, and delete, packets that would flow through those chains will not be touched by nftables.","remediation":"Run the following command to create the base chains: # nft create chain inet <table name> <base chain name> { type filter hook <(input|forward|output)> priority 0 \\; } Example: # nft create chain inet filter input { type filter hook input priority 0 \\; } # nft create chain inet filter forward { type filter hook forward priority 0 \\; } # nft create chain inet filter output { type filter hook output priority 0 \\; }.","compliance":{"cis":"3.4.2.5","cis_csc_v8":"4.4,4.5","cis_csc_v7":"9.4","cmmc_v2.0":"AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6","iso_27001-2013":"A.13.1.1","mitre_tactics":"TA0005","mitre_techniques":"T1562,T1562.004","nist_sp_800-53":"SC-7(5)","pci_dss_v3.2.1":"1.1.4,1.3.1,1.4","pci_dss_v4.0":"1.2.1,1.4.1","soc_2":"CC6.6"},"rules":["c:nft list ruleset -> r:hook input","c:nft list ruleset -> r:hook forward","c:nft list ruleset -> r:hook output"],"condition":"all","command":"nft list ruleset","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'nft list ruleset'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19088
sca.check.title: Ensure nftables base chains exist.
sca.check.description: Chains are containers for rules. They exist in two kinds, base chains and regular chains. A base chain is an entry point for packets from the networking stack, a regular chain may be used as jump target and is used for better rule organization.
sca.check.rationale: If a base chain doesn't exist with a hook for input, forward, and delete, packets that would flow through those chains will not be touched by nftables.
sca.check.remediation: Run the following command to create the base chains: # nft create chain inet <table name> <base chain name> { type filter hook <(input|forward|output)> priority 0 \; } Example: # nft create chain inet filter input { type filter hook input priority 0 \; } # nft create chain inet filter forward { type filter hook forward priority 0 \; } # nft create chain inet filter output { type filter hook output priority 0 \; }.
sca.check.compliance.cis: 3.4.2.5
sca.check.compliance.cis_csc_v8: 4.4,4.5
sca.check.compliance.cis_csc_v7: 9.4
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.1
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1562,T1562.004
sca.check.compliance.nist_sp_800-53: SC-7(5)
sca.check.compliance.pci_dss_v3.2.1: 1.1.4,1.3.1,1.4
sca.check.compliance.pci_dss_v4.0: 1.2.1,1.4.1
sca.check.compliance.soc_2: CC6.6
sca.check.command: ["nft list ruleset"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'nft list ruleset'

** Alert 1706006476.330584: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:16 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure nftables loopback traffic is configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19089,"title":"Ensure nftables loopback traffic is configured.","description":"Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network.","rationale":"Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.","remediation":"Run the following commands to implement the loopback rules: # nft add rule inet filter input iif lo accept # nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop -IF- IPv6 is enabled on the system: Run the following command to implement the IPv6 loopback rule: # nft add rule inet filter input ip6 saddr ::1 counter drop.","compliance":{"cis":"3.4.2.6","cis_csc_v8":"4.4,4.5","cis_csc_v7":"9.4","cmmc_v2.0":"AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6","iso_27001-2013":"A.13.1.1","mitre_tactics":"TA0005","mitre_techniques":"T1562,T1562.004","nist_sp_800-53":"SC-7(5)","pci_dss_v3.2.1":"1.1.4,1.3.1,1.4","pci_dss_v4.0":"1.2.1,1.4.1","soc_2":"CC6.6"},"rules":["c:iptables -L INPUT -v -n -> r:\\.*ACCEPT\\.*all\\.*lo\\.**\\.*0.0.0.0/0\\.*0.0.0.0/0","c:iptables -L INPUT -v -n -> r:\\.*DROP\\.*all\\.**\\.**\\.*127.0.0.0/8\\.*0.0.0.0/0","c:iptables -L OUTPUT -v -n -> r:\\.*ACCEPT\\.*all\\.**\\.*lo\\.*0.0.0.0/0\\.*0.0.0.0/0"],"condition":"all","command":"iptables -L INPUT -v -n,iptables -L OUTPUT -v -n","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'iptables -L INPUT -v -n'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19089
sca.check.title: Ensure nftables loopback traffic is configured.
sca.check.description: Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network.
sca.check.rationale: Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.
sca.check.remediation: Run the following commands to implement the loopback rules: # nft add rule inet filter input iif lo accept # nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop -IF- IPv6 is enabled on the system: Run the following command to implement the IPv6 loopback rule: # nft add rule inet filter input ip6 saddr ::1 counter drop.
sca.check.compliance.cis: 3.4.2.6
sca.check.compliance.cis_csc_v8: 4.4,4.5
sca.check.compliance.cis_csc_v7: 9.4
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.1
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1562,T1562.004
sca.check.compliance.nist_sp_800-53: SC-7(5)
sca.check.compliance.pci_dss_v3.2.1: 1.1.4,1.3.1,1.4
sca.check.compliance.pci_dss_v4.0: 1.2.1,1.4.1
sca.check.compliance.soc_2: CC6.6
sca.check.command: ["iptables -L INPUT -v -n", "iptables -L OUTPUT -v -n"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'iptables -L INPUT -v -n'

** Alert 1706006477.334344: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure nftables default deny firewall policy.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19090,"title":"Ensure nftables default deny firewall policy.","description":"Base chain policy is the default verdict that will be applied to packets reaching the end of the chain.","rationale":"There are two policies: accept (Default) and drop. If the policy is set to accept, the firewall will accept any packet that is not configured to be denied and the packet will continue transversing the network stack. It is easier to white list acceptable usage than to black list unacceptable usage. Note: Changing firewall settings while connected over network can result in being locked out of the system.","remediation":"Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP policy: # nft chain <table family> <table name> <chain name> { policy drop \\; } Example: # nft chain inet filter input { policy drop \\; } # nft chain inet filter forward { policy drop \\; } # nft chain inet filter output { policy drop \\; }.","compliance":{"cis":"3.4.2.8","cis_csc_v8":"4.4,4.5","cis_csc_v7":"9.4","cmmc_v2.0":"AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6","iso_27001-2013":"A.13.1.1","mitre_mitigations":"M1031,M1037","mitre_tactics":"TA0011","mitre_techniques":"T1562,T1562.004","nist_sp_800-53":"SC-7(5)","pci_dss_v3.2.1":"1.1.4,1.3.1,1.4","pci_dss_v4.0":"1.2.1,1.4.1","soc_2":"CC6.6"},"rules":["c:nft list ruleset -> r:hook input && r:policy drop","c:nft list ruleset -> r:hook forward && r:policy drop","c:nft list ruleset -> r:hook output && r:policy drop"],"condition":"all","command":"nft list ruleset","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'nft list ruleset'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19090
sca.check.title: Ensure nftables default deny firewall policy.
sca.check.description: Base chain policy is the default verdict that will be applied to packets reaching the end of the chain.
sca.check.rationale: There are two policies: accept (Default) and drop. If the policy is set to accept, the firewall will accept any packet that is not configured to be denied and the packet will continue transversing the network stack. It is easier to white list acceptable usage than to black list unacceptable usage. Note: Changing firewall settings while connected over network can result in being locked out of the system.
sca.check.remediation: Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP policy: # nft chain <table family> <table name> <chain name> { policy drop \; } Example: # nft chain inet filter input { policy drop \; } # nft chain inet filter forward { policy drop \; } # nft chain inet filter output { policy drop \; }.
sca.check.compliance.cis: 3.4.2.8
sca.check.compliance.cis_csc_v8: 4.4,4.5
sca.check.compliance.cis_csc_v7: 9.4
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.1
sca.check.compliance.mitre_mitigations: M1031,M1037
sca.check.compliance.mitre_tactics: TA0011
sca.check.compliance.mitre_techniques: T1562,T1562.004
sca.check.compliance.nist_sp_800-53: SC-7(5)
sca.check.compliance.pci_dss_v3.2.1: 1.1.4,1.3.1,1.4
sca.check.compliance.pci_dss_v4.0: 1.2.1,1.4.1
sca.check.compliance.soc_2: CC6.6
sca.check.command: ["nft list ruleset"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'nft list ruleset'

** Alert 1706006477.338244: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure nftables service is enabled.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19091,"title":"Ensure nftables service is enabled.","description":"The nftables service allows for the loading of nftables rulesets during boot, or starting on the nftables service.","rationale":"The nftables service restores the nftables rules from the rules files referenced in the /etc/nftables.conf file during boot or the starting of the nftables service.","remediation":"Run the following command to enable the nftables service: # systemctl enable nftables.","compliance":{"cis":"3.4.2.9","cis_csc_v8":"4.4,4.5","cis_csc_v7":"9.4","cmmc_v2.0":"AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6","iso_27001-2013":"A.13.1.1","mitre_mitigations":"M1031,M1037","mitre_tactics":"TA0011","mitre_techniques":"T1562,T1562.004","nist_sp_800-53":"SC-7(5)","pci_dss_v3.2.1":"1.1.4,1.3.1,1.4","pci_dss_v4.0":"1.2.1,1.4.1","soc_2":"CC6.6"},"rules":["c:systemctl is-enabled nftables -> r:enabled"],"condition":"all","command":"systemctl is-enabled nftables","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'systemctl is-enabled nftables'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19091
sca.check.title: Ensure nftables service is enabled.
sca.check.description: The nftables service allows for the loading of nftables rulesets during boot, or starting on the nftables service.
sca.check.rationale: The nftables service restores the nftables rules from the rules files referenced in the /etc/nftables.conf file during boot or the starting of the nftables service.
sca.check.remediation: Run the following command to enable the nftables service: # systemctl enable nftables.
sca.check.compliance.cis: 3.4.2.9
sca.check.compliance.cis_csc_v8: 4.4,4.5
sca.check.compliance.cis_csc_v7: 9.4
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.1
sca.check.compliance.mitre_mitigations: M1031,M1037
sca.check.compliance.mitre_tactics: TA0011
sca.check.compliance.mitre_techniques: T1562,T1562.004
sca.check.compliance.nist_sp_800-53: SC-7(5)
sca.check.compliance.pci_dss_v3.2.1: 1.1.4,1.3.1,1.4
sca.check.compliance.pci_dss_v4.0: 1.2.1,1.4.1
sca.check.compliance.soc_2: CC6.6
sca.check.command: ["systemctl is-enabled nftables"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'systemctl is-enabled nftables'

** Alert 1706006477.341044: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure nftables rules are permanent.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19092,"title":"Ensure nftables rules are permanent.","description":"nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames. The nftables service reads the /etc/nftables.conf file for a nftables file or files to include in the nftables ruleset. A nftables ruleset containing the input, forward, and output base chains allow network traffic to be filtered.","rationale":"Changes made to nftables ruleset only affect the live system, you will also need to configure the nftables ruleset to apply on boot.","remediation":"Edit the /etc/nftables.conf file and un-comment or add a line with include <Absolute path to nftables rules file> for each nftables file you want included in the nftables ruleset on boot Example: # vi /etc/nftables.conf Add the line: include \"/etc/nftables.rules\".","compliance":{"cis":"3.4.2.10","cis_csc_v8":"4.4,4.5","cis_csc_v7":"9.4","cmmc_v2.0":"AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6","iso_27001-2013":"A.13.1.1","mitre_mitigations":"M1031","mitre_tactics":"TA0011","mitre_techniques":"T1562,T1562.004","nist_sp_800-53":"SC-7(5)","pci_dss_v3.2.1":"1.1.4,1.3.1,1.4","pci_dss_v4.0":"1.2.1,1.4.1","soc_2":"CC6.6"},"rules":["f:/etc/nftables.conf -> r:include *"],"condition":"all","file":"/etc/nftables.conf","status":"Not applicable","reason":"Could not open file '/etc/nftables.conf'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19092
sca.check.title: Ensure nftables rules are permanent.
sca.check.description: nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames. The nftables service reads the /etc/nftables.conf file for a nftables file or files to include in the nftables ruleset. A nftables ruleset containing the input, forward, and output base chains allow network traffic to be filtered.
sca.check.rationale: Changes made to nftables ruleset only affect the live system, you will also need to configure the nftables ruleset to apply on boot.
sca.check.remediation: Edit the /etc/nftables.conf file and un-comment or add a line with include <Absolute path to nftables rules file> for each nftables file you want included in the nftables ruleset on boot Example: # vi /etc/nftables.conf Add the line: include "/etc/nftables.rules".
sca.check.compliance.cis: 3.4.2.10
sca.check.compliance.cis_csc_v8: 4.4,4.5
sca.check.compliance.cis_csc_v7: 9.4
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.1
sca.check.compliance.mitre_mitigations: M1031
sca.check.compliance.mitre_tactics: TA0011
sca.check.compliance.mitre_techniques: T1562,T1562.004
sca.check.compliance.nist_sp_800-53: SC-7(5)
sca.check.compliance.pci_dss_v3.2.1: 1.1.4,1.3.1,1.4
sca.check.compliance.pci_dss_v4.0: 1.2.1,1.4.1
sca.check.compliance.soc_2: CC6.6
sca.check.file: ["/etc/nftables.conf"]
sca.check.result: not applicable
sca.check.reason: Could not open file '/etc/nftables.conf'

** Alert 1706006477.344486: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure iptables packages are installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19093,"title":"Ensure iptables packages are installed.","description":"iptables is a utility program that allows a system administrator to configure the tables provided by the Linux kernel firewall, implemented as different Netfilter modules, and the chains and rules it stores. Different kernel modules and programs are used for different protocols; iptables applies to IPv4, ip6tables to IPv6, arptables to ARP, and ebtables to Ethernet frames.","rationale":"A method of configuring and maintaining firewall rules is necessary to configure a Host Based Firewall.","remediation":"Run the following command to install iptables and iptables-persistent # apt install iptables iptables-persistent.","compliance":{"cis":"3.4.3.1.1","cis_csc_v8":"4.4,4.5","cis_csc_v7":"9.4","cmmc_v2.0":"AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6","iso_27001-2013":"A.13.1.1","mitre_mitigations":"M1031,M1037","mitre_tactics":"TA0011","mitre_techniques":"T1562,T1562.004","nist_sp_800-53":"SC-7(5)","pci_dss_v3.2.1":"1.1.4,1.3.1,1.4","pci_dss_v4.0":"1.2.1,1.4.1","soc_2":"CC6.6"},"rules":["c:apt list iptables iptables-persistent -> r:installed,automatic"],"condition":"all","command":"apt list iptables iptables-persistent","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19093
sca.check.title: Ensure iptables packages are installed.
sca.check.description: iptables is a utility program that allows a system administrator to configure the tables provided by the Linux kernel firewall, implemented as different Netfilter modules, and the chains and rules it stores. Different kernel modules and programs are used for different protocols; iptables applies to IPv4, ip6tables to IPv6, arptables to ARP, and ebtables to Ethernet frames.
sca.check.rationale: A method of configuring and maintaining firewall rules is necessary to configure a Host Based Firewall.
sca.check.remediation: Run the following command to install iptables and iptables-persistent # apt install iptables iptables-persistent.
sca.check.compliance.cis: 3.4.3.1.1
sca.check.compliance.cis_csc_v8: 4.4,4.5
sca.check.compliance.cis_csc_v7: 9.4
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.1
sca.check.compliance.mitre_mitigations: M1031,M1037
sca.check.compliance.mitre_tactics: TA0011
sca.check.compliance.mitre_techniques: T1562,T1562.004
sca.check.compliance.nist_sp_800-53: SC-7(5)
sca.check.compliance.pci_dss_v3.2.1: 1.1.4,1.3.1,1.4
sca.check.compliance.pci_dss_v4.0: 1.2.1,1.4.1
sca.check.compliance.soc_2: CC6.6
sca.check.command: ["apt list iptables iptables-persistent"]
sca.check.result: failed

** Alert 1706006477.347585: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure nftables is not installed with iptables.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19094,"title":"Ensure nftables is not installed with iptables.","description":"nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames and is the successor to iptables.","rationale":"Running both iptables and nftables may lead to conflict.","remediation":"Run the following command to remove nftables: # apt purge nftables.","compliance":{"cis":"3.4.3.1.2","cis_csc_v8":"4.4,4.5","cis_csc_v7":"9.4","cmmc_v2.0":"AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6","iso_27001-2013":"A.13.1.1","mitre_tactics":"TA0011","mitre_techniques":"T1562,T1562.004","nist_sp_800-53":"SC-7(5)","pci_dss_v3.2.1":"1.1.4,1.3.1,1.4","pci_dss_v4.0":"1.2.1,1.4.1","soc_2":"CC6.6"},"rules":["c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' nftables -> r:unknown ok not-installed"],"condition":"all","command":"dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' nftables","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19094
sca.check.title: Ensure nftables is not installed with iptables.
sca.check.description: nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames and is the successor to iptables.
sca.check.rationale: Running both iptables and nftables may lead to conflict.
sca.check.remediation: Run the following command to remove nftables: # apt purge nftables.
sca.check.compliance.cis: 3.4.3.1.2
sca.check.compliance.cis_csc_v8: 4.4,4.5
sca.check.compliance.cis_csc_v7: 9.4
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.1
sca.check.compliance.mitre_tactics: TA0011
sca.check.compliance.mitre_techniques: T1562,T1562.004
sca.check.compliance.nist_sp_800-53: SC-7(5)
sca.check.compliance.pci_dss_v3.2.1: 1.1.4,1.3.1,1.4
sca.check.compliance.pci_dss_v4.0: 1.2.1,1.4.1
sca.check.compliance.soc_2: CC6.6
sca.check.command: ["dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' nftables"]
sca.check.result: failed

** Alert 1706006477.350130: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure ufw is uninstalled or disabled with iptables.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19095,"title":"Ensure ufw is uninstalled or disabled with iptables.","description":"Uncomplicated Firewall (UFW) is a program for managing a netfilter firewall designed to be easy to use. - Uses a command-line interface consisting of a small number of simple commands - Uses iptables for configuration.","rationale":"Running iptables.persistent with ufw enabled may lead to conflict and unexpected results.","remediation":"Run one of the following commands to either remove ufw or stop and mask ufw Run the following command to remove ufw: # apt purge ufw -OR- Run the following commands to disable ufw: # ufw disable # systemctl stop ufw # systemctl mask ufw Note: ufw disable needs to be run before systemctl mask ufw in order to correctly disable UFW.","compliance":{"cis":"3.4.3.1.3","cis_csc_v8":"4.4,4.5","cis_csc_v7":"9.4","cmmc_v2.0":"AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6","iso_27001-2013":"A.13.1.1","mitre_tactics":"TA0011","mitre_techniques":"T1562,T1562.004","nist_sp_800-53":"SC-7(5)","pci_dss_v3.2.1":"1.1.4,1.3.1,1.4","pci_dss_v4.0":"1.2.1,1.4.1","soc_2":"CC6.6"},"rules":["c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' ufw -> r:unknown ok not-installed","c:ufw status -> r:inactive","c:systemctl is-enabled ufw -> r:masked","c:ufw status -> r:inactive"],"condition":"any","command":"dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' ufw,ufw status,systemctl is-enabled ufw","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'ufw status'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19095
sca.check.title: Ensure ufw is uninstalled or disabled with iptables.
sca.check.description: Uncomplicated Firewall (UFW) is a program for managing a netfilter firewall designed to be easy to use. - Uses a command-line interface consisting of a small number of simple commands - Uses iptables for configuration.
sca.check.rationale: Running iptables.persistent with ufw enabled may lead to conflict and unexpected results.
sca.check.remediation: Run one of the following commands to either remove ufw or stop and mask ufw Run the following command to remove ufw: # apt purge ufw -OR- Run the following commands to disable ufw: # ufw disable # systemctl stop ufw # systemctl mask ufw Note: ufw disable needs to be run before systemctl mask ufw in order to correctly disable UFW.
sca.check.compliance.cis: 3.4.3.1.3
sca.check.compliance.cis_csc_v8: 4.4,4.5
sca.check.compliance.cis_csc_v7: 9.4
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.1
sca.check.compliance.mitre_tactics: TA0011
sca.check.compliance.mitre_techniques: T1562,T1562.004
sca.check.compliance.nist_sp_800-53: SC-7(5)
sca.check.compliance.pci_dss_v3.2.1: 1.1.4,1.3.1,1.4
sca.check.compliance.pci_dss_v4.0: 1.2.1,1.4.1
sca.check.compliance.soc_2: CC6.6
sca.check.command: ["dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' ufw", "ufw status", "systemctl is-enabled ufw"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'ufw status'

** Alert 1706006477.353747: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure iptables default deny firewall policy.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19096,"title":"Ensure iptables default deny firewall policy.","description":"A default deny all policy on connections ensures that any unconfigured network usage will be rejected. Notes: - Changing firewall settings while connected over network can result in being locked out of the system - Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well.","rationale":"With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage.","remediation":"Run the following commands to implement a default DROP policy: # iptables -P INPUT DROP # iptables -P OUTPUT DROP # iptables -P FORWARD DROP.","compliance":{"cis":"3.4.3.2.1","cis_csc_v8":"4.4,4.5","cis_csc_v7":"9.4","cmmc_v2.0":"AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6","iso_27001-2013":"A.13.1.1","mitre_mitigations":"M1031,M1037","mitre_tactics":"TA0011","mitre_techniques":"T1562,T1562.004","nist_sp_800-53":"SC-7(5)","pci_dss_v3.2.1":"1.1.4,1.3.1,1.4","pci_dss_v4.0":"1.2.1,1.4.1","soc_2":"CC6.6"},"rules":["c:iptables -L -> r:Chain INPUT \\(policy DROP\\)|Chain INPUT \\(policy REJECT\\)","c:iptables -L -> r:Chain FORWARD \\(policy DROP\\)|Chain FORWARD \\(policy REJECT\\)","c:iptables -L -> r:Chain OUTPUT \\(policy DROP\\)|Chain OUTPUT \\(policy REJECT\\)"],"condition":"all","command":"iptables -L","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'iptables -L'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19096
sca.check.title: Ensure iptables default deny firewall policy.
sca.check.description: A default deny all policy on connections ensures that any unconfigured network usage will be rejected. Notes: - Changing firewall settings while connected over network can result in being locked out of the system - Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well.
sca.check.rationale: With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage.
sca.check.remediation: Run the following commands to implement a default DROP policy: # iptables -P INPUT DROP # iptables -P OUTPUT DROP # iptables -P FORWARD DROP.
sca.check.compliance.cis: 3.4.3.2.1
sca.check.compliance.cis_csc_v8: 4.4,4.5
sca.check.compliance.cis_csc_v7: 9.4
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.1
sca.check.compliance.mitre_mitigations: M1031,M1037
sca.check.compliance.mitre_tactics: TA0011
sca.check.compliance.mitre_techniques: T1562,T1562.004
sca.check.compliance.nist_sp_800-53: SC-7(5)
sca.check.compliance.pci_dss_v3.2.1: 1.1.4,1.3.1,1.4
sca.check.compliance.pci_dss_v4.0: 1.2.1,1.4.1
sca.check.compliance.soc_2: CC6.6
sca.check.command: ["iptables -L"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'iptables -L'

** Alert 1706006477.357369: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure iptables loopback traffic is configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19097,"title":"Ensure iptables loopback traffic is configured.","description":"Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8). Notes: - Changing firewall settings while connected over network can result in being locked out of the system - Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well.","rationale":"Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.","remediation":"Run the following commands to implement the loopback rules: # iptables -A INPUT -i lo -j ACCEPT # iptables -A OUTPUT -o lo -j ACCEPT # iptables -A INPUT -s 127.0.0.0/8 -j DROP.","compliance":{"cis":"3.4.3.2.2","cis_csc_v8":"4.4,4.5","cis_csc_v7":"9.4","cmmc_v2.0":"AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6","iso_27001-2013":"A.13.1.1","mitre_mitigations":"M1031,M1037","mitre_tactics":"TA0011","mitre_techniques":"T1562,T1562.004","nist_sp_800-53":"SC-7(5)","pci_dss_v3.2.1":"1.1.4,1.3.1,1.4","pci_dss_v4.0":"1.2.1,1.4.1","soc_2":"CC6.6"},"rules":["c:iptables -L INPUT -v -n -> r:\\.*ACCEPT\\.*all\\.*lo\\.**\\.*0.0.0.0/0\\.*0.0.0.0/0","c:iptables -L INPUT -v -n -> r:\\.*DROP\\.*all\\.**\\.**\\.*127.0.0.0/8\\.*0.0.0.0/0","c:iptables -L OUTPUT -v -n -> r:\\.*ACCEPT\\.*all\\.**\\.*lo\\.*0.0.0.0/0\\.*0.0.0.0/0"],"condition":"all","command":"iptables -L INPUT -v -n,iptables -L OUTPUT -v -n","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'iptables -L INPUT -v -n'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19097
sca.check.title: Ensure iptables loopback traffic is configured.
sca.check.description: Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8). Notes: - Changing firewall settings while connected over network can result in being locked out of the system - Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well.
sca.check.rationale: Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.
sca.check.remediation: Run the following commands to implement the loopback rules: # iptables -A INPUT -i lo -j ACCEPT # iptables -A OUTPUT -o lo -j ACCEPT # iptables -A INPUT -s 127.0.0.0/8 -j DROP.
sca.check.compliance.cis: 3.4.3.2.2
sca.check.compliance.cis_csc_v8: 4.4,4.5
sca.check.compliance.cis_csc_v7: 9.4
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.1
sca.check.compliance.mitre_mitigations: M1031,M1037
sca.check.compliance.mitre_tactics: TA0011
sca.check.compliance.mitre_techniques: T1562,T1562.004
sca.check.compliance.nist_sp_800-53: SC-7(5)
sca.check.compliance.pci_dss_v3.2.1: 1.1.4,1.3.1,1.4
sca.check.compliance.pci_dss_v4.0: 1.2.1,1.4.1
sca.check.compliance.soc_2: CC6.6
sca.check.command: ["iptables -L INPUT -v -n", "iptables -L OUTPUT -v -n"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'iptables -L INPUT -v -n'

** Alert 1706006477.361481: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure ip6tables default deny firewall policy.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19098,"title":"Ensure ip6tables default deny firewall policy.","description":"A default deny all policy on connections ensures that any unconfigured network usage will be rejected. Note: - Changing firewall settings while connected over network can result in being locked out of the system - Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well.","rationale":"With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage.","remediation":"IF IPv6 is enabled on your system: Run the following commands to implement a default DROP policy: # ip6tables -P INPUT DROP # ip6tables -P OUTPUT DROP # ip6tables -P FORWARD DROP.","compliance":{"cis":"3.4.3.3.1","cis_csc_v8":"4.4,4.5","cis_csc_v7":"9.4","cmmc_v2.0":"AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6","iso_27001-2013":"A.13.1.1","mitre_mitigations":"M1031,M1037","mitre_tactics":"TA0011","mitre_techniques":"T1562,T1562.004","nist_sp_800-53":"SC-7(5)","pci_dss_v3.2.1":"1.1.4,1.3.1,1.4","pci_dss_v4.0":"1.2.1,1.4.1","soc_2":"CC6.6"},"rules":["c:ip6tables -L -> r:^Chain INPUT && r:policy DROP","c:ip6tables -L -> r:^Chain FORWARD && r:policy DROP","c:ip6tables -L -> r:^Chain OUTPUT && r:policy DROP"],"condition":"all","command":"ip6tables -L","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'ip6tables -L'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19098
sca.check.title: Ensure ip6tables default deny firewall policy.
sca.check.description: A default deny all policy on connections ensures that any unconfigured network usage will be rejected. Note: - Changing firewall settings while connected over network can result in being locked out of the system - Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well.
sca.check.rationale: With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage.
sca.check.remediation: IF IPv6 is enabled on your system: Run the following commands to implement a default DROP policy: # ip6tables -P INPUT DROP # ip6tables -P OUTPUT DROP # ip6tables -P FORWARD DROP.
sca.check.compliance.cis: 3.4.3.3.1
sca.check.compliance.cis_csc_v8: 4.4,4.5
sca.check.compliance.cis_csc_v7: 9.4
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.1
sca.check.compliance.mitre_mitigations: M1031,M1037
sca.check.compliance.mitre_tactics: TA0011
sca.check.compliance.mitre_techniques: T1562,T1562.004
sca.check.compliance.nist_sp_800-53: SC-7(5)
sca.check.compliance.pci_dss_v3.2.1: 1.1.4,1.3.1,1.4
sca.check.compliance.pci_dss_v4.0: 1.2.1,1.4.1
sca.check.compliance.soc_2: CC6.6
sca.check.command: ["ip6tables -L"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'ip6tables -L'

** Alert 1706006477.365088: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure ip6tables loopback traffic is configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19099,"title":"Ensure ip6tables loopback traffic is configured.","description":"Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (::1). Note: - Changing firewall settings while connected over network can result in being locked out of the system - Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well.","rationale":"Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (::1) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.","remediation":"Run the following commands to implement the loopback rules: # ip6tables -A INPUT -i lo -j ACCEPT # ip6tables -A OUTPUT -o lo -j ACCEPT # ip6tables -A INPUT -s ::1 -j DROP.","compliance":{"cis":"3.4.3.3.2","cis_csc_v8":"4.4,4.5","cis_csc_v7":"9.4","cmmc_v2.0":"AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6","iso_27001-2013":"A.13.1.1","mitre_mitigations":"M1031,M1037","mitre_tactics":"TA0011","mitre_techniques":"T1562,T1562.004","nist_sp_800-53":"SC-7(5)","pci_dss_v3.2.1":"1.1.4,1.3.1,1.4","pci_dss_v4.0":"1.2.1,1.4.1","soc_2":"CC6.6"},"rules":["c:ip6tables -L INPUT -v -n -> r:\\.*ACCEPT\\.*all\\.*lo\\.**\\.*::/0\\.*::/0","c:ip6tables -L INPUT -v -n -> r:\\.*DROP\\.*all\\.**\\.**\\.*::1\\.*::/0","c:ip6tables -L OUTPUT -v -n -> r:\\.*ACCEPT\\.*all\\.**\\.*lo\\.*::/0\\.*::/0"],"condition":"all","command":"ip6tables -L INPUT -v -n,ip6tables -L OUTPUT -v -n","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'ip6tables -L INPUT -v -n'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19099
sca.check.title: Ensure ip6tables loopback traffic is configured.
sca.check.description: Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (::1). Note: - Changing firewall settings while connected over network can result in being locked out of the system - Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well.
sca.check.rationale: Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (::1) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.
sca.check.remediation: Run the following commands to implement the loopback rules: # ip6tables -A INPUT -i lo -j ACCEPT # ip6tables -A OUTPUT -o lo -j ACCEPT # ip6tables -A INPUT -s ::1 -j DROP.
sca.check.compliance.cis: 3.4.3.3.2
sca.check.compliance.cis_csc_v8: 4.4,4.5
sca.check.compliance.cis_csc_v7: 9.4
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.20,CM.L2-3.4.7,SC.L1-3.13.1,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.1
sca.check.compliance.mitre_mitigations: M1031,M1037
sca.check.compliance.mitre_tactics: TA0011
sca.check.compliance.mitre_techniques: T1562,T1562.004
sca.check.compliance.nist_sp_800-53: SC-7(5)
sca.check.compliance.pci_dss_v3.2.1: 1.1.4,1.3.1,1.4
sca.check.compliance.pci_dss_v4.0: 1.2.1,1.4.1
sca.check.compliance.soc_2: CC6.6
sca.check.command: ["ip6tables -L INPUT -v -n", "ip6tables -L OUTPUT -v -n"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'ip6tables -L INPUT -v -n'

** Alert 1706006477.369135: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure cron daemon is enabled and active.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19100,"title":"Ensure cron daemon is enabled and active.","description":"The cron daemon is used to execute batch jobs on the system. Note: Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, cron should be removed, and the alternate method should be secured in accordance with local site policy.","rationale":"While there may not be user jobs that need to be run on the system, the system does have maintenance jobs that may include security monitoring that have to run, and cron is used to execute them.","remediation":"Run the following command to enable and start cron: # systemctl unmask cron # systemctl --now enable cron.","compliance":{"cis":"4.1.1","mitre_mitigations":"M1018","mitre_tactics":"TA0005","mitre_techniques":"T1562,T1562.001"},"rules":["c:systemctl is-enabled cron -> r:^enabled","c:systemctl status cron -> r:^active"],"condition":"all","command":"systemctl is-enabled cron,systemctl status cron","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'systemctl is-enabled cron'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19100
sca.check.title: Ensure cron daemon is enabled and active.
sca.check.description: The cron daemon is used to execute batch jobs on the system. Note: Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, cron should be removed, and the alternate method should be secured in accordance with local site policy.
sca.check.rationale: While there may not be user jobs that need to be run on the system, the system does have maintenance jobs that may include security monitoring that have to run, and cron is used to execute them.
sca.check.remediation: Run the following command to enable and start cron: # systemctl unmask cron # systemctl --now enable cron.
sca.check.compliance.cis: 4.1.1
sca.check.compliance.mitre_mitigations: M1018
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1562,T1562.001
sca.check.command: ["systemctl is-enabled cron", "systemctl status cron"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'systemctl is-enabled cron'

** Alert 1706006477.371776: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure permissions on /etc/crontab are configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19101,"title":"Ensure permissions on /etc/crontab are configured.","description":"The /etc/crontab file is used by cron to control its own jobs. The commands in this item make sure that root is the user and group owner of the file and that only the owner can access the file. Note: Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, cron should be removed, and the alternate method should be secured in accordance with local site policy.","rationale":"This file contains information on what system jobs are run by cron. Write access to these files could provide unprivileged users with the ability to elevate their privileges. Read access to these files could provide users with the ability to gain insight on system jobs that run on the system and could provide them a way to gain unauthorized privileged access.","remediation":"Run the following commands to set ownership and permissions on /etc/crontab : # chown root:root /etc/crontab # chmod og-rwx /etc/crontab.","compliance":{"cis":"4.1.2","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1018","mitre_tactics":"TA0002,TA0007","mitre_techniques":"T1053,T1053.003","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:stat -Lc \"%a %A %u %U  %g %G\" /etc/crontab -> r:600\\s*\\t*-rw-------\\s*\\t*0\\s*\\t*root\\s*\\t*0\\s*\\t*root"],"condition":"all","command":"stat -Lc \"%a %A %u %U  %g %G\" /etc/crontab","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19101
sca.check.title: Ensure permissions on /etc/crontab are configured.
sca.check.description: The /etc/crontab file is used by cron to control its own jobs. The commands in this item make sure that root is the user and group owner of the file and that only the owner can access the file. Note: Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, cron should be removed, and the alternate method should be secured in accordance with local site policy.
sca.check.rationale: This file contains information on what system jobs are run by cron. Write access to these files could provide unprivileged users with the ability to elevate their privileges. Read access to these files could provide users with the ability to gain insight on system jobs that run on the system and could provide them a way to gain unauthorized privileged access.
sca.check.remediation: Run the following commands to set ownership and permissions on /etc/crontab : # chown root:root /etc/crontab # chmod og-rwx /etc/crontab.
sca.check.compliance.cis: 4.1.2
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1018
sca.check.compliance.mitre_tactics: TA0002,TA0007
sca.check.compliance.mitre_techniques: T1053,T1053.003
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["stat -Lc \"%a %A %u %U  %g %G\" /etc/crontab"]
sca.check.result: failed

** Alert 1706006477.375751: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure permissions on /etc/cron.hourly are configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19102,"title":"Ensure permissions on /etc/cron.hourly are configured.","description":"This directory contains system cron jobs that need to run on an hourly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory. Note: Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, cron should be removed, and the alternate method should be secured in accordance with local site policy.","rationale":"Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.","remediation":"Run the following commands to set ownership and permissions on the /etc/cron.hourly directory: # chown root:root /etc/cron.hourly/ # chmod og-rwx /etc/cron.hourly/.","compliance":{"cis":"4.1.3","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1018","mitre_tactics":"TA0002,TA0007","mitre_techniques":"T1053,T1053.003","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:stat -Lc \"%a %A %u %U  %g %G\" /etc/cron.hourly/ -> r:700\\s*\\t*drwx------\\s*\\t*0\\s*\\t*root\\s*\\t*0\\s*\\t*root"],"condition":"all","command":"stat -Lc \"%a %A %u %U  %g %G\" /etc/cron.hourly/","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19102
sca.check.title: Ensure permissions on /etc/cron.hourly are configured.
sca.check.description: This directory contains system cron jobs that need to run on an hourly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory. Note: Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, cron should be removed, and the alternate method should be secured in accordance with local site policy.
sca.check.rationale: Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.
sca.check.remediation: Run the following commands to set ownership and permissions on the /etc/cron.hourly directory: # chown root:root /etc/cron.hourly/ # chmod og-rwx /etc/cron.hourly/.
sca.check.compliance.cis: 4.1.3
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1018
sca.check.compliance.mitre_tactics: TA0002,TA0007
sca.check.compliance.mitre_techniques: T1053,T1053.003
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["stat -Lc \"%a %A %u %U  %g %G\" /etc/cron.hourly/"]
sca.check.result: failed

** Alert 1706006477.379985: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure permissions on /etc/cron.daily are configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19103,"title":"Ensure permissions on /etc/cron.daily are configured.","description":"The /etc/cron.daily directory contains system cron jobs that need to run on a daily basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory. Note: Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, cron should be removed, and the alternate method should be secured in accordance with local site policy.","rationale":"Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.","remediation":"Run the following commands to set ownership and permissions on the /etc/cron.daily directory: # chown root:root /etc/cron.daily/ # chmod og-rwx /etc/cron.daily/.","compliance":{"cis":"4.1.4","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1018","mitre_tactics":"TA0002,TA0007","mitre_techniques":"T1053,T1053.003","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:stat -Lc \"%a %A %u %U  %g %G\" /etc/cron.daily/ -> r:700\\s*\\t*drwx------\\s*\\t*0\\s*\\t*root\\s*\\t*0\\s*\\t*root"],"condition":"all","command":"stat -Lc \"%a %A %u %U  %g %G\" /etc/cron.daily/","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19103
sca.check.title: Ensure permissions on /etc/cron.daily are configured.
sca.check.description: The /etc/cron.daily directory contains system cron jobs that need to run on a daily basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory. Note: Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, cron should be removed, and the alternate method should be secured in accordance with local site policy.
sca.check.rationale: Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.
sca.check.remediation: Run the following commands to set ownership and permissions on the /etc/cron.daily directory: # chown root:root /etc/cron.daily/ # chmod og-rwx /etc/cron.daily/.
sca.check.compliance.cis: 4.1.4
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1018
sca.check.compliance.mitre_tactics: TA0002,TA0007
sca.check.compliance.mitre_techniques: T1053,T1053.003
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["stat -Lc \"%a %A %u %U  %g %G\" /etc/cron.daily/"]
sca.check.result: failed

** Alert 1706006477.384233: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure permissions on /etc/cron.weekly are configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19104,"title":"Ensure permissions on /etc/cron.weekly are configured.","description":"The /etc/cron.weekly directory contains system cron jobs that need to run on a weekly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory. Note: Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, cron should be removed, and the alternate method should be secured in accordance with local site policy.","rationale":"Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.","remediation":"Run the following commands to set ownership and permissions on the /etc/cron.weekly directory: # chown root:root /etc/cron.weekly/ # chmod og-rwx /etc/cron.weekly/.","compliance":{"cis":"4.1.5","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1018","mitre_tactics":"TA0002,TA0007","mitre_techniques":"T1053,T1053.003","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:stat -Lc \"%a %A %u %U  %g %G\" /etc/cron.weekly/ -> r:700\\s*\\t*drwx------\\s*\\t*0\\s*\\t*root\\s*\\t*0\\s*\\t*root"],"condition":"all","command":"stat -Lc \"%a %A %u %U  %g %G\" /etc/cron.weekly/","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19104
sca.check.title: Ensure permissions on /etc/cron.weekly are configured.
sca.check.description: The /etc/cron.weekly directory contains system cron jobs that need to run on a weekly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory. Note: Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, cron should be removed, and the alternate method should be secured in accordance with local site policy.
sca.check.rationale: Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.
sca.check.remediation: Run the following commands to set ownership and permissions on the /etc/cron.weekly directory: # chown root:root /etc/cron.weekly/ # chmod og-rwx /etc/cron.weekly/.
sca.check.compliance.cis: 4.1.5
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1018
sca.check.compliance.mitre_tactics: TA0002,TA0007
sca.check.compliance.mitre_techniques: T1053,T1053.003
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["stat -Lc \"%a %A %u %U  %g %G\" /etc/cron.weekly/"]
sca.check.result: failed

** Alert 1706006477.388497: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure permissions on /etc/cron.monthly are configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19105,"title":"Ensure permissions on /etc/cron.monthly are configured.","description":"The /etc/cron.monthly directory contains system cron jobs that need to run on a monthly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory. Note: Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, cron should be removed, and the alternate method should be secured in accordance with local site policy.","rationale":"Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.","remediation":"Run the following commands to set ownership and permissions on the /etc/cron.monthly directory: # chown root:root /etc/cron.monthly/ # chmod og-rwx /etc/cron.monthly/.","compliance":{"cis":"4.1.6","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1018","mitre_tactics":"TA0002,TA0007","mitre_techniques":"T1053,T1053.003","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:stat -Lc \"%a %A %u %U  %g %G\" /etc/cron.monthly/ -> r:700\\s*\\t*drwx------\\s*\\t*0\\s*\\t*root\\s*\\t*0\\s*\\t*root"],"condition":"all","command":"stat -Lc \"%a %A %u %U  %g %G\" /etc/cron.monthly/","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19105
sca.check.title: Ensure permissions on /etc/cron.monthly are configured.
sca.check.description: The /etc/cron.monthly directory contains system cron jobs that need to run on a monthly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory. Note: Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, cron should be removed, and the alternate method should be secured in accordance with local site policy.
sca.check.rationale: Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.
sca.check.remediation: Run the following commands to set ownership and permissions on the /etc/cron.monthly directory: # chown root:root /etc/cron.monthly/ # chmod og-rwx /etc/cron.monthly/.
sca.check.compliance.cis: 4.1.6
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1018
sca.check.compliance.mitre_tactics: TA0002,TA0007
sca.check.compliance.mitre_techniques: T1053,T1053.003
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["stat -Lc \"%a %A %u %U  %g %G\" /etc/cron.monthly/"]
sca.check.result: failed

** Alert 1706006477.392777: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure permissions on /etc/cron.d are configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19106,"title":"Ensure permissions on /etc/cron.d are configured.","description":"The /etc/cron.d directory contains system cron jobs that need to run in a similar manner to the hourly, daily weekly and monthly jobs from /etc/crontab, but require more granular control as to when they run. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory. Note: Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, cron should be removed, and the alternate method should be secured in accordance with local site policy.","rationale":"Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.","remediation":"Run the following commands to set ownership and permissions on the /etc/cron.d directory: # chown root:root /etc/cron.d/ # chmod og-rwx /etc/cron.d/.","compliance":{"cis":"4.1.7","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1018","mitre_tactics":"TA0002,TA0007","mitre_techniques":"T1053,T1053.003","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:stat -Lc \"%a %A %u %U  %g %G\" /etc/cron.d/ -> r:700\\s*\\t*drwx------\\s*\\t*0\\s*\\t*root\\s*\\t*0\\s*\\t*root"],"condition":"all","command":"stat -Lc \"%a %A %u %U  %g %G\" /etc/cron.d/","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19106
sca.check.title: Ensure permissions on /etc/cron.d are configured.
sca.check.description: The /etc/cron.d directory contains system cron jobs that need to run in a similar manner to the hourly, daily weekly and monthly jobs from /etc/crontab, but require more granular control as to when they run. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory. Note: Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, cron should be removed, and the alternate method should be secured in accordance with local site policy.
sca.check.rationale: Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.
sca.check.remediation: Run the following commands to set ownership and permissions on the /etc/cron.d directory: # chown root:root /etc/cron.d/ # chmod og-rwx /etc/cron.d/.
sca.check.compliance.cis: 4.1.7
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1018
sca.check.compliance.mitre_tactics: TA0002,TA0007
sca.check.compliance.mitre_techniques: T1053,T1053.003
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["stat -Lc \"%a %A %u %U  %g %G\" /etc/cron.d/"]
sca.check.result: failed

** Alert 1706006477.397211: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure cron is restricted to authorized users.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19107,"title":"Ensure cron is restricted to authorized users.","description":"Configure /etc/cron.allow to allow specific users to use this service. If /etc/cron.allow does not exist, then /etc/cron.deny is checked. Any user not specifically defined in this file is allowed to use cron. By removing the file, only users in /etc/cron.allow are allowed to use cron. Note: - Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, cron should be removed, and the alternate method should be secured in accordance with local site policy - Even though a given user is not listed in cron.allow, cron jobs can still be run as that user - The cron.allow file only controls administrative access to the crontab command for scheduling and modifying cron jobs.","rationale":"On many systems, only the system administrator is authorized to schedule cron jobs. Using the cron.allow file to control who can run cron jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files.","remediation":"Run the following script to: - Remove /etc/cron.deny if it exists - Create /etc/cron.allow if it doesn't exist - Change ownership of /etc/cron.allow to the root user - Change group ownership of /etc/cron.allow to the group crontab #!/usr/bin/env bash { if dpkg-query -W cron > /dev/null 2>&1; then l_file=\"/etc/cron.allow\" l_mask='0137' l_maxperm=\"$( printf '%o' $(( 0777 & ~$l_mask)) )\" if [ -e /etc/cron.deny ]; then echo -e \" - Removing \\\"/etc/cron.deny\\\"\" rm -f /etc/cron.deny fi if [ ! -e /etc/cron.allow ]; then echo -e \" - creating \\\"$l_file\\\"\" touch \"$l_file\" fi while read l_mode l_fown l_fgroup; do if [ $(( $l_mode & $l_mask )) -gt 0 ]; then echo -e \" - Removing excessive permissions from \\\"$l_file\\\"\" chmod u-x,g-wx,o-rwx \"$l_file\" fi if [ \"$l_fown\" != \"root\" ]; then echo -e \" - Changing owner on \\\"$l_file\\\" from: \\\"$l_fown\\\" to: \\\"root\\\"\" chown root \"$l_file\" fi if [ \"$l_fgroup\" != \"crontab\" ]; then echo -e \" - Changing group owner on \\\"$l_file\\\" from: \\\"$l_fgroup\\\" to: \\\"crontab\\\"\" chgrp crontab \"$l_file\" fi done < <(stat -Lc '%#a %U %G' \"$l_file\") else echo -e \"- cron is not installed on the system, no remediation required\\n\" fi }.","compliance":{"cis":"4.1.8","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1018","mitre_tactics":"TA0002","mitre_techniques":"T1053,T1053.003","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["f:/etc/cron.allow","not f:/etc/cron.deny","c:stat -Lc \"%a %A %u %U  %g %G\" /etc/cron.allow -> r:640\\s*\\t*-rw-r-----\\s*\\t*0\\s*\\t*root\\s*\\t*0\\s*\\t*crontab"],"condition":"all","file":"/etc/cron.allow","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19107
sca.check.title: Ensure cron is restricted to authorized users.
sca.check.description: Configure /etc/cron.allow to allow specific users to use this service. If /etc/cron.allow does not exist, then /etc/cron.deny is checked. Any user not specifically defined in this file is allowed to use cron. By removing the file, only users in /etc/cron.allow are allowed to use cron. Note: - Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, cron should be removed, and the alternate method should be secured in accordance with local site policy - Even though a given user is not listed in cron.allow, cron jobs can still be run as that user - The cron.allow file only controls administrative access to the crontab command for scheduling and modifying cron jobs.
sca.check.rationale: On many systems, only the system administrator is authorized to schedule cron jobs. Using the cron.allow file to control who can run cron jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files.
sca.check.remediation: Run the following script to: - Remove /etc/cron.deny if it exists - Create /etc/cron.allow if it doesn't exist - Change ownership of /etc/cron.allow to the root user - Change group ownership of /etc/cron.allow to the group crontab #!/usr/bin/env bash { if dpkg-query -W cron > /dev/null 2>&1; then l_file="/etc/cron.allow" l_mask='0137' l_maxperm="$( printf '%o' $(( 0777 & ~$l_mask)) )" if [ -e /etc/cron.deny ]; then echo -e " - Removing \"/etc/cron.deny\"" rm -f /etc/cron.deny fi if [ ! -e /etc/cron.allow ]; then echo -e " - creating \"$l_file\"" touch "$l_file" fi while read l_mode l_fown l_fgroup; do if [ $(( $l_mode & $l_mask )) -gt 0 ]; then echo -e " - Removing excessive permissions from \"$l_file\"" chmod u-x,g-wx,o-rwx "$l_file" fi if [ "$l_fown" != "root" ]; then echo -e " - Changing owner on \"$l_file\" from: \"$l_fown\" to: \"root\"" chown root "$l_file" fi if [ "$l_fgroup" != "crontab" ]; then echo -e " - Changing group owner on \"$l_file\" from: \"$l_fgroup\" to: \"crontab\"" chgrp crontab "$l_file" fi done < <(stat -Lc '%#a %U %G' "$l_file") else echo -e "- cron is not installed on the system, no remediation required\n" fi }.
sca.check.compliance.cis: 4.1.8
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1018
sca.check.compliance.mitre_tactics: TA0002
sca.check.compliance.mitre_techniques: T1053,T1053.003
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.file: ["/etc/cron.allow"]
sca.check.result: failed

** Alert 1706006477.403800: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure at is restricted to authorized users.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19108,"title":"Ensure at is restricted to authorized users.","description":"Configure /etc/at.allow to allow specific users to use this service. If /etc/at.allow does not exist, then /etc/at.deny is checked. Any user not specifically defined in this file is allowed to use at. By removing the file, only users in /etc/at.allow are allowed to use at. Note: Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, at should be removed, and the alternate method should be secured in accordance with local site policy.","rationale":"On many systems, only the system administrator is authorized to schedule at jobs. Using the at.allow file to control who can run at jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files.","remediation":"Run the following script to: - Remove /etc/at.deny if it exists - Create /etc/at.allow if it doesn't exist - Change ownership of /etc/at.allow to the root user - Change group ownership of /etc/at.allow to the group root #!/usr/bin/env bash { if dpkg-query -W at > /dev/null 2>&1; then l_file=\"/etc/at.allow\" l_mask='0137' l_maxperm=\"$( printf '%o' $(( 0777 & ~$l_mask)) )\" if [ -e /etc/at.deny ]; then echo -e \" - Removing \\\"/etc/at.deny\\\"\" rm -f /etc/at.deny fi if [ ! -e /etc/at.allow ]; then echo -e \" - creating \\\"$l_file\\\"\" touch \"$l_file\" fi while read l_mode l_fown l_fgroup; do if [ $(( $l_mode & $l_mask )) -gt 0 ]; then echo -e \" - Removing excessive permissions from \\\"$l_file\\\"\" chmod u-x,g-wx,o-rwx \"$l_file\" fi if [ \"$l_fown\" != \"root\" ]; then echo -e \" - Changing owner on \\\"$l_file\\\" from: \\\"$l_fown\\\" to: \\\"root\\\"\" chown root \"$l_file\" fi if [ \"$l_fgroup\" != \"root\" ]; then echo -e \" - Changing group owner on \\\"$l_file\\\" from: \\\"$l_fgroup\\\" to: \\\"root\\\"\" chgrp root \"$l_file\" fi done < <(stat -Lc '%#a %U %G' \"$l_file\") else echo -e \"- cron is not installed on the system, no remediation required\\n\" fi }.","compliance":{"cis":"4.1.9","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1018","mitre_tactics":"TA0002","mitre_techniques":"T1053,T1053.003","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["f:/etc/at.allow","not f:/etc/at.deny","c:stat -Lc \"%a %A %u %U  %g %G\" /etc/at.allow -> r:640\\s*\\t*-rw-r-----\\s*\\t*0\\s*\\t*root\\s*\\t*0\\s*\\t*root"],"condition":"all","file":"/etc/at.allow","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19108
sca.check.title: Ensure at is restricted to authorized users.
sca.check.description: Configure /etc/at.allow to allow specific users to use this service. If /etc/at.allow does not exist, then /etc/at.deny is checked. Any user not specifically defined in this file is allowed to use at. By removing the file, only users in /etc/at.allow are allowed to use at. Note: Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, at should be removed, and the alternate method should be secured in accordance with local site policy.
sca.check.rationale: On many systems, only the system administrator is authorized to schedule at jobs. Using the at.allow file to control who can run at jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files.
sca.check.remediation: Run the following script to: - Remove /etc/at.deny if it exists - Create /etc/at.allow if it doesn't exist - Change ownership of /etc/at.allow to the root user - Change group ownership of /etc/at.allow to the group root #!/usr/bin/env bash { if dpkg-query -W at > /dev/null 2>&1; then l_file="/etc/at.allow" l_mask='0137' l_maxperm="$( printf '%o' $(( 0777 & ~$l_mask)) )" if [ -e /etc/at.deny ]; then echo -e " - Removing \"/etc/at.deny\"" rm -f /etc/at.deny fi if [ ! -e /etc/at.allow ]; then echo -e " - creating \"$l_file\"" touch "$l_file" fi while read l_mode l_fown l_fgroup; do if [ $(( $l_mode & $l_mask )) -gt 0 ]; then echo -e " - Removing excessive permissions from \"$l_file\"" chmod u-x,g-wx,o-rwx "$l_file" fi if [ "$l_fown" != "root" ]; then echo -e " - Changing owner on \"$l_file\" from: \"$l_fown\" to: \"root\"" chown root "$l_file" fi if [ "$l_fgroup" != "root" ]; then echo -e " - Changing group owner on \"$l_file\" from: \"$l_fgroup\" to: \"root\"" chgrp root "$l_file" fi done < <(stat -Lc '%#a %U %G' "$l_file") else echo -e "- cron is not installed on the system, no remediation required\n" fi }.
sca.check.compliance.cis: 4.1.9
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1018
sca.check.compliance.mitre_tactics: TA0002
sca.check.compliance.mitre_techniques: T1053,T1053.003
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.file: ["/etc/at.allow"]
sca.check.result: failed

** Alert 1706006477.409830: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure permissions on /etc/ssh/sshd_config are configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19109,"title":"Ensure permissions on /etc/ssh/sshd_config are configured.","description":"The file /etc/ssh/sshd_config, and files ending in .conf in the /etc/ssh/sshd_config.d directory, contain configuration specifications for sshd.","rationale":"configuration specifications for sshd need to be protected from unauthorized changes by non-privileged users.","remediation":"Run the following script to set ownership and permissions on /etc/ssh/sshd_config and files ending in .conf in the /etc/ssh/sshd_config.d directory: #!/usr/bin/env bash { chmod u-x,og-rwx /etc/ssh/sshd_config chown root:root /etc/ssh/sshd_config while IFS= read -r -d $'\\0' l_file; do if [ -e \"$l_file\" ]; then chmod u-x,og-rwx \"$l_file\" chown root:root \"$l_file\" fi done < <(find /etc/ssh/sshd_config.d -type f -print0) }.","compliance":{"cis":"4.2.1","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1098,T1098.004,T1543,T1543.002","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:stat -Lc \"%a %A %u %U  %g %G\" /etc/ssh/sshd_config -> r:600\\s*\\t*-rw-------\\s*\\t*0\\s*\\t*root\\s*\\t*0\\s*\\t*root","c:sh -c \"stat -L /etc/ssh/sshd_config.d/*.conf\" -> r:Access:\\s*\\(0600/-rw-------\\)\\s*Uid:\\s*\\(\\s*\\t*0/\\s*\\t*root\\)\\s*\\t*Gid:\\s*\\(\\s*\\t*0/\\s*\\t*root\\)"],"condition":"all","command":"stat -Lc \"%a %A %u %U  %g %G\" /etc/ssh/sshd_config","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19109
sca.check.title: Ensure permissions on /etc/ssh/sshd_config are configured.
sca.check.description: The file /etc/ssh/sshd_config, and files ending in .conf in the /etc/ssh/sshd_config.d directory, contain configuration specifications for sshd.
sca.check.rationale: configuration specifications for sshd need to be protected from unauthorized changes by non-privileged users.
sca.check.remediation: Run the following script to set ownership and permissions on /etc/ssh/sshd_config and files ending in .conf in the /etc/ssh/sshd_config.d directory: #!/usr/bin/env bash { chmod u-x,og-rwx /etc/ssh/sshd_config chown root:root /etc/ssh/sshd_config while IFS= read -r -d $'\0' l_file; do if [ -e "$l_file" ]; then chmod u-x,og-rwx "$l_file" chown root:root "$l_file" fi done < <(find /etc/ssh/sshd_config.d -type f -print0) }.
sca.check.compliance.cis: 4.2.1
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1098,T1098.004,T1543,T1543.002
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["stat -Lc \"%a %A %u %U  %g %G\" /etc/ssh/sshd_config"]
sca.check.result: failed

** Alert 1706006477.413614: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure permissions on SSH public host key files are configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19110,"title":"Ensure permissions on SSH public host key files are configured.","description":"An SSH public key is one of two files used in SSH public key authentication. In this authentication method, a public key is a key that can be used for verifying digital signatures generated using a corresponding private key. Only a public key that corresponds to a private key will be able to authenticate successfully.","rationale":"If a public host key file is modified by an unauthorized user, the SSH service may be compromised.","remediation":"Run the following script to set mode, ownership, and group on the public SSH host key files: #!/usr/bin/env bash { l_pmask=\"0133\" l_maxperm=\"$( printf '%o' $(( 0777 & ~$l_pmask )) )\" awk '{print}' <<< \"$(find -L /etc/ssh -xdev -type f -exec stat -Lc \"%n %#a %U %G\" {} +)\" | (while read -r l_file l_mode l_owner l_group; do if file \"$l_file\" | grep -Pq ':\\h+OpenSSH\\h+(\\H+\\h+)?public\\h+key\\b'; then echo -e \" - Checking private key file: \\\"$l_file\\\"\" if [ $(( $l_mode & $l_pmask )) -gt 0 ]; then echo -e \" - File: \\\"$l_file\\\" is mode \\\"$l_mode\\\" changing to mode: \\\"$l_maxperm\\\"\" chmod u-x,go-wx \"$l_file\" fi if [ \"$l_owner\" != \"root\" ]; then echo -e \" - File: \\\"$l_file\\\" is owned by: \\\"$l_owner\\\" changing owner to \\\"root\\\"\" chown root \"$l_file\" fi if [ \"$l_group\" != \"root\" ]; then echo -e \" - File: \\\"$l_file\\\" is owned by group \\\"$l_group\\\" changing to group \\\"root\\\"\" chgrp \"root\" \"$l_file\" fi fi done ) }.","compliance":{"cis":"4.2.3","cis_csc_v8":"3.3","cis_csc_v7":"5.1","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.14.2.5,A.8.1.3","mitre_mitigations":"M1022","mitre_tactics":"TA0003,TA0006","mitre_techniques":"T1557","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:sh -c \"find /etc/ssh -xdev -type f -name 'ssh_host_*_key.pub' -exec stat {} \\;\" -> r:Access:\\s*\\( && !r:-rw-r--r--"],"condition":"all","command":"sh -c \"find /etc/ssh -xdev -type f -name 'ssh_host_*_key.pub' -exec stat {} \\;\"","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19110
sca.check.title: Ensure permissions on SSH public host key files are configured.
sca.check.description: An SSH public key is one of two files used in SSH public key authentication. In this authentication method, a public key is a key that can be used for verifying digital signatures generated using a corresponding private key. Only a public key that corresponds to a private key will be able to authenticate successfully.
sca.check.rationale: If a public host key file is modified by an unauthorized user, the SSH service may be compromised.
sca.check.remediation: Run the following script to set mode, ownership, and group on the public SSH host key files: #!/usr/bin/env bash { l_pmask="0133" l_maxperm="$( printf '%o' $(( 0777 & ~$l_pmask )) )" awk '{print}' <<< "$(find -L /etc/ssh -xdev -type f -exec stat -Lc "%n %#a %U %G" {} +)" | (while read -r l_file l_mode l_owner l_group; do if file "$l_file" | grep -Pq ':\h+OpenSSH\h+(\H+\h+)?public\h+key\b'; then echo -e " - Checking private key file: \"$l_file\"" if [ $(( $l_mode & $l_pmask )) -gt 0 ]; then echo -e " - File: \"$l_file\" is mode \"$l_mode\" changing to mode: \"$l_maxperm\"" chmod u-x,go-wx "$l_file" fi if [ "$l_owner" != "root" ]; then echo -e " - File: \"$l_file\" is owned by: \"$l_owner\" changing owner to \"root\"" chown root "$l_file" fi if [ "$l_group" != "root" ]; then echo -e " - File: \"$l_file\" is owned by group \"$l_group\" changing to group \"root\"" chgrp "root" "$l_file" fi fi done ) }.
sca.check.compliance.cis: 4.2.3
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 5.1
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.14.2.5,A.8.1.3
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0003,TA0006
sca.check.compliance.mitre_techniques: T1557
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["sh -c \"find /etc/ssh -xdev -type f -name 'ssh_host_*_key.pub' -exec stat {} \\;\""]
sca.check.result: failed

** Alert 1706006477.418652: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure SSH access is limited.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19111,"title":"Ensure SSH access is limited.","description":"There are several options available to limit which users and group can access the system via SSH. It is recommended that at least one of the following options be leveraged: - AllowUsers: o The AllowUsers variable gives the system administrator the option of allowing specific users to ssh into the system. The list consists of space separated user names. Numeric user IDs are not recognized with this variable. If a system administrator wants to restrict user access further by only allowing the allowed users to log in from a particular host, the entry can be specified in the form of user@host. - AllowGroups: o The AllowGroups variable gives the system administrator the option of allowing specific groups of users to ssh into the system. The list consists of space separated group names. Numeric group IDs are not recognized with this variable. - DenyUsers: o The DenyUsers variable gives the system administrator the option of denying specific users to ssh into the system. The list consists of space separated user names. Numeric user IDs are not recognized with this variable. If a system administrator wants to restrict user access further by specifically denying a user's access from a particular host, the entry can be specified in the form of user@host. - DenyGroups: o The DenyGroups variable gives the system administrator the option of denying specific groups of users to ssh into the system. The list consists of space separated group names. Numeric group IDs are not recognized with this variable.","rationale":"Restricting which users can remotely access the system via SSH will help ensure that only authorized users access the system.","remediation":"Edit the /etc/ssh/sshd_config file to set one or more of the parameter above any Include entries as follows: AllowUsers <userlist> OR AllowGroups <grouplist> OR DenyUsers <userlist> OR DenyGroups <grouplist> Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location. If the Include location is not the default, /etc/ssh/sshd_config.d/*.conf, the audit will need to be modified to account for the Include location used.","compliance":{"cis":"4.2.4","cis_csc_v8":"3.3","cis_csc_v7":"4.3","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.2.3","mitre_mitigations":"M1018","mitre_tactics":"TA0008","mitre_techniques":"T1021,T1021.004","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:sshd -T -> r:^\\s*AllowUsers\\s+\\w+|^\\s*AllowGroups\\s+\\w+|^\\s*DenyUsers\\s+\\w+|^\\s*DenyGroups\\s+\\w+","f:/etc/ssh/sshd_config -> r:^\\s*AllowUsers\\s+\\w+|^\\s*AllowGroups\\s+\\w+|^\\s*DenyUsers\\s+\\w+|^\\s*DenyGroups\\s+\\w+","not d:/etc/ssh/sshd_config.d -> r:\\.*.conf$ -> r:^\\s*AllowUsers\\s+\\w+|^\\s*AllowGroups\\s+\\w+|^\\s*DenyUsers\\s+\\w+|^\\s*DenyGroups\\s+\\w+"],"condition":"all","file":"/etc/ssh/sshd_config","directory":"/etc/ssh/sshd_config.d","command":"sshd -T","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'sshd -T'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19111
sca.check.title: Ensure SSH access is limited.
sca.check.description: There are several options available to limit which users and group can access the system via SSH. It is recommended that at least one of the following options be leveraged: - AllowUsers: o The AllowUsers variable gives the system administrator the option of allowing specific users to ssh into the system. The list consists of space separated user names. Numeric user IDs are not recognized with this variable. If a system administrator wants to restrict user access further by only allowing the allowed users to log in from a particular host, the entry can be specified in the form of user@host. - AllowGroups: o The AllowGroups variable gives the system administrator the option of allowing specific groups of users to ssh into the system. The list consists of space separated group names. Numeric group IDs are not recognized with this variable. - DenyUsers: o The DenyUsers variable gives the system administrator the option of denying specific users to ssh into the system. The list consists of space separated user names. Numeric user IDs are not recognized with this variable. If a system administrator wants to restrict user access further by specifically denying a user's access from a particular host, the entry can be specified in the form of user@host. - DenyGroups: o The DenyGroups variable gives the system administrator the option of denying specific groups of users to ssh into the system. The list consists of space separated group names. Numeric group IDs are not recognized with this variable.
sca.check.rationale: Restricting which users can remotely access the system via SSH will help ensure that only authorized users access the system.
sca.check.remediation: Edit the /etc/ssh/sshd_config file to set one or more of the parameter above any Include entries as follows: AllowUsers <userlist> OR AllowGroups <grouplist> OR DenyUsers <userlist> OR DenyGroups <grouplist> Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location. If the Include location is not the default, /etc/ssh/sshd_config.d/*.conf, the audit will need to be modified to account for the Include location used.
sca.check.compliance.cis: 4.2.4
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 4.3
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.2.3
sca.check.compliance.mitre_mitigations: M1018
sca.check.compliance.mitre_tactics: TA0008
sca.check.compliance.mitre_techniques: T1021,T1021.004
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.file: ["/etc/ssh/sshd_config"]
sca.check.directory: ["/etc/ssh/sshd_config.d"]
sca.check.command: ["sshd -T"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'sshd -T'

** Alert 1706006477.425752: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure SSH LogLevel is appropriate.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19112,"title":"Ensure SSH LogLevel is appropriate.","description":"INFO level is the basic level that only records login activity of SSH users. In many situations, such as Incident Response, it is important to determine when a particular user was active on a system. The logout record can eliminate those users who disconnected, which helps narrow the field. VERBOSE level specifies that login and logout activity as well as the key fingerprint for any SSH key used for login will be logged. This information is important for SSH key management, especially in legacy environments.","rationale":"SSH provides several logging levels with varying amounts of verbosity. DEBUG is specifically not recommended other than strictly for debugging SSH communications since it provides so much data that it is difficult to identify important security information.","remediation":"Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows: LogLevel VERBOSE OR LogLevel INFO Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","compliance":{"cis":"4.2.5","cis_csc_v8":"8.2","cis_csc_v7":"6.2,6.3","cmmc_v2.0":"AU.L2-3.3.1","hipaa":"164.312(b)","iso_27001-2013":"A.12.4.1","mitre_tactics":"TA0005","mitre_techniques":"T1562,T1562.006","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"10.2,10.3","pci_dss_v4.0":"10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2"},"rules":["c:sshd -T -> r:^\\s*LogLevel\\s+INFO|^\\s*LogLevel\\s+VERBOSE","not f:/etc/ssh/sshd_config -> !r:^\\s*LogLevel\\s+INFO|^\\s*LogLevel\\s+VERBOSE","not d:/etc/ssh/sshd_config.d/ -> r:\\.*.conf$ -> !r:^\\s*LogLevel\\s+INFO|^\\s*LogLevel\\s+VERBOSE"],"condition":"all","references":"https://www.ssh.com/ssh/sshd_config/","file":"/etc/ssh/sshd_config","directory":"/etc/ssh/sshd_config.d/","command":"sshd -T","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'sshd -T'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19112
sca.check.title: Ensure SSH LogLevel is appropriate.
sca.check.description: INFO level is the basic level that only records login activity of SSH users. In many situations, such as Incident Response, it is important to determine when a particular user was active on a system. The logout record can eliminate those users who disconnected, which helps narrow the field. VERBOSE level specifies that login and logout activity as well as the key fingerprint for any SSH key used for login will be logged. This information is important for SSH key management, especially in legacy environments.
sca.check.rationale: SSH provides several logging levels with varying amounts of verbosity. DEBUG is specifically not recommended other than strictly for debugging SSH communications since it provides so much data that it is difficult to identify important security information.
sca.check.remediation: Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows: LogLevel VERBOSE OR LogLevel INFO Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.
sca.check.compliance.cis: 4.2.5
sca.check.compliance.cis_csc_v8: 8.2
sca.check.compliance.cis_csc_v7: 6.2,6.3
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.hipaa: 164.312(b)
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1562,T1562.006
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.2,10.3
sca.check.compliance.pci_dss_v4.0: 10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2
sca.check.references: https://www.ssh.com/ssh/sshd_config/
sca.check.file: ["/etc/ssh/sshd_config"]
sca.check.directory: ["/etc/ssh/sshd_config.d/"]
sca.check.command: ["sshd -T"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'sshd -T'

** Alert 1706006477.430475: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure SSH PAM is enabled.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19113,"title":"Ensure SSH PAM is enabled.","description":"The UsePAM directive enables the Pluggable Authentication Module (PAM) interface. If set to yes this will enable PAM authentication using ChallengeResponseAuthentication and PasswordAuthentication directives in addition to PAM account and session module processing for all authentication types.","rationale":"When usePAM is set to yes, PAM runs through account and session types properly. This is important if you want to restrict access to services based off of IP, time or other factors of the account. Additionally, you can make sure users inherit certain environment variables on login or disallow access to the server.","remediation":"Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows: UsePAM yes Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","compliance":{"cis":"4.2.6","cis_csc_v8":"5.2","cis_csc_v7":"4.4","cmmc_v2.0":"IA.L2-3.5.7","iso_27001-2013":"A.9.4.3","mitre_mitigations":"M1035","mitre_tactics":"TA0001","mitre_techniques":"T1021,T1021.004","pci_dss_v4.0":"2.2.2,8.3.5,8.3.6,8.6.3","soc_2":"CC6.1"},"rules":["c:sshd -T -> r:^\\s*usepam\\s+yes","not f:/etc/ssh/sshd_config -> r:^\\s*usepam\\s+no","not d:/etc/ssh/sshd_config.d -> r:\\.*.conf$ -> r:^\\s*usepam\\s+no"],"condition":"all","file":"/etc/ssh/sshd_config","directory":"/etc/ssh/sshd_config.d","command":"sshd -T","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'sshd -T'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19113
sca.check.title: Ensure SSH PAM is enabled.
sca.check.description: The UsePAM directive enables the Pluggable Authentication Module (PAM) interface. If set to yes this will enable PAM authentication using ChallengeResponseAuthentication and PasswordAuthentication directives in addition to PAM account and session module processing for all authentication types.
sca.check.rationale: When usePAM is set to yes, PAM runs through account and session types properly. This is important if you want to restrict access to services based off of IP, time or other factors of the account. Additionally, you can make sure users inherit certain environment variables on login or disallow access to the server.
sca.check.remediation: Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows: UsePAM yes Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.
sca.check.compliance.cis: 4.2.6
sca.check.compliance.cis_csc_v8: 5.2
sca.check.compliance.cis_csc_v7: 4.4
sca.check.compliance.cmmc_v2.0: IA.L2-3.5.7
sca.check.compliance.iso_27001-2013: A.9.4.3
sca.check.compliance.mitre_mitigations: M1035
sca.check.compliance.mitre_tactics: TA0001
sca.check.compliance.mitre_techniques: T1021,T1021.004
sca.check.compliance.pci_dss_v4.0: 2.2.2,8.3.5,8.3.6,8.6.3
sca.check.compliance.soc_2: CC6.1
sca.check.file: ["/etc/ssh/sshd_config"]
sca.check.directory: ["/etc/ssh/sshd_config.d"]
sca.check.command: ["sshd -T"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'sshd -T'

** Alert 1706006477.434299: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure SSH root login is disabled.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19114,"title":"Ensure SSH root login is disabled.","description":"The PermitRootLogin parameter specifies if the root user can log in using SSH. The default is prohibit-password.","rationale":"Disallowing root logins over SSH requires system admins to authenticate using their own individual account, then escalating to root. This limits opportunity for non-repudiation and provides a clear audit trail in the event of a security incident.","remediation":"Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows: PermitRootLogin no Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","compliance":{"cis":"4.2.7","cis_csc_v8":"5.4","cis_csc_v7":"4.3","cmmc_v2.0":"AC.L2-3.1.5,AC.L2-3.1.6,AC.L2-3.1.7,SC.L2-3.13.3","iso_27001-2013":"A.9.2.3","mitre_mitigations":"M1042","mitre_tactics":"TA0008","mitre_techniques":"T1021","nist_sp_800-53":"AC-6(2),AC-6(5)","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","soc_2":"CC6.1,CC6.3"},"rules":["c:sshd -T -> r:^\\s*PermitRootLogin\\s+no","not f:/etc/ssh/sshd_config -> r:^\\s*PermitRootLogin\\s+yes","not d:/etc/ssh/sshd_config.d -> r:\\.*.conf$ -> r:^\\s*PermitRootLogin\\s+yes"],"condition":"all","file":"/etc/ssh/sshd_config","directory":"/etc/ssh/sshd_config.d","command":"sshd -T","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'sshd -T'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19114
sca.check.title: Ensure SSH root login is disabled.
sca.check.description: The PermitRootLogin parameter specifies if the root user can log in using SSH. The default is prohibit-password.
sca.check.rationale: Disallowing root logins over SSH requires system admins to authenticate using their own individual account, then escalating to root. This limits opportunity for non-repudiation and provides a clear audit trail in the event of a security incident.
sca.check.remediation: Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows: PermitRootLogin no Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.
sca.check.compliance.cis: 4.2.7
sca.check.compliance.cis_csc_v8: 5.4
sca.check.compliance.cis_csc_v7: 4.3
sca.check.compliance.cmmc_v2.0: AC.L2-3.1.5,AC.L2-3.1.6,AC.L2-3.1.7,SC.L2-3.13.3
sca.check.compliance.iso_27001-2013: A.9.2.3
sca.check.compliance.mitre_mitigations: M1042
sca.check.compliance.mitre_tactics: TA0008
sca.check.compliance.mitre_techniques: T1021
sca.check.compliance.nist_sp_800-53: AC-6(2),AC-6(5)
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.soc_2: CC6.1,CC6.3
sca.check.file: ["/etc/ssh/sshd_config"]
sca.check.directory: ["/etc/ssh/sshd_config.d"]
sca.check.command: ["sshd -T"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'sshd -T'

** Alert 1706006477.437915: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure SSH HostbasedAuthentication is disabled.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19115,"title":"Ensure SSH HostbasedAuthentication is disabled.","description":"The HostbasedAuthentication parameter specifies if authentication is allowed through trusted hosts via the user of .rhosts, or /etc/hosts.equiv, along with successful public key client host authentication.","rationale":"Even though the .rhosts files are ineffective if support is disabled in /etc/pam.conf, disabling the ability to use .rhosts files in SSH provides an additional layer of protection.","remediation":"Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows: HostbasedAuthentication no Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","compliance":{"cis":"4.2.8","mitre_mitigations":"M1042","mitre_tactics":"TA0001","mitre_techniques":"T1078,T1078.001,T1078.003"},"rules":["c:sshd -T -> r:^\\s*HostbasedAuthentication\\s+no","not f:/etc/ssh/sshd_config -> r:^\\s*HostbasedAuthentication\\s+yes","not d:/etc/ssh/sshd_config.d -> r:\\.*.conf$ -> r:^\\s*HostbasedAuthentication\\s+yes"],"condition":"all","file":"/etc/ssh/sshd_config","directory":"/etc/ssh/sshd_config.d","command":"sshd -T","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'sshd -T'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19115
sca.check.title: Ensure SSH HostbasedAuthentication is disabled.
sca.check.description: The HostbasedAuthentication parameter specifies if authentication is allowed through trusted hosts via the user of .rhosts, or /etc/hosts.equiv, along with successful public key client host authentication.
sca.check.rationale: Even though the .rhosts files are ineffective if support is disabled in /etc/pam.conf, disabling the ability to use .rhosts files in SSH provides an additional layer of protection.
sca.check.remediation: Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows: HostbasedAuthentication no Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.
sca.check.compliance.cis: 4.2.8
sca.check.compliance.mitre_mitigations: M1042
sca.check.compliance.mitre_tactics: TA0001
sca.check.compliance.mitre_techniques: T1078,T1078.001,T1078.003
sca.check.file: ["/etc/ssh/sshd_config"]
sca.check.directory: ["/etc/ssh/sshd_config.d"]
sca.check.command: ["sshd -T"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'sshd -T'

** Alert 1706006477.441126: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure SSH PermitEmptyPasswords is disabled.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19116,"title":"Ensure SSH PermitEmptyPasswords is disabled.","description":"The PermitEmptyPasswords parameter specifies if the SSH server allows login to accounts with empty password strings.","rationale":"Disallowing remote shell access to accounts that have an empty password reduces the probability of unauthorized access to the system.","remediation":"Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows: PermitEmptyPasswords no Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","compliance":{"cis":"4.2.9","cis_csc_v8":"5.2","cis_csc_v7":"4.4","cmmc_v2.0":"IA.L2-3.5.7","iso_27001-2013":"A.9.4.3","mitre_mitigations":"M1042","mitre_tactics":"TA0008","mitre_techniques":"T1021","pci_dss_v4.0":"2.2.2,8.3.5,8.3.6,8.6.3","soc_2":"CC6.1"},"rules":["c:sshd -T -> r:^\\s*PermitEmptyPasswords\\s+no","not f:/etc/ssh/sshd_config -> r:^\\s*PermitEmptyPasswords\\s+yes","not d:/etc/ssh/sshd_config.d -> r:\\.*.conf$ -> r:^\\s*PermitEmptyPasswords\\s+yes"],"condition":"all","file":"/etc/ssh/sshd_config","directory":"/etc/ssh/sshd_config.d","command":"sshd -T","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'sshd -T'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19116
sca.check.title: Ensure SSH PermitEmptyPasswords is disabled.
sca.check.description: The PermitEmptyPasswords parameter specifies if the SSH server allows login to accounts with empty password strings.
sca.check.rationale: Disallowing remote shell access to accounts that have an empty password reduces the probability of unauthorized access to the system.
sca.check.remediation: Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows: PermitEmptyPasswords no Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.
sca.check.compliance.cis: 4.2.9
sca.check.compliance.cis_csc_v8: 5.2
sca.check.compliance.cis_csc_v7: 4.4
sca.check.compliance.cmmc_v2.0: IA.L2-3.5.7
sca.check.compliance.iso_27001-2013: A.9.4.3
sca.check.compliance.mitre_mitigations: M1042
sca.check.compliance.mitre_tactics: TA0008
sca.check.compliance.mitre_techniques: T1021
sca.check.compliance.pci_dss_v4.0: 2.2.2,8.3.5,8.3.6,8.6.3
sca.check.compliance.soc_2: CC6.1
sca.check.file: ["/etc/ssh/sshd_config"]
sca.check.directory: ["/etc/ssh/sshd_config.d"]
sca.check.command: ["sshd -T"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'sshd -T'

** Alert 1706006477.444405: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure SSH PermitUserEnvironment is disabled.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19117,"title":"Ensure SSH PermitUserEnvironment is disabled.","description":"The PermitUserEnvironment option allows users to present environment options to the SSH daemon.","rationale":"Permitting users the ability to set environment variables through the SSH daemon could potentially allow users to bypass security controls (e.g. setting an execution path that has SSH executing trojan'd programs).","remediation":"Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows: PermitUserEnvironment no Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","compliance":{"cis":"4.2.10","mitre_mitigations":"M1042","mitre_tactics":"TA0008","mitre_techniques":"T1021"},"rules":["c:sshd -T -> r:^\\s*PermitUserEnvironment\\s+no","not f:/etc/ssh/sshd_config -> r:^\\s*PermitUserEnvironment\\s+yes","not d:/etc/ssh/sshd_config.d -> r:\\.*.conf$ -> r:^\\s*PermitUserEnvironment\\s+yes"],"condition":"all","file":"/etc/ssh/sshd_config","directory":"/etc/ssh/sshd_config.d","command":"sshd -T","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'sshd -T'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19117
sca.check.title: Ensure SSH PermitUserEnvironment is disabled.
sca.check.description: The PermitUserEnvironment option allows users to present environment options to the SSH daemon.
sca.check.rationale: Permitting users the ability to set environment variables through the SSH daemon could potentially allow users to bypass security controls (e.g. setting an execution path that has SSH executing trojan'd programs).
sca.check.remediation: Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows: PermitUserEnvironment no Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.
sca.check.compliance.cis: 4.2.10
sca.check.compliance.mitre_mitigations: M1042
sca.check.compliance.mitre_tactics: TA0008
sca.check.compliance.mitre_techniques: T1021
sca.check.file: ["/etc/ssh/sshd_config"]
sca.check.directory: ["/etc/ssh/sshd_config.d"]
sca.check.command: ["sshd -T"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'sshd -T'

** Alert 1706006477.447338: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure SSH IgnoreRhosts is enabled.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19118,"title":"Ensure SSH IgnoreRhosts is enabled.","description":"The IgnoreRhosts parameter specifies that .rhosts and .shosts files will not be used in RhostsRSAAuthentication or HostbasedAuthentication.","rationale":"Setting this parameter forces users to enter a password when authenticating with SSH.","remediation":"Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows: IgnoreRhosts yes Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","compliance":{"cis":"4.2.11","cis_csc_v8":"5.2","cis_csc_v7":"4.4","cmmc_v2.0":"IA.L2-3.5.7","iso_27001-2013":"A.9.4.3","mitre_mitigations":"M1027","mitre_tactics":"TA0001","mitre_techniques":"T1078,T1078.001,T1078.003","pci_dss_v4.0":"2.2.2,8.3.5,8.3.6,8.6.3","soc_2":"CC6.1"},"rules":["c:sshd -T -> r:^\\s*IgnoreRhosts\\s+yes","not f:/etc/ssh/sshd_config -> r:^\\s*IgnoreRhosts\\s+no","not d:/etc/ssh/sshd_config.d -> r:\\.*.conf$ -> r:^\\s*IgnoreRhosts\\s+no"],"condition":"all","file":"/etc/ssh/sshd_config","directory":"/etc/ssh/sshd_config.d","command":"sshd -T","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'sshd -T'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19118
sca.check.title: Ensure SSH IgnoreRhosts is enabled.
sca.check.description: The IgnoreRhosts parameter specifies that .rhosts and .shosts files will not be used in RhostsRSAAuthentication or HostbasedAuthentication.
sca.check.rationale: Setting this parameter forces users to enter a password when authenticating with SSH.
sca.check.remediation: Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows: IgnoreRhosts yes Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.
sca.check.compliance.cis: 4.2.11
sca.check.compliance.cis_csc_v8: 5.2
sca.check.compliance.cis_csc_v7: 4.4
sca.check.compliance.cmmc_v2.0: IA.L2-3.5.7
sca.check.compliance.iso_27001-2013: A.9.4.3
sca.check.compliance.mitre_mitigations: M1027
sca.check.compliance.mitre_tactics: TA0001
sca.check.compliance.mitre_techniques: T1078,T1078.001,T1078.003
sca.check.compliance.pci_dss_v4.0: 2.2.2,8.3.5,8.3.6,8.6.3
sca.check.compliance.soc_2: CC6.1
sca.check.file: ["/etc/ssh/sshd_config"]
sca.check.directory: ["/etc/ssh/sshd_config.d"]
sca.check.command: ["sshd -T"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'sshd -T'

** Alert 1706006477.450543: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure SSH X11 forwarding is disabled.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19119,"title":"Ensure SSH X11 forwarding is disabled.","description":"The X11Forwarding parameter provides the ability to tunnel X11 traffic through the connection to enable remote graphic connections.","rationale":"Disable X11 forwarding unless there is an operational requirement to use X11 applications directly. There is a small risk that the remote X11 servers of users who are logged in via SSH with X11 forwarding could be compromised by other users on the X11 server. Note that even if X11 forwarding is disabled, users can always install their own forwarders.","remediation":"Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows: X11Forwarding no Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","compliance":{"cis":"4.2.12","cis_csc_v8":"4.8","cis_csc_v7":"9.2","cmmc_v2.0":"CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","iso_27001-2013":"A.13.1.3","mitre_mitigations":"M1042","mitre_tactics":"TA0008","mitre_techniques":"T1210","pci_dss_v3.2.1":"1.1.6,1.2.1,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,2.2.4,6.4.1","soc_2":"CC6.3,CC6.6"},"rules":["c:sshd -T -> r:^\\s*X11Forwarding\\s+no","not f:/etc/ssh/sshd_config -> r:^\\s*X11Forwarding\\s+yes","not d:/etc/ssh/sshd_config.d -> r:\\.*.conf$ -> r:^\\s*X11Forwarding\\s+yes"],"condition":"all","file":"/etc/ssh/sshd_config","directory":"/etc/ssh/sshd_config.d","command":"sshd -T","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'sshd -T'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19119
sca.check.title: Ensure SSH X11 forwarding is disabled.
sca.check.description: The X11Forwarding parameter provides the ability to tunnel X11 traffic through the connection to enable remote graphic connections.
sca.check.rationale: Disable X11 forwarding unless there is an operational requirement to use X11 applications directly. There is a small risk that the remote X11 servers of users who are logged in via SSH with X11 forwarding could be compromised by other users on the X11 server. Note that even if X11 forwarding is disabled, users can always install their own forwarders.
sca.check.remediation: Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows: X11Forwarding no Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.
sca.check.compliance.cis: 4.2.12
sca.check.compliance.cis_csc_v8: 4.8
sca.check.compliance.cis_csc_v7: 9.2
sca.check.compliance.cmmc_v2.0: CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.iso_27001-2013: A.13.1.3
sca.check.compliance.mitre_mitigations: M1042
sca.check.compliance.mitre_tactics: TA0008
sca.check.compliance.mitre_techniques: T1210
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,2.2.4,6.4.1
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.file: ["/etc/ssh/sshd_config"]
sca.check.directory: ["/etc/ssh/sshd_config.d"]
sca.check.command: ["sshd -T"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'sshd -T'

** Alert 1706006477.454395: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure only strong Ciphers are used.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19120,"title":"Ensure only strong Ciphers are used.","description":"This variable limits the ciphers that SSH can use during communication. Note: - Some organizations may have stricter requirements for approved ciphers. - Ensure that ciphers used are in compliance with site policy. - The only \"strong\" ciphers currently FIPS 140-2 compliant are: o aes256-ctr o aes192-ctr o aes128-ctr.","rationale":"Weak ciphers that are used for authentication to the cryptographic module cannot be relied upon to provide confidentiality or integrity, and system data may be compromised. - The Triple DES ciphers, as used in SSH, have a birthday bound of approximately four billion blocks, which makes it easier for remote attackers to obtain clear text data via a birthday attack against a long-duration encrypted session, aka a \"Sweet32\" attack. - Error handling in the SSH protocol; Client and Server, when using a block cipher algorithm in Cipher Block Chaining (CBC) mode, makes it easier for remote attackers to recover certain plain text data from an arbitrary block of cipher text in an SSH session via unknown vectors.","remediation":"Edit the /etc/ssh/sshd_config file add/modify the Ciphers line to contain a comma separated list of the site approved ciphers above any Include entries: Example: Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128- gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","compliance":{"cis":"4.2.13","cis_csc_v8":"3.10","cis_csc_v7":"14.4","cmmc_v2.0":"AC.L2-3.1.13,AC.L2-3.1.17,IA.L2-3.5.10,SC.L2-3.13.11,SC.L2-3.13.15,SC.L2-3.13.8","hipaa":"164.312(a)(2)(iv),164.312(e)(1),164.312(e)(2)(i),164.312(e)(2)(ii)","iso_27001-2013":"A.10.1.1,A.13.1.1","mitre_mitigations":"M1041","mitre_tactics":"TA0006","mitre_techniques":"T1040,T1557","nist_sp_800-53":"AC-17(2),SC-8,SC-8(1)","pci_dss_v3.2.1":"2.1.1,4.1,4.1.1,8.2.1","pci_dss_v4.0":"2.2.7,4.1.1,4.2.1,4.2.1.2,4.2.2,8.3.2"},"rules":["not c:sshd -T -> r:ciphers && r:3des-cbc|aes128-cbc|aes192-cbc|aes256-cbc|rijndael-cbc@lysator.liu.se"],"condition":"all","references":"https://nvd.nist.gov/vuln/detail/CVE-2016-2183,https://www.openssh.com/txt/cbc.adv,https://nvd.nist.gov/vuln/detail/CVE-2008-5161","command":"sshd -T","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'sshd -T'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19120
sca.check.title: Ensure only strong Ciphers are used.
sca.check.description: This variable limits the ciphers that SSH can use during communication. Note: - Some organizations may have stricter requirements for approved ciphers. - Ensure that ciphers used are in compliance with site policy. - The only "strong" ciphers currently FIPS 140-2 compliant are: o aes256-ctr o aes192-ctr o aes128-ctr.
sca.check.rationale: Weak ciphers that are used for authentication to the cryptographic module cannot be relied upon to provide confidentiality or integrity, and system data may be compromised. - The Triple DES ciphers, as used in SSH, have a birthday bound of approximately four billion blocks, which makes it easier for remote attackers to obtain clear text data via a birthday attack against a long-duration encrypted session, aka a "Sweet32" attack. - Error handling in the SSH protocol; Client and Server, when using a block cipher algorithm in Cipher Block Chaining (CBC) mode, makes it easier for remote attackers to recover certain plain text data from an arbitrary block of cipher text in an SSH session via unknown vectors.
sca.check.remediation: Edit the /etc/ssh/sshd_config file add/modify the Ciphers line to contain a comma separated list of the site approved ciphers above any Include entries: Example: Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128- gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.
sca.check.compliance.cis: 4.2.13
sca.check.compliance.cis_csc_v8: 3.10
sca.check.compliance.cis_csc_v7: 14.4
sca.check.compliance.cmmc_v2.0: AC.L2-3.1.13,AC.L2-3.1.17,IA.L2-3.5.10,SC.L2-3.13.11,SC.L2-3.13.15,SC.L2-3.13.8
sca.check.compliance.hipaa: 164.312(a)(2)(iv),164.312(e)(1),164.312(e)(2)(i),164.312(e)(2)(ii)
sca.check.compliance.iso_27001-2013: A.10.1.1,A.13.1.1
sca.check.compliance.mitre_mitigations: M1041
sca.check.compliance.mitre_tactics: TA0006
sca.check.compliance.mitre_techniques: T1040,T1557
sca.check.compliance.nist_sp_800-53: AC-17(2),SC-8,SC-8(1)
sca.check.compliance.pci_dss_v3.2.1: 2.1.1,4.1,4.1.1,8.2.1
sca.check.compliance.pci_dss_v4.0: 2.2.7,4.1.1,4.2.1,4.2.1.2,4.2.2,8.3.2
sca.check.references: https://nvd.nist.gov/vuln/detail/CVE-2016-2183,https://www.openssh.com/txt/cbc.adv,https://nvd.nist.gov/vuln/detail/CVE-2008-5161
sca.check.command: ["sshd -T"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'sshd -T'

** Alert 1706006477.460038: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure only strong MAC algorithms are used.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19121,"title":"Ensure only strong MAC algorithms are used.","description":"This variable limits the types of MAC algorithms that SSH can use during communication. Notes: - Some organizations may have stricter requirements for approved MACs. - Ensure that MACs used are in compliance with site policy. - The only \"strong\" MACs currently FIPS 140-2 approved are: o hmac-sha2-256 o hmac-sha2-512.","rationale":"MD5 and 96-bit MAC algorithms are considered weak and have been shown to increase exploitability in SSH downgrade attacks. Weak algorithms continue to have a great deal of attention as a weak spot that can be exploited with expanded computing power. An attacker that breaks the algorithm could take advantage of a MiTM position to decrypt the SSH tunnel and capture credentials and information.","remediation":"Edit the /etc/ssh/sshd_config file and add/modify the MACs line to contain a comma separated list of the site approved MACs above any Include entries: Example: MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2- 512,hmac-sha2-256,umac-128-etm@openssh.com,umac-128@openssh.com Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","compliance":{"cis":"4.2.14","cis_csc_v8":"3.10","cis_csc_v7":"14.4,16.5","cmmc_v2.0":"AC.L2-3.1.13,AC.L2-3.1.17,IA.L2-3.5.10,SC.L2-3.13.11,SC.L2-3.13.15,SC.L2-3.13.8","hipaa":"164.312(a)(2)(iv),164.312(e)(1),164.312(e)(2)(i),164.312(e)(2)(ii)","iso_27001-2013":"A.10.1.1,A.13.1.1","mitre_mitigations":"M1041","mitre_tactics":"TA0006","mitre_techniques":"T1040,T1557","nist_sp_800-53":"AC-17(2),SC-8,SC-8(1)","pci_dss_v3.2.1":"2.1.1,4.1,4.1.1,8.2.1","pci_dss_v4.0":"2.2.7,4.1.1,4.2.1,4.2.1.2,4.2.2,8.3.2"},"rules":["not c:sshd -T -> r:MACs && r:hmac-md5|hmac-md5-96|hmac-ripemd160|hmac-sha1|hmac-sha1-96|umac-64@openssh.com|hmac-md5-etm@openssh.com|hmac-md5-96-etm@openssh.com|hmac-ripemd160-etm@openssh.com|hmac-sha1-etm@openssh.com|hmac-sha1-96-etm@openssh.com|umac-64-etm@openssh.com"],"condition":"all","references":"http://www.mitls.org/pages/attacks/SLOTH","command":"sshd -T","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'sshd -T'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19121
sca.check.title: Ensure only strong MAC algorithms are used.
sca.check.description: This variable limits the types of MAC algorithms that SSH can use during communication. Notes: - Some organizations may have stricter requirements for approved MACs. - Ensure that MACs used are in compliance with site policy. - The only "strong" MACs currently FIPS 140-2 approved are: o hmac-sha2-256 o hmac-sha2-512.
sca.check.rationale: MD5 and 96-bit MAC algorithms are considered weak and have been shown to increase exploitability in SSH downgrade attacks. Weak algorithms continue to have a great deal of attention as a weak spot that can be exploited with expanded computing power. An attacker that breaks the algorithm could take advantage of a MiTM position to decrypt the SSH tunnel and capture credentials and information.
sca.check.remediation: Edit the /etc/ssh/sshd_config file and add/modify the MACs line to contain a comma separated list of the site approved MACs above any Include entries: Example: MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2- 512,hmac-sha2-256,umac-128-etm@openssh.com,umac-128@openssh.com Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.
sca.check.compliance.cis: 4.2.14
sca.check.compliance.cis_csc_v8: 3.10
sca.check.compliance.cis_csc_v7: 14.4,16.5
sca.check.compliance.cmmc_v2.0: AC.L2-3.1.13,AC.L2-3.1.17,IA.L2-3.5.10,SC.L2-3.13.11,SC.L2-3.13.15,SC.L2-3.13.8
sca.check.compliance.hipaa: 164.312(a)(2)(iv),164.312(e)(1),164.312(e)(2)(i),164.312(e)(2)(ii)
sca.check.compliance.iso_27001-2013: A.10.1.1,A.13.1.1
sca.check.compliance.mitre_mitigations: M1041
sca.check.compliance.mitre_tactics: TA0006
sca.check.compliance.mitre_techniques: T1040,T1557
sca.check.compliance.nist_sp_800-53: AC-17(2),SC-8,SC-8(1)
sca.check.compliance.pci_dss_v3.2.1: 2.1.1,4.1,4.1.1,8.2.1
sca.check.compliance.pci_dss_v4.0: 2.2.7,4.1.1,4.2.1,4.2.1.2,4.2.2,8.3.2
sca.check.references: http://www.mitls.org/pages/attacks/SLOTH
sca.check.command: ["sshd -T"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'sshd -T'

** Alert 1706006477.465105: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure only strong Key Exchange algorithms are used.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19122,"title":"Ensure only strong Key Exchange algorithms are used.","description":"Key exchange is any method in cryptography by which cryptographic keys are exchanged between two parties, allowing use of a cryptographic algorithm. If the sender and receiver wish to exchange encrypted messages, each must be equipped to encrypt messages to be sent and decrypt messages received Notes: - Kex algorithms have a higher preference the earlier they appear in the list - Some organizations may have stricter requirements for approved Key exchange algorithms - Ensure that Key exchange algorithms used are in compliance with site policy - The only Key Exchange Algorithms currently FIPS 140-2 approved are: o ecdh-sha2-nistp256 o ecdh-sha2-nistp384 o ecdh-sha2-nistp521 o diffie-hellman-group-exchange-sha256 o diffie-hellman-group16-sha512 o diffie-hellman-group18-sha512 o diffie-hellman-group14-sha256.","rationale":"Key exchange methods that are considered weak should be removed. A key exchange method may be weak because too few bits are used, or the hashing algorithm is considered too weak. Using weak algorithms could expose connections to man-in-the-middle attacks.","remediation":"Edit the /etc/ssh/sshd_config file add/modify the KexAlgorithms line to contain a comma separated list of the site approved key exchange algorithms above any Include entries: Example: KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,diffie-hellman- group14-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18- sha512,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie- hellman-group-exchange-sha256 Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","compliance":{"cis":"4.2.15","cis_csc_v8":"3.10","cis_csc_v7":"14.4","cmmc_v2.0":"AC.L2-3.1.13,AC.L2-3.1.17,IA.L2-3.5.10,SC.L2-3.13.11,SC.L2-3.13.15,SC.L2-3.13.8","hipaa":"164.312(a)(2)(iv),164.312(e)(1),164.312(e)(2)(i),164.312(e)(2)(ii)","iso_27001-2013":"A.10.1.1,A.13.1.1","mitre_mitigations":"M1041","mitre_tactics":"TA0006","mitre_techniques":"T1040,T1557","nist_sp_800-53":"AC-17(2),SC-8,SC-8(1)","pci_dss_v3.2.1":"2.1.1,4.1,4.1.1,8.2.1","pci_dss_v4.0":"2.2.7,4.1.1,4.2.1,4.2.1.2,4.2.2,8.3.2"},"rules":["not c:sshd -T -> r:kexalgorithms && r:diffie-hellman-group1-sha1|diffie-hellman-group14-sha1|diffie-hellman-group-exchange-sha1"],"condition":"all","command":"sshd -T","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'sshd -T'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19122
sca.check.title: Ensure only strong Key Exchange algorithms are used.
sca.check.description: Key exchange is any method in cryptography by which cryptographic keys are exchanged between two parties, allowing use of a cryptographic algorithm. If the sender and receiver wish to exchange encrypted messages, each must be equipped to encrypt messages to be sent and decrypt messages received Notes: - Kex algorithms have a higher preference the earlier they appear in the list - Some organizations may have stricter requirements for approved Key exchange algorithms - Ensure that Key exchange algorithms used are in compliance with site policy - The only Key Exchange Algorithms currently FIPS 140-2 approved are: o ecdh-sha2-nistp256 o ecdh-sha2-nistp384 o ecdh-sha2-nistp521 o diffie-hellman-group-exchange-sha256 o diffie-hellman-group16-sha512 o diffie-hellman-group18-sha512 o diffie-hellman-group14-sha256.
sca.check.rationale: Key exchange methods that are considered weak should be removed. A key exchange method may be weak because too few bits are used, or the hashing algorithm is considered too weak. Using weak algorithms could expose connections to man-in-the-middle attacks.
sca.check.remediation: Edit the /etc/ssh/sshd_config file add/modify the KexAlgorithms line to contain a comma separated list of the site approved key exchange algorithms above any Include entries: Example: KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,diffie-hellman- group14-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18- sha512,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie- hellman-group-exchange-sha256 Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.
sca.check.compliance.cis: 4.2.15
sca.check.compliance.cis_csc_v8: 3.10
sca.check.compliance.cis_csc_v7: 14.4
sca.check.compliance.cmmc_v2.0: AC.L2-3.1.13,AC.L2-3.1.17,IA.L2-3.5.10,SC.L2-3.13.11,SC.L2-3.13.15,SC.L2-3.13.8
sca.check.compliance.hipaa: 164.312(a)(2)(iv),164.312(e)(1),164.312(e)(2)(i),164.312(e)(2)(ii)
sca.check.compliance.iso_27001-2013: A.10.1.1,A.13.1.1
sca.check.compliance.mitre_mitigations: M1041
sca.check.compliance.mitre_tactics: TA0006
sca.check.compliance.mitre_techniques: T1040,T1557
sca.check.compliance.nist_sp_800-53: AC-17(2),SC-8,SC-8(1)
sca.check.compliance.pci_dss_v3.2.1: 2.1.1,4.1,4.1.1,8.2.1
sca.check.compliance.pci_dss_v4.0: 2.2.7,4.1.1,4.2.1,4.2.1.2,4.2.2,8.3.2
sca.check.command: ["sshd -T"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'sshd -T'

** Alert 1706006477.470907: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure SSH AllowTcpForwarding is disabled.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19123,"title":"Ensure SSH AllowTcpForwarding is disabled.","description":"SSH port forwarding is a mechanism in SSH for tunneling application ports from the client to the server, or servers to clients. It can be used for adding encryption to legacy applications, going through firewalls, and some system administrators and IT professionals use it for opening backdoors into the internal network from their home machines.","rationale":"Leaving port forwarding enabled can expose the organization to security risks and backdoors. SSH connections are protected with strong encryption. This makes their contents invisible to most deployed network monitoring and traffic filtering solutions. This invisibility carries considerable risk potential if it is used for malicious purposes such as data exfiltration. Cybercriminals or malware could exploit SSH to hide their unauthorized communications, or to exfiltrate stolen data from the target network.","remediation":"Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows: AllowTcpForwarding no Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","compliance":{"cis":"4.2.16","mitre_mitigations":"M1042","mitre_tactics":"TA0008","mitre_techniques":"T1048,T1048.002,T1572"},"rules":["c:sshd -T -> r:^\\s*AllowTcpForwarding\\s+no","not f:/etc/ssh/sshd_config -> r:^\\s*AllowTcpForwarding\\s+yes","not d:/etc/ssh/sshd_config.d -> r:\\.*.conf$ -> r:^\\s*AllowTcpForwarding\\s+yes"],"condition":"all","references":"https://www.ssh.com/ssh/tunneling/example","file":"/etc/ssh/sshd_config","directory":"/etc/ssh/sshd_config.d","command":"sshd -T","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'sshd -T'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19123
sca.check.title: Ensure SSH AllowTcpForwarding is disabled.
sca.check.description: SSH port forwarding is a mechanism in SSH for tunneling application ports from the client to the server, or servers to clients. It can be used for adding encryption to legacy applications, going through firewalls, and some system administrators and IT professionals use it for opening backdoors into the internal network from their home machines.
sca.check.rationale: Leaving port forwarding enabled can expose the organization to security risks and backdoors. SSH connections are protected with strong encryption. This makes their contents invisible to most deployed network monitoring and traffic filtering solutions. This invisibility carries considerable risk potential if it is used for malicious purposes such as data exfiltration. Cybercriminals or malware could exploit SSH to hide their unauthorized communications, or to exfiltrate stolen data from the target network.
sca.check.remediation: Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows: AllowTcpForwarding no Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.
sca.check.compliance.cis: 4.2.16
sca.check.compliance.mitre_mitigations: M1042
sca.check.compliance.mitre_tactics: TA0008
sca.check.compliance.mitre_techniques: T1048,T1048.002,T1572
sca.check.references: https://www.ssh.com/ssh/tunneling/example
sca.check.file: ["/etc/ssh/sshd_config"]
sca.check.directory: ["/etc/ssh/sshd_config.d"]
sca.check.command: ["sshd -T"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'sshd -T'

** Alert 1706006477.475135: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure SSH warning banner is configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19124,"title":"Ensure SSH warning banner is configured.","description":"The Banner parameter specifies a file whose contents must be sent to the remote user before authentication is permitted. By default, no banner is displayed.","rationale":"Banners are used to warn connecting users of the particular site's policy regarding connection. Presenting a warning message prior to the normal user login may assist the prosecution of trespassers on the computer system.","remediation":"Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows: Banner /etc/issue.net Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","compliance":{"cis":"4.2.17","mitre_mitigations":"M1035","mitre_tactics":"TA0001,TA0007"},"rules":["c:sshd -T -> r:^\\s*banner\\s*\\t*/etc/issue.net"],"condition":"all","command":"sshd -T","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'sshd -T'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19124
sca.check.title: Ensure SSH warning banner is configured.
sca.check.description: The Banner parameter specifies a file whose contents must be sent to the remote user before authentication is permitted. By default, no banner is displayed.
sca.check.rationale: Banners are used to warn connecting users of the particular site's policy regarding connection. Presenting a warning message prior to the normal user login may assist the prosecution of trespassers on the computer system.
sca.check.remediation: Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows: Banner /etc/issue.net Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.
sca.check.compliance.cis: 4.2.17
sca.check.compliance.mitre_mitigations: M1035
sca.check.compliance.mitre_tactics: TA0001,TA0007
sca.check.command: ["sshd -T"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'sshd -T'

** Alert 1706006477.477888: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure SSH MaxAuthTries is set to 4 or less.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19125,"title":"Ensure SSH MaxAuthTries is set to 4 or less.","description":"The MaxAuthTries parameter specifies the maximum number of authentication attempts permitted per connection. When the login failure count reaches half the number, error messages will be written to the syslog file detailing the login failure.","rationale":"Setting the MaxAuthTries parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. While the recommended setting is 4, set the number based on site policy.","remediation":"Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows: MaxAuthTries 4 Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","compliance":{"cis":"4.2.18","cis_csc_v8":"8.5","cis_csc_v7":"16.13","cmmc_v2.0":"AU.L2-3.3.1","mitre_mitigations":"M1036","mitre_tactics":"TA0006","mitre_techniques":"T1110,T1110.001,T1110.003","nist_sp_800-53":"AU-3(1),AU-7","pci_dss_v3.2.1":"10.1,10.2.2,10.2.4,10.2.5,10.3","pci_dss_v4.0":"10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5","soc_2":"CC5.2,CC7.2"},"rules":["c:sshd -T -> n:^MaxAuthTries\\s*\\t*(\\d+) compare <= 4","not f:/etc/ssh/sshd_config -> n:^MaxAuthTries\\s*\\t*(\\d+) compare > 4","not d:/etc/ssh/sshd_config.d -> r:\\.*.conf$ -> r:^MaxAuthTries\\s*\\t*([5-9]|[1-9][0-9]+)"],"condition":"all","file":"/etc/ssh/sshd_config","directory":"/etc/ssh/sshd_config.d","command":"sshd -T","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'sshd -T'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19125
sca.check.title: Ensure SSH MaxAuthTries is set to 4 or less.
sca.check.description: The MaxAuthTries parameter specifies the maximum number of authentication attempts permitted per connection. When the login failure count reaches half the number, error messages will be written to the syslog file detailing the login failure.
sca.check.rationale: Setting the MaxAuthTries parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. While the recommended setting is 4, set the number based on site policy.
sca.check.remediation: Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows: MaxAuthTries 4 Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.
sca.check.compliance.cis: 4.2.18
sca.check.compliance.cis_csc_v8: 8.5
sca.check.compliance.cis_csc_v7: 16.13
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.mitre_mitigations: M1036
sca.check.compliance.mitre_tactics: TA0006
sca.check.compliance.mitre_techniques: T1110,T1110.001,T1110.003
sca.check.compliance.nist_sp_800-53: AU-3(1),AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.1,10.2.2,10.2.4,10.2.5,10.3
sca.check.compliance.pci_dss_v4.0: 10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5
sca.check.compliance.soc_2: CC5.2,CC7.2
sca.check.file: ["/etc/ssh/sshd_config"]
sca.check.directory: ["/etc/ssh/sshd_config.d"]
sca.check.command: ["sshd -T"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'sshd -T'

** Alert 1706006477.481765: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure SSH MaxStartups is configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19126,"title":"Ensure SSH MaxStartups is configured.","description":"The MaxStartups parameter specifies the maximum number of concurrent unauthenticated connections to the SSH daemon.","rationale":"To protect a system from denial of service due to a large number of pending authentication connection attempts, use the rate limiting function of MaxStartups to protect availability of sshd logins and prevent overwhelming the daemon.","remediation":"Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows: MaxStartups 10:30:60 Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","compliance":{"cis":"4.2.19","cis_csc_v8":"4.1","cis_csc_v7":"5.1","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,CM.L2-3.4.1,CM.L2-3.4.2,CM.L2-3.4.6,CM.L2-3.4.7","iso_27001-2013":"A.14.2.5,A.8.1.3","mitre_tactics":"TA0040","mitre_techniques":"T1499,T1499.002","nist_sp_800-53":"CM-7(1),CM-9,SA-10","pci_dss_v3.2.1":"11.5,2.2","pci_dss_v4.0":"1.1.1,1.2.1,1.2.6,1.2.7,1.5.1,2.1.1,2.2.1","soc_2":"CC7.1,CC8.1"},"rules":["c:sshd -T -> r:^\\s*maxstartups\\s+10:30:60","not f:/etc/ssh/sshd_config -> r:^\\s*maxstartups\\s+(((1[1-9]|[1-9][0-9][0-9]+):([0-9]+):([0-9]+))|(([0-9]+):(3[1-9]|[4-9][0-9]|[1-9][0-9][0-9]+):([0-9]+))|(([0-9]+):([0-9]+):(6[1-9]|[7-9][0-9]|[1-9][0-9][0-9]+)))","not d:/etc/ssh/sshd_config.d -> r:\\.*.conf$ -> r:^\\s*maxstartups\\s+(((1[1-9]|[1-9][0-9][0-9]+):([0-9]+):([0-9]+))|(([0-9]+):(3[1-9]|[4-9][0-9]|[1-9][0-9][0-9]+):([0-9]+))|(([0-9]+):([0-9]+):(6[1-9]|[7-9][0-9]|[1-9][0-9][0-9]+)))"],"condition":"all","file":"/etc/ssh/sshd_config","directory":"/etc/ssh/sshd_config.d","command":"sshd -T","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'sshd -T'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19126
sca.check.title: Ensure SSH MaxStartups is configured.
sca.check.description: The MaxStartups parameter specifies the maximum number of concurrent unauthenticated connections to the SSH daemon.
sca.check.rationale: To protect a system from denial of service due to a large number of pending authentication connection attempts, use the rate limiting function of MaxStartups to protect availability of sshd logins and prevent overwhelming the daemon.
sca.check.remediation: Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows: MaxStartups 10:30:60 Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.
sca.check.compliance.cis: 4.2.19
sca.check.compliance.cis_csc_v8: 4.1
sca.check.compliance.cis_csc_v7: 5.1
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,CM.L2-3.4.1,CM.L2-3.4.2,CM.L2-3.4.6,CM.L2-3.4.7
sca.check.compliance.iso_27001-2013: A.14.2.5,A.8.1.3
sca.check.compliance.mitre_tactics: TA0040
sca.check.compliance.mitre_techniques: T1499,T1499.002
sca.check.compliance.nist_sp_800-53: CM-7(1),CM-9,SA-10
sca.check.compliance.pci_dss_v3.2.1: 11.5,2.2
sca.check.compliance.pci_dss_v4.0: 1.1.1,1.2.1,1.2.6,1.2.7,1.5.1,2.1.1,2.2.1
sca.check.compliance.soc_2: CC7.1,CC8.1
sca.check.file: ["/etc/ssh/sshd_config"]
sca.check.directory: ["/etc/ssh/sshd_config.d"]
sca.check.command: ["sshd -T"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'sshd -T'

** Alert 1706006477.485744: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure SSH LoginGraceTime is set to one minute or less.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19127,"title":"Ensure SSH LoginGraceTime is set to one minute or less.","description":"The LoginGraceTime parameter specifies the time allowed for successful authentication to the SSH server. The longer the Grace period is the more open unauthenticated connections can exist. Like other session controls in this session the Grace Period should be limited to appropriate organizational limits to ensure the service is available for needed access.","rationale":"Setting the LoginGraceTime parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. It will also limit the number of concurrent unauthenticated connections While the recommended setting is 60 seconds (1 Minute), set the number based on site policy.","remediation":"Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows: LoginGraceTime 60 Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","compliance":{"cis":"4.2.20","mitre_mitigations":"M1036","mitre_tactics":"TA0006","mitre_techniques":"T1110,T1110.001,T1110.003,T1110.004"},"rules":["c:sshd -T -> n:logingracetime\\s*\\t*(\\d+) compare <= 60 && n:LoginGraceTime\\s*\\t*(\\d+) compare != 0","not f:/etc/ssh/sshd_config -> r:\\s*LoginGraceTime\\s+(0|6[1-9]|[7-9][0-9]|[1-9][0-9][0-9]+|[^1]m)","not d:/etc/ssh/sshd_config.d -> r:\\.*.conf$ -> r:\\s*LoginGraceTime\\s+(0|6[1-9]|[7-9][0-9]|[1-9][0-9][0-9]+|[^1]m)"],"condition":"all","file":"/etc/ssh/sshd_config","directory":"/etc/ssh/sshd_config.d","command":"sshd -T","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'sshd -T'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19127
sca.check.title: Ensure SSH LoginGraceTime is set to one minute or less.
sca.check.description: The LoginGraceTime parameter specifies the time allowed for successful authentication to the SSH server. The longer the Grace period is the more open unauthenticated connections can exist. Like other session controls in this session the Grace Period should be limited to appropriate organizational limits to ensure the service is available for needed access.
sca.check.rationale: Setting the LoginGraceTime parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. It will also limit the number of concurrent unauthenticated connections While the recommended setting is 60 seconds (1 Minute), set the number based on site policy.
sca.check.remediation: Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows: LoginGraceTime 60 Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.
sca.check.compliance.cis: 4.2.20
sca.check.compliance.mitre_mitigations: M1036
sca.check.compliance.mitre_tactics: TA0006
sca.check.compliance.mitre_techniques: T1110,T1110.001,T1110.003,T1110.004
sca.check.file: ["/etc/ssh/sshd_config"]
sca.check.directory: ["/etc/ssh/sshd_config.d"]
sca.check.command: ["sshd -T"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'sshd -T'

** Alert 1706006477.489632: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure SSH MaxSessions is set to 10 or less.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19128,"title":"Ensure SSH MaxSessions is set to 10 or less.","description":"The MaxSessions parameter specifies the maximum number of open sessions permitted from a given connection.","rationale":"To protect a system from denial of service due to a large number of concurrent sessions, use the rate limiting function of MaxSessions to protect availability of sshd logins and prevent overwhelming the daemon.","remediation":"Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows: MaxSessions 10 Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","compliance":{"cis":"4.2.21","mitre_tactics":"TA0040","mitre_techniques":"T1499,T1499.002"},"rules":["c:sshd -T -> n:^\\s*maxsessions\\s+(\\d+) compare <= 10","not f:/etc/ssh/sshd_config -> r:^\\s*MaxSessions\\s+(1[1-9]|[2-9][0-9]|[1-9][0-9][0-9]+)","not d:/etc/ssh/sshd_config.d -> r:\\.*.conf$ -> r:^\\s*MaxSessions\\s+(1[1-9]|[2-9][0-9]|[1-9][0-9][0-9]+)"],"condition":"all","file":"/etc/ssh/sshd_config","directory":"/etc/ssh/sshd_config.d","command":"sshd -T","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'sshd -T'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19128
sca.check.title: Ensure SSH MaxSessions is set to 10 or less.
sca.check.description: The MaxSessions parameter specifies the maximum number of open sessions permitted from a given connection.
sca.check.rationale: To protect a system from denial of service due to a large number of concurrent sessions, use the rate limiting function of MaxSessions to protect availability of sshd logins and prevent overwhelming the daemon.
sca.check.remediation: Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows: MaxSessions 10 Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.
sca.check.compliance.cis: 4.2.21
sca.check.compliance.mitre_tactics: TA0040
sca.check.compliance.mitre_techniques: T1499,T1499.002
sca.check.file: ["/etc/ssh/sshd_config"]
sca.check.directory: ["/etc/ssh/sshd_config.d"]
sca.check.command: ["sshd -T"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'sshd -T'

** Alert 1706006477.492628: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure SSH Idle Timeout Interval is configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19129,"title":"Ensure SSH Idle Timeout Interval is configured.","description":"Note: To clarify, the two settings described below are only meant for idle connections from a protocol perspective and are not meant to check if the user is active or not. An idle user does not mean an idle connection. SSH does not and never had, intentionally, the capability to drop idle users. In SSH versions before 8.2p1 there was a bug that caused these values to behave in such a manner that they were abused to disconnect idle users. This bug has been resolved in 8.2p1 and thus it can no longer be abused disconnect idle users. The two options ClientAliveInterval and ClientAliveCountMax control the timeout of SSH sessions. Taken directly from man 5 sshd_config: - ClientAliveInterval Sets a timeout interval in seconds after which if no data has been received from the client, sshd(8) will send a message through the encrypted channel to request a response from the client. The default is 0, indicating that these messages will not be sent to the client. - ClientAliveCountMax Sets the number of client alive messages which may be sent without sshd(8) receiving any messages back from the client. If this threshold is reached while client alive messages are being sent, sshd will disconnect the client, terminating the session. It is important to note that the use of client alive messages is very different from TCPKeepAlive. The client alive messages are sent through the encrypted channel and therefore will not be spoofable. The TCP keepalive option enabled by TCPKeepAlive is spoofable. The client alive mechanism is valuable when the client or server depend on knowing when a connection has become unresponsive. The default value is 3. If ClientAliveInterval is set to 15, and ClientAliveCountMax is left at the default, unresponsive SSH clients will be disconnected after approximately 45 seconds. Setting a zero ClientAliveCountMax disables connection termination.","rationale":"In order to prevent resource exhaustion, appropriate values should be set for both ClientAliveInterval and ClientAliveCountMax. Specifically, looking at the source code, ClientAliveCountMax must be greater than zero in order to utilize the ability of SSH to drop idle connections. If connections are allowed to stay open indefinately, this can potentially be used as a DDOS attack or simple resource exhaustion could occur over unreliable networks. The example set here is a 45 second timeout. Consult your site policy for network timeouts and apply as appropriate.","remediation":"Edit the /etc/ssh/sshd_config file to set the parameters above any Include entries according to site policy. Example: ClientAliveInterval 15 ClientAliveCountMax 3 Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","compliance":{"cis":"4.2.22","mitre_mitigations":"M1026","mitre_tactics":"TA0001","mitre_techniques":"T1078,T1078.001,T1078.002,T1078.003"},"rules":["c:sshd -T -> n:ClientAliveInterval\\s*\\t*(\\d+) compare > 0","c:sshd -T -> n:clientalivecountmax\\s*\\t*(\\d+) compare > 0"],"condition":"all","references":"https://man.openbsd.org/sshd_config","command":"sshd -T","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'sshd -T'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19129
sca.check.title: Ensure SSH Idle Timeout Interval is configured.
sca.check.description: Note: To clarify, the two settings described below are only meant for idle connections from a protocol perspective and are not meant to check if the user is active or not. An idle user does not mean an idle connection. SSH does not and never had, intentionally, the capability to drop idle users. In SSH versions before 8.2p1 there was a bug that caused these values to behave in such a manner that they were abused to disconnect idle users. This bug has been resolved in 8.2p1 and thus it can no longer be abused disconnect idle users. The two options ClientAliveInterval and ClientAliveCountMax control the timeout of SSH sessions. Taken directly from man 5 sshd_config: - ClientAliveInterval Sets a timeout interval in seconds after which if no data has been received from the client, sshd(8) will send a message through the encrypted channel to request a response from the client. The default is 0, indicating that these messages will not be sent to the client. - ClientAliveCountMax Sets the number of client alive messages which may be sent without sshd(8) receiving any messages back from the client. If this threshold is reached while client alive messages are being sent, sshd will disconnect the client, terminating the session. It is important to note that the use of client alive messages is very different from TCPKeepAlive. The client alive messages are sent through the encrypted channel and therefore will not be spoofable. The TCP keepalive option enabled by TCPKeepAlive is spoofable. The client alive mechanism is valuable when the client or server depend on knowing when a connection has become unresponsive. The default value is 3. If ClientAliveInterval is set to 15, and ClientAliveCountMax is left at the default, unresponsive SSH clients will be disconnected after approximately 45 seconds. Setting a zero ClientAliveCountMax disables connection termination.
sca.check.rationale: In order to prevent resource exhaustion, appropriate values should be set for both ClientAliveInterval and ClientAliveCountMax. Specifically, looking at the source code, ClientAliveCountMax must be greater than zero in order to utilize the ability of SSH to drop idle connections. If connections are allowed to stay open indefinately, this can potentially be used as a DDOS attack or simple resource exhaustion could occur over unreliable networks. The example set here is a 45 second timeout. Consult your site policy for network timeouts and apply as appropriate.
sca.check.remediation: Edit the /etc/ssh/sshd_config file to set the parameters above any Include entries according to site policy. Example: ClientAliveInterval 15 ClientAliveCountMax 3 Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.
sca.check.compliance.cis: 4.2.22
sca.check.compliance.mitre_mitigations: M1026
sca.check.compliance.mitre_tactics: TA0001
sca.check.compliance.mitre_techniques: T1078,T1078.001,T1078.002,T1078.003
sca.check.references: https://man.openbsd.org/sshd_config
sca.check.command: ["sshd -T"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'sshd -T'

** Alert 1706006477.499940: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure sudo is installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19130,"title":"Ensure sudo is installed.","description":"sudo allows a permitted user to execute a command as the superuser or another user, as specified by the security policy. The invoking user's real (not effective) user ID is used to determine the user name with which to query the security policy.","rationale":"sudo supports a plug-in architecture for security policies and input/output logging. Third parties can develop and distribute their own policy and I/O logging plug-ins to work seamlessly with the sudo front end. The default security policy is sudoers, which is configured via the file /etc/sudoers and any entries in /etc/sudoers.d. The security policy determines what privileges, if any, a user has to run sudo. The policy may require that users authenticate themselves with a password or another authentication mechanism. If authentication is required, sudo will exit if the user's password is not entered within a configurable time limit. This limit is policy-specific.","remediation":"First determine is LDAP functionality is required. If so, then install sudo-ldap, else install sudo. Example: # apt install sudo.","compliance":{"cis":"4.3.1","cis_csc_v8":"5.4","cis_csc_v7":"4.3","cmmc_v2.0":"AC.L2-3.1.5,AC.L2-3.1.6,AC.L2-3.1.7,SC.L2-3.13.3","iso_27001-2013":"A.9.2.3","mitre_tactics":"TA0001","mitre_techniques":"T1078,T1078.003","nist_sp_800-53":"AC-6(2),AC-6(5)","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","soc_2":"CC6.1,CC6.3"},"rules":["c:dpkg -s sudo -> r:install ok installed","c:dpkg -s sudo-ldap -> r:install ok installed"],"condition":"any","command":"dpkg -s sudo,dpkg -s sudo-ldap","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19130
sca.check.title: Ensure sudo is installed.
sca.check.description: sudo allows a permitted user to execute a command as the superuser or another user, as specified by the security policy. The invoking user's real (not effective) user ID is used to determine the user name with which to query the security policy.
sca.check.rationale: sudo supports a plug-in architecture for security policies and input/output logging. Third parties can develop and distribute their own policy and I/O logging plug-ins to work seamlessly with the sudo front end. The default security policy is sudoers, which is configured via the file /etc/sudoers and any entries in /etc/sudoers.d. The security policy determines what privileges, if any, a user has to run sudo. The policy may require that users authenticate themselves with a password or another authentication mechanism. If authentication is required, sudo will exit if the user's password is not entered within a configurable time limit. This limit is policy-specific.
sca.check.remediation: First determine is LDAP functionality is required. If so, then install sudo-ldap, else install sudo. Example: # apt install sudo.
sca.check.compliance.cis: 4.3.1
sca.check.compliance.cis_csc_v8: 5.4
sca.check.compliance.cis_csc_v7: 4.3
sca.check.compliance.cmmc_v2.0: AC.L2-3.1.5,AC.L2-3.1.6,AC.L2-3.1.7,SC.L2-3.13.3
sca.check.compliance.iso_27001-2013: A.9.2.3
sca.check.compliance.mitre_tactics: TA0001
sca.check.compliance.mitre_techniques: T1078,T1078.003
sca.check.compliance.nist_sp_800-53: AC-6(2),AC-6(5)
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.soc_2: CC6.1,CC6.3
sca.check.command: ["dpkg -s sudo", "dpkg -s sudo-ldap"]
sca.check.result: failed

** Alert 1706006477.503776: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure sudo commands use pty.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19131,"title":"Ensure sudo commands use pty.","description":"sudo can be configured to run only from a pseudo terminal (pseudo-pty).","rationale":"Attackers can run a malicious program using sudo which would fork a background process that remains even when the main program has finished executing.","remediation":"Edit the file /etc/sudoers with visudo or a file in /etc/sudoers.d/ with visudo -f <PATH TO FILE> and add the following line: Defaults use_pty Note: - sudo will read each file in /etc/sudoers.d, skipping file names that end in ~ or contain a . character to avoid causing problems with package manager or editor temporary/backup files. - Files are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first will be parsed before /etc/sudoers.d/10_second. - Be aware that because the sorting is lexical, not numeric, /etc/sudoers.d/1_whoops would be loaded after /etc/sudoers.d/10_second. - Using a consistent number of leading zeroes in the file names can be used to avoid such problems.","compliance":{"cis":"4.3.2","cis_csc_v8":"5.4","cis_csc_v7":"5.1","cmmc_v2.0":"AC.L2-3.1.5,AC.L2-3.1.6,AC.L2-3.1.7,SC.L2-3.13.3","iso_27001-2013":"A.14.2.5,A.8.1.3","mitre_mitigations":"M1026,M1038","mitre_tactics":"TA0001,TA0003","mitre_techniques":"T1078,T1078.003,T1548,T1548.003","nist_sp_800-53":"AC-6(2),AC-6(5)","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","soc_2":"CC6.1,CC6.3"},"rules":["f:/etc/sudoers -> r:^\\s*\\t*Defaults\\s*\\t*use_pty","d:/etc/sudoers.d -> r:\\.* -> r:^\\s*\\t*Defaults\\s*\\t*use_pty"],"condition":"any","file":"/etc/sudoers","directory":"/etc/sudoers.d","status":"Not applicable","reason":"Could not open file '/etc/sudoers'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19131
sca.check.title: Ensure sudo commands use pty.
sca.check.description: sudo can be configured to run only from a pseudo terminal (pseudo-pty).
sca.check.rationale: Attackers can run a malicious program using sudo which would fork a background process that remains even when the main program has finished executing.
sca.check.remediation: Edit the file /etc/sudoers with visudo or a file in /etc/sudoers.d/ with visudo -f <PATH TO FILE> and add the following line: Defaults use_pty Note: - sudo will read each file in /etc/sudoers.d, skipping file names that end in ~ or contain a . character to avoid causing problems with package manager or editor temporary/backup files. - Files are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first will be parsed before /etc/sudoers.d/10_second. - Be aware that because the sorting is lexical, not numeric, /etc/sudoers.d/1_whoops would be loaded after /etc/sudoers.d/10_second. - Using a consistent number of leading zeroes in the file names can be used to avoid such problems.
sca.check.compliance.cis: 4.3.2
sca.check.compliance.cis_csc_v8: 5.4
sca.check.compliance.cis_csc_v7: 5.1
sca.check.compliance.cmmc_v2.0: AC.L2-3.1.5,AC.L2-3.1.6,AC.L2-3.1.7,SC.L2-3.13.3
sca.check.compliance.iso_27001-2013: A.14.2.5,A.8.1.3
sca.check.compliance.mitre_mitigations: M1026,M1038
sca.check.compliance.mitre_tactics: TA0001,TA0003
sca.check.compliance.mitre_techniques: T1078,T1078.003,T1548,T1548.003
sca.check.compliance.nist_sp_800-53: AC-6(2),AC-6(5)
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.soc_2: CC6.1,CC6.3
sca.check.file: ["/etc/sudoers"]
sca.check.directory: ["/etc/sudoers.d"]
sca.check.result: not applicable
sca.check.reason: Could not open file '/etc/sudoers'

** Alert 1706006477.507678: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure sudo log file exists.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19132,"title":"Ensure sudo log file exists.","description":"sudo can use a custom log file.","rationale":"A sudo log file simplifies auditing of sudo commands.","remediation":"Edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo or visudo -f <PATH TO FILE> and add the following line: Example: Defaults logfile=\"/var/log/sudo.log\" Note: - sudo will read each file in /etc/sudoers.d, skipping file names that end in ~ or contain a . character to avoid causing problems with package manager or editor temporary/backup files. - Files are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first will be parsed before /etc/sudoers.d/10_second. - Be aware that because the sorting is lexical, not numeric, /etc/sudoers.d/1_whoops would be loaded after /etc/sudoers.d/10_second. - Using a consistent number of leading zeroes in the file names can be used to avoid such problems.","compliance":{"cis":"4.3.3","cis_csc_v8":"8.5","cis_csc_v7":"6.3","cmmc_v2.0":"AU.L2-3.3.1","iso_27001-2013":"A.12.4.1","mitre_mitigations":"M1026","mitre_tactics":"TA0004","mitre_techniques":"T1562,T1562.006","nist_sp_800-53":"AU-3(1),AU-7","pci_dss_v3.2.1":"10.1,10.2.2,10.2.4,10.2.5,10.3","pci_dss_v4.0":"10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5","soc_2":"CC5.2,CC7.2"},"rules":["f:/etc/sudoers -> r:^\\s*\\t*Defaults\\s*\\t*logfile=","d:/etc/sudoers.d -> r:\\.* -> r:^\\s*\\t*Defaults\\s*\\t*logfile="],"condition":"any","file":"/etc/sudoers","directory":"/etc/sudoers.d","status":"Not applicable","reason":"Could not open file '/etc/sudoers'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19132
sca.check.title: Ensure sudo log file exists.
sca.check.description: sudo can use a custom log file.
sca.check.rationale: A sudo log file simplifies auditing of sudo commands.
sca.check.remediation: Edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo or visudo -f <PATH TO FILE> and add the following line: Example: Defaults logfile="/var/log/sudo.log" Note: - sudo will read each file in /etc/sudoers.d, skipping file names that end in ~ or contain a . character to avoid causing problems with package manager or editor temporary/backup files. - Files are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first will be parsed before /etc/sudoers.d/10_second. - Be aware that because the sorting is lexical, not numeric, /etc/sudoers.d/1_whoops would be loaded after /etc/sudoers.d/10_second. - Using a consistent number of leading zeroes in the file names can be used to avoid such problems.
sca.check.compliance.cis: 4.3.3
sca.check.compliance.cis_csc_v8: 8.5
sca.check.compliance.cis_csc_v7: 6.3
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_mitigations: M1026
sca.check.compliance.mitre_tactics: TA0004
sca.check.compliance.mitre_techniques: T1562,T1562.006
sca.check.compliance.nist_sp_800-53: AU-3(1),AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.1,10.2.2,10.2.4,10.2.5,10.3
sca.check.compliance.pci_dss_v4.0: 10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5
sca.check.compliance.soc_2: CC5.2,CC7.2
sca.check.file: ["/etc/sudoers"]
sca.check.directory: ["/etc/sudoers.d"]
sca.check.result: not applicable
sca.check.reason: Could not open file '/etc/sudoers'

** Alert 1706006477.511349: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure users must provide password for privilege escalation.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19133,"title":"Ensure users must provide password for privilege escalation.","description":"The operating system must be configured so that users must provide a password for privilege escalation.","rationale":"Without (re-)authentication, users may access resources or perform tasks for which they do not have authorization. When operating systems provide the capability to escalate a functional capability, it is critical the user (re-)authenticate.","remediation":"Based on the outcome of the audit procedure, use visudo -f <PATH TO FILE> to edit the relevant sudoers file. Remove any line with occurrences of NOPASSWD tags in the file.","compliance":{"cis":"4.3.4","cis_csc_v8":"5.4","cis_csc_v7":"4.3","cmmc_v2.0":"AC.L2-3.1.5,AC.L2-3.1.6,AC.L2-3.1.7,SC.L2-3.13.3","iso_27001-2013":"A.9.2.3","mitre_mitigations":"M1026","mitre_tactics":"TA0005","mitre_techniques":"T1078,T1548","nist_sp_800-53":"AC-6(2),AC-6(5)","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","soc_2":"CC6.1,CC6.3"},"rules":["f:/etc/sudoers -> !r:^# && r:*NOPASSWD","d:/etc/sudoers.d -> r:\\.* -> !r:^# && r:*NOPASSWD"],"condition":"none","file":"/etc/sudoers","directory":"/etc/sudoers.d","status":"Not applicable","reason":"Could not open file '/etc/sudoers'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19133
sca.check.title: Ensure users must provide password for privilege escalation.
sca.check.description: The operating system must be configured so that users must provide a password for privilege escalation.
sca.check.rationale: Without (re-)authentication, users may access resources or perform tasks for which they do not have authorization. When operating systems provide the capability to escalate a functional capability, it is critical the user (re-)authenticate.
sca.check.remediation: Based on the outcome of the audit procedure, use visudo -f <PATH TO FILE> to edit the relevant sudoers file. Remove any line with occurrences of NOPASSWD tags in the file.
sca.check.compliance.cis: 4.3.4
sca.check.compliance.cis_csc_v8: 5.4
sca.check.compliance.cis_csc_v7: 4.3
sca.check.compliance.cmmc_v2.0: AC.L2-3.1.5,AC.L2-3.1.6,AC.L2-3.1.7,SC.L2-3.13.3
sca.check.compliance.iso_27001-2013: A.9.2.3
sca.check.compliance.mitre_mitigations: M1026
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1078,T1548
sca.check.compliance.nist_sp_800-53: AC-6(2),AC-6(5)
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.soc_2: CC6.1,CC6.3
sca.check.file: ["/etc/sudoers"]
sca.check.directory: ["/etc/sudoers.d"]
sca.check.result: not applicable
sca.check.reason: Could not open file '/etc/sudoers'

** Alert 1706006477.514435: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure re-authentication for privilege escalation is not disabled globally.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19134,"title":"Ensure re-authentication for privilege escalation is not disabled globally.","description":"The operating system must be configured so that users must re-authenticate for privilege escalation.","rationale":"Without re-authentication, users may access resources or perform tasks for which they do not have authorization. When operating systems provide the capability to escalate a functional capability, it is critical the user re-authenticate.","remediation":"Configure the operating system to require users to reauthenticate for privilege escalation. Based on the outcome of the audit procedure, use visudo -f <PATH TO FILE> to edit the relevant sudoers file. Remove any occurrences of !authenticate tags in the file(s).","compliance":{"cis":"4.3.5","cis_csc_v8":"5.4","cis_csc_v7":"4.3","cmmc_v2.0":"AC.L2-3.1.5,AC.L2-3.1.6,AC.L2-3.1.7,SC.L2-3.13.3","iso_27001-2013":"A.9.2.3","nist_sp_800-53":"AC-6(2),AC-6(5)","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","soc_2":"CC6.1,CC6.3"},"rules":["f:/etc/sudoers -> !r:^# && r:*\\!authenticate","d:/etc/sudoers.d -> r:\\.* -> !r:^# && r:*\\!authenticate"],"condition":"none","file":"/etc/sudoers","directory":"/etc/sudoers.d","status":"Not applicable","reason":"Could not open file '/etc/sudoers'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19134
sca.check.title: Ensure re-authentication for privilege escalation is not disabled globally.
sca.check.description: The operating system must be configured so that users must re-authenticate for privilege escalation.
sca.check.rationale: Without re-authentication, users may access resources or perform tasks for which they do not have authorization. When operating systems provide the capability to escalate a functional capability, it is critical the user re-authenticate.
sca.check.remediation: Configure the operating system to require users to reauthenticate for privilege escalation. Based on the outcome of the audit procedure, use visudo -f <PATH TO FILE> to edit the relevant sudoers file. Remove any occurrences of !authenticate tags in the file(s).
sca.check.compliance.cis: 4.3.5
sca.check.compliance.cis_csc_v8: 5.4
sca.check.compliance.cis_csc_v7: 4.3
sca.check.compliance.cmmc_v2.0: AC.L2-3.1.5,AC.L2-3.1.6,AC.L2-3.1.7,SC.L2-3.13.3
sca.check.compliance.iso_27001-2013: A.9.2.3
sca.check.compliance.nist_sp_800-53: AC-6(2),AC-6(5)
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.soc_2: CC6.1,CC6.3
sca.check.file: ["/etc/sudoers"]
sca.check.directory: ["/etc/sudoers.d"]
sca.check.result: not applicable
sca.check.reason: Could not open file '/etc/sudoers'

** Alert 1706006477.517520: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure sudo authentication timeout is configured correctly.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19135,"title":"Ensure sudo authentication timeout is configured correctly.","description":"sudo caches used credentials for a default of 15 minutes. This is for ease of use when there are multiple administrative tasks to perform. The timeout can be modified to suit local security policies. This default is distribution specific. See audit section for further information.","rationale":"Setting a timeout value reduces the window of opportunity for unauthorized privileged access to another user.","remediation":"If the currently configured timeout is larger than 15 minutes, edit the file listed in the audit section with visudo -f <PATH TO FILE> and modify the entry timestamp_timeout= to 15 minutes or less as per your site policy. The value is in minutes. This particular entry may appear on it's own, or on the same line as env_reset. See the following two examples: Defaults env_reset, timestamp_timeout=15 Defaults timestamp_timeout=15 Defaults env_reset.","compliance":{"cis":"4.3.6","cis_csc_v8":"5.4","cis_csc_v7":"4.3","cmmc_v2.0":"AC.L2-3.1.5,AC.L2-3.1.6,AC.L2-3.1.7,SC.L2-3.13.3","iso_27001-2013":"A.9.2.3","nist_sp_800-53":"AC-6(2),AC-6(5)","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","soc_2":"CC6.1,CC6.3"},"rules":["c:sudo -V -> r:Authentication timestamp timeout:\\s*\\t*15.0 minutes","f:/etc/sudoers -> n:timestamp_timeout=(\\d+) compare <=15","d:/etc/sudoers.d -> r:\\.* -> n:timestamp_timeout=(\\d+) compare <=15"],"condition":"all","references":"https://www.sudo.ws/man/1.9.0/sudoers.man.html","file":"/etc/sudoers","directory":"/etc/sudoers.d","command":"sudo -V","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'sudo -V'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19135
sca.check.title: Ensure sudo authentication timeout is configured correctly.
sca.check.description: sudo caches used credentials for a default of 15 minutes. This is for ease of use when there are multiple administrative tasks to perform. The timeout can be modified to suit local security policies. This default is distribution specific. See audit section for further information.
sca.check.rationale: Setting a timeout value reduces the window of opportunity for unauthorized privileged access to another user.
sca.check.remediation: If the currently configured timeout is larger than 15 minutes, edit the file listed in the audit section with visudo -f <PATH TO FILE> and modify the entry timestamp_timeout= to 15 minutes or less as per your site policy. The value is in minutes. This particular entry may appear on it's own, or on the same line as env_reset. See the following two examples: Defaults env_reset, timestamp_timeout=15 Defaults timestamp_timeout=15 Defaults env_reset.
sca.check.compliance.cis: 4.3.6
sca.check.compliance.cis_csc_v8: 5.4
sca.check.compliance.cis_csc_v7: 4.3
sca.check.compliance.cmmc_v2.0: AC.L2-3.1.5,AC.L2-3.1.6,AC.L2-3.1.7,SC.L2-3.13.3
sca.check.compliance.iso_27001-2013: A.9.2.3
sca.check.compliance.nist_sp_800-53: AC-6(2),AC-6(5)
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.soc_2: CC6.1,CC6.3
sca.check.references: https://www.sudo.ws/man/1.9.0/sudoers.man.html
sca.check.file: ["/etc/sudoers"]
sca.check.directory: ["/etc/sudoers.d"]
sca.check.command: ["sudo -V"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'sudo -V'

** Alert 1706006477.521365: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure access to the su command is restricted.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19136,"title":"Ensure access to the su command is restricted.","description":"The su command allows a user to run a command or shell as another user. The program has been superseded by sudo, which allows for more granular control over privileged access. Normally, the su command can be executed by any user. By uncommenting the pam_wheel.so statement in /etc/pam.d/su, the su command will only allow users in a specific groups to execute su. This group should be empty to reinforce the use of sudo for privileged access.","rationale":"Restricting the use of su , and using sudo in its place, provides system administrators better control of the escalation of user privileges to execute privileged commands. The sudo utility also provides a better logging and audit mechanism, as it can log each command executed via sudo , whereas su can only record that a user executed the su program.","remediation":"Create an empty group that will be specified for use of the su command. The group should be named according to site policy. Example: # groupadd sugroup Add the following line to the /etc/pam.d/su file, specifying the empty group: auth required pam_wheel.so use_uid group=sugroup.","compliance":{"cis":"4.3.7","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1026","mitre_tactics":"TA0005","mitre_techniques":"T1548","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["f:/etc/pam.d/su -> !r:^# && r:auth\\s*\\t*required\\s*\\t*pam_wheel.so && r:use_uid && r:group=\\w+"],"condition":"all","file":"/etc/pam.d/su","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19136
sca.check.title: Ensure access to the su command is restricted.
sca.check.description: The su command allows a user to run a command or shell as another user. The program has been superseded by sudo, which allows for more granular control over privileged access. Normally, the su command can be executed by any user. By uncommenting the pam_wheel.so statement in /etc/pam.d/su, the su command will only allow users in a specific groups to execute su. This group should be empty to reinforce the use of sudo for privileged access.
sca.check.rationale: Restricting the use of su , and using sudo in its place, provides system administrators better control of the escalation of user privileges to execute privileged commands. The sudo utility also provides a better logging and audit mechanism, as it can log each command executed via sudo , whereas su can only record that a user executed the su program.
sca.check.remediation: Create an empty group that will be specified for use of the su command. The group should be named according to site policy. Example: # groupadd sugroup Add the following line to the /etc/pam.d/su file, specifying the empty group: auth required pam_wheel.so use_uid group=sugroup.
sca.check.compliance.cis: 4.3.7
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1026
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1548
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.file: ["/etc/pam.d/su"]
sca.check.result: failed

** Alert 1706006477.525564: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure password creation requirements are configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19137,"title":"Ensure password creation requirements are configured.","description":"The pam_pwquality.so module checks the strength of passwords. It performs checks such as making sure a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more. The following options are set in the /etc/security/pwquality.conf file: - Password Length: o minlen = 14 - password must be 14 characters or more - Password complexity: o minclass = 4 - The minimum number of required classes of characters for the new password (digits, uppercase, lowercase, others) OR o dcredit = -1 - provide at least one digit o ucredit = -1 - provide at least one uppercase character o ocredit = -1 - provide at least one special character o lcredit = -1 - provide at least one lowercase character.","rationale":"Strong passwords protect systems from being hacked through brute force methods.","remediation":"The following setting is a recommend example policy. Alter these values to conform to your own organization's password policies. Run the following command to install the pam_pwquality module: # apt install libpam-pwquality Edit the file /etc/security/pwquality.conf and add or modify the following line for password length to conform to site policy: minlen = 14 Edit the file /etc/security/pwquality.conf and add or modify the following line for password complexity to conform to site policy: Option 1 minclass = 4 Option 2 dcredit = -1 ucredit = -1 ocredit = -1 lcredit = -1 Edit the /etc/pam.d/common-password file to include pam_pwquality.so and to conform to site policy: password requisite pam_pwquality.so retry=3.","compliance":{"cis":"4.4.1","cis_csc_v8":"5.2","cis_csc_v7":"4.4","cmmc_v2.0":"IA.L2-3.5.7","iso_27001-2013":"A.9.4.3","mitre_mitigations":"M1027","mitre_tactics":"TA0006","mitre_techniques":"T1078,T1078.001,T1078.002,T1078.003,T1078.004,T1110,T1110.001,T1110.002,T1110.003","pci_dss_v4.0":"2.2.2,8.3.5,8.3.6,8.6.3","soc_2":"CC6.1"},"rules":["f:/etc/security/pwquality.conf -> !r:^\\s*# && n:minlen\\s*=\\s*(\\d+) compare >= 14","f:/etc/security/pwquality.conf -> !r:^\\s*# && n:minclass\\s*=\\s*(\\d+) compare >= 4","f:/etc/security/pwquality.conf -> !r:^\\s*# && r:dcredit = -1","f:/etc/security/pwquality.conf -> !r:^\\s*# && r:ucredit = -1","f:/etc/security/pwquality.conf -> !r:^\\s*# && r:lcredit = -1","f:/etc/security/pwquality.conf -> !r:^\\s*# && r:ocredit = -1","f:/etc/pam.d/common-password -> !r:^\\s*# && n:password\\s*requisite\\s*pam_pwquality.so\\s*retry=(\\d+) compare <=3"],"condition":"all","file":"/etc/security/pwquality.conf,/etc/pam.d/common-password","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19137
sca.check.title: Ensure password creation requirements are configured.
sca.check.description: The pam_pwquality.so module checks the strength of passwords. It performs checks such as making sure a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more. The following options are set in the /etc/security/pwquality.conf file: - Password Length: o minlen = 14 - password must be 14 characters or more - Password complexity: o minclass = 4 - The minimum number of required classes of characters for the new password (digits, uppercase, lowercase, others) OR o dcredit = -1 - provide at least one digit o ucredit = -1 - provide at least one uppercase character o ocredit = -1 - provide at least one special character o lcredit = -1 - provide at least one lowercase character.
sca.check.rationale: Strong passwords protect systems from being hacked through brute force methods.
sca.check.remediation: The following setting is a recommend example policy. Alter these values to conform to your own organization's password policies. Run the following command to install the pam_pwquality module: # apt install libpam-pwquality Edit the file /etc/security/pwquality.conf and add or modify the following line for password length to conform to site policy: minlen = 14 Edit the file /etc/security/pwquality.conf and add or modify the following line for password complexity to conform to site policy: Option 1 minclass = 4 Option 2 dcredit = -1 ucredit = -1 ocredit = -1 lcredit = -1 Edit the /etc/pam.d/common-password file to include pam_pwquality.so and to conform to site policy: password requisite pam_pwquality.so retry=3.
sca.check.compliance.cis: 4.4.1
sca.check.compliance.cis_csc_v8: 5.2
sca.check.compliance.cis_csc_v7: 4.4
sca.check.compliance.cmmc_v2.0: IA.L2-3.5.7
sca.check.compliance.iso_27001-2013: A.9.4.3
sca.check.compliance.mitre_mitigations: M1027
sca.check.compliance.mitre_tactics: TA0006
sca.check.compliance.mitre_techniques: T1078,T1078.001,T1078.002,T1078.003,T1078.004,T1110,T1110.001,T1110.002,T1110.003
sca.check.compliance.pci_dss_v4.0: 2.2.2,8.3.5,8.3.6,8.6.3
sca.check.compliance.soc_2: CC6.1
sca.check.file: ["/etc/security/pwquality.conf", "/etc/pam.d/common-password"]
sca.check.result: failed

** Alert 1706006477.531027: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure lockout for failed password attempts is configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19138,"title":"Ensure lockout for failed password attempts is configured.","description":"Lock out users after n unsuccessful consecutive login attempts. The first sets of changes are made to the PAM configuration files. The second set of changes are applied to the program specific PAM configuration file. The second set of changes must be applied to each program that will lock out users. Check the documentation for each secondary program for instructions on how to configure them to work with PAM. - deny=n - n represents the number of failed attempts before the account is locked - unlock_time=n - n represents the number of seconds before the account is unlocked - audit - Will log the user name into the system log if the user is not found. - silent - Don't print informative messages. Set the lockout number and unlock time in accordance with local site policy.","rationale":"Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute force password attacks against your systems.","remediation":"Edit the /etc/pam.d/common-auth file and add the auth line below: auth required pam_tally2.so onerr=fail audit silent deny=5 unlock_time=900 Edit the /etc/pam.d/common-account file and add the account lines bellow: account requisite pam_deny.so account required pam_tally2.so.","compliance":{"cis":"4.4.2","cis_csc_v7":"16.7","iso_27001-2013":"A.9.2.6","mitre_mitigations":"M1027","mitre_tactics":"TA0006","mitre_techniques":"T1110,T1110.001,T1110.003"},"rules":["f:/etc/pam.d/common-auth -> !r:^# && r:auth\\s*\\t*required\\s*\\t*pam_tally2.so && r:onerr=fail && r:audit && r:silent && r:deny\\s*=\\s*\\d+ && r:unlock_time\\s*=\\s*\\d+","f:/etc/pam.d/common-auth -> n:deny\\s*=\\s*(\\d+) compare <=5","f:/etc/pam.d/common-account -> !r:^# && r:account\\s*\\t*requisite\\s*\\t*pam_deny.so","f:/etc/pam.d/common-account -> !r:^# && r:account\\s*\\t*required\\s*\\t*pam_tally2.so"],"condition":"all","file":"/etc/pam.d/common-auth","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19138
sca.check.title: Ensure lockout for failed password attempts is configured.
sca.check.description: Lock out users after n unsuccessful consecutive login attempts. The first sets of changes are made to the PAM configuration files. The second set of changes are applied to the program specific PAM configuration file. The second set of changes must be applied to each program that will lock out users. Check the documentation for each secondary program for instructions on how to configure them to work with PAM. - deny=n - n represents the number of failed attempts before the account is locked - unlock_time=n - n represents the number of seconds before the account is unlocked - audit - Will log the user name into the system log if the user is not found. - silent - Don't print informative messages. Set the lockout number and unlock time in accordance with local site policy.
sca.check.rationale: Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute force password attacks against your systems.
sca.check.remediation: Edit the /etc/pam.d/common-auth file and add the auth line below: auth required pam_tally2.so onerr=fail audit silent deny=5 unlock_time=900 Edit the /etc/pam.d/common-account file and add the account lines bellow: account requisite pam_deny.so account required pam_tally2.so.
sca.check.compliance.cis: 4.4.2
sca.check.compliance.cis_csc_v7: 16.7
sca.check.compliance.iso_27001-2013: A.9.2.6
sca.check.compliance.mitre_mitigations: M1027
sca.check.compliance.mitre_tactics: TA0006
sca.check.compliance.mitre_techniques: T1110,T1110.001,T1110.003
sca.check.file: ["/etc/pam.d/common-auth"]
sca.check.result: failed

** Alert 1706006477.535184: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure password reuse is limited.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19139,"title":"Ensure password reuse is limited.","description":"The /etc/security/opasswd file stores the users' old passwords and can be checked to ensure that users are not recycling recent passwords.","rationale":"Forcing users not to reuse their past 5 passwords make it less likely that an attacker will be able to guess the password.","remediation":"NOTE: Pay special attention to the configuration. Incorrect configuration can cause system lock outs or unexpected behavior. This is example configuration. You configuration may differ based on previous changes to the files. Edit the /etc/pam.d/common-password file to include: - password required pam_pwhistory.so remember=5 - use_authtok on the pam_unix.so line Example: password required pam_pwhistory.so remember=5 password [success=1 default=ignore] pam_unix.so obscure sha512 use_authtok.","compliance":{"cis":"4.4.3","cis_csc_v8":"5.2","cis_csc_v7":"4.4","cmmc_v2.0":"IA.L2-3.5.7","iso_27001-2013":"A.9.4.3","mitre_mitigations":"M1028","mitre_tactics":"TA0005","mitre_techniques":"T1078,T1078.001,T1078.002,T1078.003,T1078.004,T1110,T1110.004","pci_dss_v4.0":"2.2.2,8.3.5,8.3.6,8.6.3","soc_2":"CC6.1"},"rules":["f:/etc/pam.d/common-password -> !r:^# && r:password\\s*\\t*required\\s*\\t*pam_pwhistory.so && n:remember\\s*\\t*=\\s*\\t*(\\d+) compare => 5","f:/etc/pam.d/common-password -> !r:^# && r:password && r:success && r:default\\s*=\\s*ignore && r:pam_unix.so && r:use_authtok"],"condition":"all","references":"https://manpages.ubuntu.com/manpages/focal/man8/pam_pwhistory.8.html,https://bugs.launchpad.net/ubuntu/+source/pam/+bug/1989731","file":"/etc/pam.d/common-password","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19139
sca.check.title: Ensure password reuse is limited.
sca.check.description: The /etc/security/opasswd file stores the users' old passwords and can be checked to ensure that users are not recycling recent passwords.
sca.check.rationale: Forcing users not to reuse their past 5 passwords make it less likely that an attacker will be able to guess the password.
sca.check.remediation: NOTE: Pay special attention to the configuration. Incorrect configuration can cause system lock outs or unexpected behavior. This is example configuration. You configuration may differ based on previous changes to the files. Edit the /etc/pam.d/common-password file to include: - password required pam_pwhistory.so remember=5 - use_authtok on the pam_unix.so line Example: password required pam_pwhistory.so remember=5 password [success=1 default=ignore] pam_unix.so obscure sha512 use_authtok.
sca.check.compliance.cis: 4.4.3
sca.check.compliance.cis_csc_v8: 5.2
sca.check.compliance.cis_csc_v7: 4.4
sca.check.compliance.cmmc_v2.0: IA.L2-3.5.7
sca.check.compliance.iso_27001-2013: A.9.4.3
sca.check.compliance.mitre_mitigations: M1028
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1078,T1078.001,T1078.002,T1078.003,T1078.004,T1110,T1110.004
sca.check.compliance.pci_dss_v4.0: 2.2.2,8.3.5,8.3.6,8.6.3
sca.check.compliance.soc_2: CC6.1
sca.check.references: https://manpages.ubuntu.com/manpages/focal/man8/pam_pwhistory.8.html,https://bugs.launchpad.net/ubuntu/+source/pam/+bug/1989731
sca.check.file: ["/etc/pam.d/common-password"]
sca.check.result: failed

** Alert 1706006477.538910: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure strong password hashing algorithm is configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19140,"title":"Ensure strong password hashing algorithm is configured.","description":"Hash functions behave as one-way functions by using mathematical operations that are extremely difficult and cumbersome to revert When a user is created, the password is run through a one-way hashing algorithm before being stored. When the user logs in, the password sent is run through the same one-way hashing algorithm and compared to the hash connected with the provided username. If the hashed password and the stored hash match, the login is valid.","rationale":"The SHA512 hashing algorithm provides stronger hashing than previous available algorithms like MD5, thus providing additional protection to the system by increasing the level of effort for an attacker to successfully determine passwords.","remediation":"Note: - Pay special attention to the configuration. Incorrect configuration can cause system lock outs. - This is an example configuration. Your configuration may differ based on previous changes to the files. - The encryption method on the password success line for pam_unix.so and the ENCRYPT_METHOD line in /etc/login.defs should match. Edit the /etc/pam.d/common-password file and ensure that sha512 is included and the pam_unix.so success line: Example: password [success=1 default=ignore] pam_unix.so obscure sha512 use_authtok Edit /etc/login.defs and ensure that ENCRYPT_METHOD is set to SHA512. ENCRYPT_METHOD SHA512.","compliance":{"cis":"4.4.4","cis_csc_v8":"3.11","cis_csc_v7":"16.4","cmmc_v2.0":"AC.L2-3.1.19,IA.L2-3.5.10,MP.L2-3.8.1,SC.L2-3.13.11,SC.L2-3.13.16","hipaa":"164.312(a)(2)(iv),164.312(e)(2)(ii)","iso_27001-2013":"A.10.1.1","mitre_mitigations":"M1041","mitre_tactics":"TA0006","mitre_techniques":"T1003,T1003.008,T1110,T1110.002","nist_sp_800-53":"SC-28,SC-28(1)","pci_dss_v3.2.1":"3.4,3.4.1,8.2.1","pci_dss_v4.0":"3.1.1,3.3.2,3.3.3,3.5.1,3.5.1.2,3.5.1.3,8.3.2","soc_2":"CC6.1"},"rules":["f:/etc/pam.d/common-password -> !r:^# && r:password && r:pam_unix.so && r:sha512"],"condition":"all","file":"/etc/pam.d/common-password","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19140
sca.check.title: Ensure strong password hashing algorithm is configured.
sca.check.description: Hash functions behave as one-way functions by using mathematical operations that are extremely difficult and cumbersome to revert When a user is created, the password is run through a one-way hashing algorithm before being stored. When the user logs in, the password sent is run through the same one-way hashing algorithm and compared to the hash connected with the provided username. If the hashed password and the stored hash match, the login is valid.
sca.check.rationale: The SHA512 hashing algorithm provides stronger hashing than previous available algorithms like MD5, thus providing additional protection to the system by increasing the level of effort for an attacker to successfully determine passwords.
sca.check.remediation: Note: - Pay special attention to the configuration. Incorrect configuration can cause system lock outs. - This is an example configuration. Your configuration may differ based on previous changes to the files. - The encryption method on the password success line for pam_unix.so and the ENCRYPT_METHOD line in /etc/login.defs should match. Edit the /etc/pam.d/common-password file and ensure that sha512 is included and the pam_unix.so success line: Example: password [success=1 default=ignore] pam_unix.so obscure sha512 use_authtok Edit /etc/login.defs and ensure that ENCRYPT_METHOD is set to SHA512. ENCRYPT_METHOD SHA512.
sca.check.compliance.cis: 4.4.4
sca.check.compliance.cis_csc_v8: 3.11
sca.check.compliance.cis_csc_v7: 16.4
sca.check.compliance.cmmc_v2.0: AC.L2-3.1.19,IA.L2-3.5.10,MP.L2-3.8.1,SC.L2-3.13.11,SC.L2-3.13.16
sca.check.compliance.hipaa: 164.312(a)(2)(iv),164.312(e)(2)(ii)
sca.check.compliance.iso_27001-2013: A.10.1.1
sca.check.compliance.mitre_mitigations: M1041
sca.check.compliance.mitre_tactics: TA0006
sca.check.compliance.mitre_techniques: T1003,T1003.008,T1110,T1110.002
sca.check.compliance.nist_sp_800-53: SC-28,SC-28(1)
sca.check.compliance.pci_dss_v3.2.1: 3.4,3.4.1,8.2.1
sca.check.compliance.pci_dss_v4.0: 3.1.1,3.3.2,3.3.3,3.5.1,3.5.1.2,3.5.1.3,8.3.2
sca.check.compliance.soc_2: CC6.1
sca.check.file: ["/etc/pam.d/common-password"]
sca.check.result: passed

** Alert 1706006477.543727: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure minimum days between password changes is configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19141,"title":"Ensure minimum days between password changes is configured.","description":"The PASS_MIN_DAYS parameter in /etc/login.defs allows an administrator to prevent users from changing their password until a minimum number of days have passed since the last time the user changed their password. It is recommended that PASS_MIN_DAYS parameter be set to 1 or more days.","rationale":"By restricting the frequency of password changes, an administrator can prevent users from repeatedly changing their password in an attempt to circumvent password reuse controls.","remediation":"Set the PASS_MIN_DAYS parameter to 1 in /etc/login.defs: PASS_MIN_DAYS 1 Modify user parameters for all users with a password set to match: # chage --mindays 1 <user>.","compliance":{"cis":"4.5.1.1","cis_csc_v8":"5.2","cis_csc_v7":"4.4","cmmc_v2.0":"IA.L2-3.5.7","iso_27001-2013":"A.9.4.3","mitre_mitigations":"M1027","mitre_tactics":"TA0006","mitre_techniques":"T1078,T1078.001,T1078.002,T1078.003,T1078.004,T1110,T1110.001,T1110.002,T1110.003,T1110.004","pci_dss_v4.0":"2.2.2,8.3.5,8.3.6,8.6.3","soc_2":"CC6.1"},"rules":["f:/etc/login.defs -> n:^\\s*\\t*PASS_MIN_DAYS\\s*\\t*(\\d+) compare >= 1","not f:/etc/shadow -> !r:^\\w+:\\p: && n:^\\w+:\\S*:\\d*:(\\d+) compare < 1"],"condition":"all","file":"/etc/login.defs","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19141
sca.check.title: Ensure minimum days between password changes is configured.
sca.check.description: The PASS_MIN_DAYS parameter in /etc/login.defs allows an administrator to prevent users from changing their password until a minimum number of days have passed since the last time the user changed their password. It is recommended that PASS_MIN_DAYS parameter be set to 1 or more days.
sca.check.rationale: By restricting the frequency of password changes, an administrator can prevent users from repeatedly changing their password in an attempt to circumvent password reuse controls.
sca.check.remediation: Set the PASS_MIN_DAYS parameter to 1 in /etc/login.defs: PASS_MIN_DAYS 1 Modify user parameters for all users with a password set to match: # chage --mindays 1 <user>.
sca.check.compliance.cis: 4.5.1.1
sca.check.compliance.cis_csc_v8: 5.2
sca.check.compliance.cis_csc_v7: 4.4
sca.check.compliance.cmmc_v2.0: IA.L2-3.5.7
sca.check.compliance.iso_27001-2013: A.9.4.3
sca.check.compliance.mitre_mitigations: M1027
sca.check.compliance.mitre_tactics: TA0006
sca.check.compliance.mitre_techniques: T1078,T1078.001,T1078.002,T1078.003,T1078.004,T1110,T1110.001,T1110.002,T1110.003,T1110.004
sca.check.compliance.pci_dss_v4.0: 2.2.2,8.3.5,8.3.6,8.6.3
sca.check.compliance.soc_2: CC6.1
sca.check.file: ["/etc/login.defs"]
sca.check.result: failed

** Alert 1706006477.546909: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure password expiration is 365 days or less.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19142,"title":"Ensure password expiration is 365 days or less.","description":"The PASS_MAX_DAYS parameter in /etc/login.defs allows an administrator to force passwords to expire once they reach a defined age.","rationale":"The window of opportunity for an attacker to leverage compromised credentials or successfully compromise credentials via an online brute force attack is limited by the age of the password. Therefore, reducing the maximum age of a password also reduces an attacker's window of opportunity. It is recommended that the PASS_MAX_DAYS parameter does not exceed 365 days and is greater than the value of PASS_MIN_DAYS.","remediation":"Set the PASS_MAX_DAYS parameter to conform to site policy in /etc/login.defs : PASS_MAX_DAYS 365 Modify user parameters for all users with a password set to match: # chage --maxdays 365 <user>.","compliance":{"cis":"4.5.1.2","cis_csc_v8":"5.2","cis_csc_v7":"4.4","cmmc_v2.0":"IA.L2-3.5.7","iso_27001-2013":"A.9.4.3","mitre_mitigations":"M1027","mitre_tactics":"TA0006","mitre_techniques":"T1078,T1078.001,T1078.002,T1078.003,T1078.004,T1110,T1110.001,T1110.002,T1110.003,T1110.004","pci_dss_v4.0":"2.2.2,8.3.5,8.3.6,8.6.3","soc_2":"CC6.1"},"rules":["f:/etc/login.defs -> n:^\\s*\\t*PASS_MAX_DAYS\\s*\\t*(\\d+) compare <= 365","f:/etc/login.defs -> n:^\\s*\\t*PASS_MAX_DAYS\\s*\\t*(\\d+) compare > 0","not f:/etc/shadow -> !r:^\\w+:\\p: && n:^\\w+:\\S*:\\d*:\\d*:(\\d+) compare > 365"],"condition":"all","references":"https://www.cisecurity.org/white-papers/cis-password-policy-guide/","file":"/etc/login.defs","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19142
sca.check.title: Ensure password expiration is 365 days or less.
sca.check.description: The PASS_MAX_DAYS parameter in /etc/login.defs allows an administrator to force passwords to expire once they reach a defined age.
sca.check.rationale: The window of opportunity for an attacker to leverage compromised credentials or successfully compromise credentials via an online brute force attack is limited by the age of the password. Therefore, reducing the maximum age of a password also reduces an attacker's window of opportunity. It is recommended that the PASS_MAX_DAYS parameter does not exceed 365 days and is greater than the value of PASS_MIN_DAYS.
sca.check.remediation: Set the PASS_MAX_DAYS parameter to conform to site policy in /etc/login.defs : PASS_MAX_DAYS 365 Modify user parameters for all users with a password set to match: # chage --maxdays 365 <user>.
sca.check.compliance.cis: 4.5.1.2
sca.check.compliance.cis_csc_v8: 5.2
sca.check.compliance.cis_csc_v7: 4.4
sca.check.compliance.cmmc_v2.0: IA.L2-3.5.7
sca.check.compliance.iso_27001-2013: A.9.4.3
sca.check.compliance.mitre_mitigations: M1027
sca.check.compliance.mitre_tactics: TA0006
sca.check.compliance.mitre_techniques: T1078,T1078.001,T1078.002,T1078.003,T1078.004,T1110,T1110.001,T1110.002,T1110.003,T1110.004
sca.check.compliance.pci_dss_v4.0: 2.2.2,8.3.5,8.3.6,8.6.3
sca.check.compliance.soc_2: CC6.1
sca.check.references: https://www.cisecurity.org/white-papers/cis-password-policy-guide/
sca.check.file: ["/etc/login.defs"]
sca.check.result: failed

** Alert 1706006477.550521: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure password expiration warning days is 7 or more.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19143,"title":"Ensure password expiration warning days is 7 or more.","description":"The PASS_WARN_AGE parameter in /etc/login.defs allows an administrator to notify users that their password will expire in a defined number of days. It is recommended that the PASS_WARN_AGE parameter be set to 7 or more days.","rationale":"Providing an advance warning that a password will be expiring gives users time to think of a secure password. Users caught unaware may choose a simple password or write it down where it may be discovered.","remediation":"Set the PASS_WARN_AGE parameter to 7 in /etc/login.defs: PASS_WARN_AGE 7 Modify user parameters for all users with a password set to match: # chage --warndays 7 <user>.","compliance":{"cis":"4.5.1.3","cis_csc_v8":"5.2","cis_csc_v7":"4.4","cmmc_v2.0":"IA.L2-3.5.7","iso_27001-2013":"A.9.4.3","mitre_mitigations":"M1027","mitre_tactics":"TA0006","mitre_techniques":"T1078,T1078.001,T1078.002,T1078.003,T1078.004,T1110,T1110.001,T1110.002,T1110.003,T1110.004","pci_dss_v4.0":"2.2.2,8.3.5,8.3.6,8.6.3","soc_2":"CC6.1"},"rules":["f:/etc/login.defs -> n:^\\s*\\t*PASS_WARN_AGE\\s*\\t*(\\d+) compare >= 7","not f:/etc/shadow -> !r:^\\w+:\\p: && n:^\\w+:\\S*:\\d*:\\d*:\\d*:(\\d+) compare < 7"],"condition":"all","file":"/etc/login.defs,/etc/shadow","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19143
sca.check.title: Ensure password expiration warning days is 7 or more.
sca.check.description: The PASS_WARN_AGE parameter in /etc/login.defs allows an administrator to notify users that their password will expire in a defined number of days. It is recommended that the PASS_WARN_AGE parameter be set to 7 or more days.
sca.check.rationale: Providing an advance warning that a password will be expiring gives users time to think of a secure password. Users caught unaware may choose a simple password or write it down where it may be discovered.
sca.check.remediation: Set the PASS_WARN_AGE parameter to 7 in /etc/login.defs: PASS_WARN_AGE 7 Modify user parameters for all users with a password set to match: # chage --warndays 7 <user>.
sca.check.compliance.cis: 4.5.1.3
sca.check.compliance.cis_csc_v8: 5.2
sca.check.compliance.cis_csc_v7: 4.4
sca.check.compliance.cmmc_v2.0: IA.L2-3.5.7
sca.check.compliance.iso_27001-2013: A.9.4.3
sca.check.compliance.mitre_mitigations: M1027
sca.check.compliance.mitre_tactics: TA0006
sca.check.compliance.mitre_techniques: T1078,T1078.001,T1078.002,T1078.003,T1078.004,T1110,T1110.001,T1110.002,T1110.003,T1110.004
sca.check.compliance.pci_dss_v4.0: 2.2.2,8.3.5,8.3.6,8.6.3
sca.check.compliance.soc_2: CC6.1
sca.check.file: ["/etc/login.defs", "/etc/shadow"]
sca.check.result: passed

** Alert 1706006477.553656: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure inactive password lock is 30 days or less.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19144,"title":"Ensure inactive password lock is 30 days or less.","description":"User accounts that have been inactive for over a given period of time can be automatically disabled. It is recommended that accounts that are inactive for 30 days after password expiration be disabled.","rationale":"Inactive accounts pose a threat to system security since the users are not logging in to notice failed login attempts or other anomalies.","remediation":"Run the following command to set the default password inactivity period to 30 days: # useradd -D -f 30 Modify user parameters for all users with a password set to match: # chage --inactive 30 <user>.","compliance":{"cis":"4.5.1.4","cis_csc_v8":"5.2","cis_csc_v7":"4.4","cmmc_v2.0":"IA.L2-3.5.7","iso_27001-2013":"A.9.4.3","mitre_mitigations":"M1027","mitre_tactics":"TA0001","mitre_techniques":"T1078,T1078.002,T1078.003","pci_dss_v4.0":"2.2.2,8.3.5,8.3.6,8.6.3","soc_2":"CC6.1"},"rules":["c:useradd -D -> n:^INACTIVE=(\\d+) compare <= 30","not c:useradd -D -> n:^INACTIVE=(\\d+) compare < 0","not f:/etc/shadow -> !r:^\\w+:\\p: && n:^\\w+:\\S*:\\d*:\\d*:\\d*:\\d+:(\\d+) compare > 30"],"condition":"all","command":"useradd -D","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19144
sca.check.title: Ensure inactive password lock is 30 days or less.
sca.check.description: User accounts that have been inactive for over a given period of time can be automatically disabled. It is recommended that accounts that are inactive for 30 days after password expiration be disabled.
sca.check.rationale: Inactive accounts pose a threat to system security since the users are not logging in to notice failed login attempts or other anomalies.
sca.check.remediation: Run the following command to set the default password inactivity period to 30 days: # useradd -D -f 30 Modify user parameters for all users with a password set to match: # chage --inactive 30 <user>.
sca.check.compliance.cis: 4.5.1.4
sca.check.compliance.cis_csc_v8: 5.2
sca.check.compliance.cis_csc_v7: 4.4
sca.check.compliance.cmmc_v2.0: IA.L2-3.5.7
sca.check.compliance.iso_27001-2013: A.9.4.3
sca.check.compliance.mitre_mitigations: M1027
sca.check.compliance.mitre_tactics: TA0001
sca.check.compliance.mitre_techniques: T1078,T1078.002,T1078.003
sca.check.compliance.pci_dss_v4.0: 2.2.2,8.3.5,8.3.6,8.6.3
sca.check.compliance.soc_2: CC6.1
sca.check.command: ["useradd -D"]
sca.check.result: failed

** Alert 1706006477.556533: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure the number of changed characters in a new password is configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19145,"title":"Ensure the number of changed characters in a new password is configured.","description":"The pwquality difok option sets the number of characters in a password that must not be present in the old password.","rationale":"Use of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks. Password complexity is one factor of several that determines how long it takes to crack a password. The more complex the password, the greater the number of possible combinations that need to be tested before the password is compromised.","remediation":"Edit or add the following line in /etc/security/pwquality.conf to a value of 2 or more: difok = 2.","compliance":{"cis":"4.5.1.6","cis_csc_v8":"5.2","cis_csc_v7":"4.4","cmmc_v2.0":"IA.L2-3.5.7","iso_27001-2013":"A.9.4.3","pci_dss_v4.0":"2.2.2,8.3.5,8.3.6,8.6.3","soc_2":"CC6.1"},"rules":["f:/etc/security/pwquality.conf -> !r:^# && n:difok\\s*\\t*=\\s*\\t*(\\d+) compare => 2"],"condition":"all","file":"/etc/security/pwquality.conf","status":"Not applicable","reason":"Could not open file '/etc/security/pwquality.conf'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19145
sca.check.title: Ensure the number of changed characters in a new password is configured.
sca.check.description: The pwquality difok option sets the number of characters in a password that must not be present in the old password.
sca.check.rationale: Use of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks. Password complexity is one factor of several that determines how long it takes to crack a password. The more complex the password, the greater the number of possible combinations that need to be tested before the password is compromised.
sca.check.remediation: Edit or add the following line in /etc/security/pwquality.conf to a value of 2 or more: difok = 2.
sca.check.compliance.cis: 4.5.1.6
sca.check.compliance.cis_csc_v8: 5.2
sca.check.compliance.cis_csc_v7: 4.4
sca.check.compliance.cmmc_v2.0: IA.L2-3.5.7
sca.check.compliance.iso_27001-2013: A.9.4.3
sca.check.compliance.pci_dss_v4.0: 2.2.2,8.3.5,8.3.6,8.6.3
sca.check.compliance.soc_2: CC6.1
sca.check.file: ["/etc/security/pwquality.conf"]
sca.check.result: not applicable
sca.check.reason: Could not open file '/etc/security/pwquality.conf'

** Alert 1706006477.559612: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure preventing the use of dictionary words for passwords is configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19146,"title":"Ensure preventing the use of dictionary words for passwords is configured.","description":"The pwquality dictcheck option sets whether to check for the words from the cracklib dictionary.","rationale":"If the operating system allows the user to select passwords based on dictionary words, this increases the chances of password compromise by increasing the opportunity for successful guesses, and brute-force attacks.","remediation":"Edit or add the following line in /etc/security/pwquality.conf to a value of 1: dictcheck = 1.","compliance":{"cis":"4.5.1.7","cis_csc_v8":"5.2","cis_csc_v7":"4.4","cmmc_v2.0":"IA.L2-3.5.7","iso_27001-2013":"A.9.4.3","pci_dss_v4.0":"2.2.2,8.3.5,8.3.6,8.6.3","soc_2":"CC6.1"},"rules":["f:/etc/security/pwquality.conf -> !r:^# && n:dictcheck\\s*\\t*=\\s*\\t*(\\d+) compare = 1"],"condition":"all","file":"/etc/security/pwquality.conf","status":"Not applicable","reason":"Could not open file '/etc/security/pwquality.conf'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19146
sca.check.title: Ensure preventing the use of dictionary words for passwords is configured.
sca.check.description: The pwquality dictcheck option sets whether to check for the words from the cracklib dictionary.
sca.check.rationale: If the operating system allows the user to select passwords based on dictionary words, this increases the chances of password compromise by increasing the opportunity for successful guesses, and brute-force attacks.
sca.check.remediation: Edit or add the following line in /etc/security/pwquality.conf to a value of 1: dictcheck = 1.
sca.check.compliance.cis: 4.5.1.7
sca.check.compliance.cis_csc_v8: 5.2
sca.check.compliance.cis_csc_v7: 4.4
sca.check.compliance.cmmc_v2.0: IA.L2-3.5.7
sca.check.compliance.iso_27001-2013: A.9.4.3
sca.check.compliance.pci_dss_v4.0: 2.2.2,8.3.5,8.3.6,8.6.3
sca.check.compliance.soc_2: CC6.1
sca.check.file: ["/etc/security/pwquality.conf"]
sca.check.result: not applicable
sca.check.reason: Could not open file '/etc/security/pwquality.conf'

** Alert 1706006477.562118: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure default group for the root account is GID 0.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19147,"title":"Ensure default group for the root account is GID 0.","description":"The usermod command can be used to specify which group the root user belongs to. This affects permissions of files that are created by the root user.","rationale":"Using GID 0 for the root account helps prevent root -owned files from accidentally becoming accessible to non-privileged users.","remediation":"Run the following command to set the root user default group to GID 0 : # usermod -g 0 root.","compliance":{"cis":"4.5.3","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1026","mitre_tactics":"TA0005","mitre_techniques":"T1548","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["f:/etc/passwd -> !r:^# && r:root:\\w+:\\w+:0:"],"condition":"all","file":"/etc/passwd","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19147
sca.check.title: Ensure default group for the root account is GID 0.
sca.check.description: The usermod command can be used to specify which group the root user belongs to. This affects permissions of files that are created by the root user.
sca.check.rationale: Using GID 0 for the root account helps prevent root -owned files from accidentally becoming accessible to non-privileged users.
sca.check.remediation: Run the following command to set the root user default group to GID 0 : # usermod -g 0 root.
sca.check.compliance.cis: 4.5.3
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1026
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1548
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.file: ["/etc/passwd"]
sca.check.result: passed

** Alert 1706006477.564866: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure nologin is not listed in /etc/shells.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19148,"title":"Ensure nologin is not listed in /etc/shells.","description":"/etc/shells is a text file which contains the full pathnames of valid login shells. This file is consulted by chsh and available to be queried by other programs. Be aware that there are programs which consult this file to find out if a user is a normal user; for example, FTP daemons traditionally disallow access to users with shells not included in this file.","rationale":"A user can use chsh to change their configured shell. If a user has a shell configured that isn't in in /etc/shells, then the system assumes that they're somehow restricted. In the case of chsh it means that the user cannot change that value. Other programs might query that list and apply similar restrictions. By putting nologin in /etc/shells, any user that has nologin as its shell is considered a full, unrestricted user. This is not the expected behavior for nologin.","remediation":"Edit /etc/shells and remove any lines that include nologin.","compliance":{"cis":"4.5.6"},"rules":["not f:/etc/shells -> !r:^# && r:nologins"],"condition":"all","file":"/etc/shells","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19148
sca.check.title: Ensure nologin is not listed in /etc/shells.
sca.check.description: /etc/shells is a text file which contains the full pathnames of valid login shells. This file is consulted by chsh and available to be queried by other programs. Be aware that there are programs which consult this file to find out if a user is a normal user; for example, FTP daemons traditionally disallow access to users with shells not included in this file.
sca.check.rationale: A user can use chsh to change their configured shell. If a user has a shell configured that isn't in in /etc/shells, then the system assumes that they're somehow restricted. In the case of chsh it means that the user cannot change that value. Other programs might query that list and apply similar restrictions. By putting nologin in /etc/shells, any user that has nologin as its shell is considered a full, unrestricted user. This is not the expected behavior for nologin.
sca.check.remediation: Edit /etc/shells and remove any lines that include nologin.
sca.check.compliance.cis: 4.5.6
sca.check.file: ["/etc/shells"]
sca.check.result: passed

** Alert 1706006477.567620: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure maximum number of same consecutive characters in a password is configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19149,"title":"Ensure maximum number of same consecutive characters in a password is configured.","description":"The pwquality maxrepeat option sets the maximum number of allowed same consecutive characters in a new password.","rationale":"Use of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks. Password complexity is one factor of several that determines how long it takes to crack a password. The more complex the password, the greater the number of possible combinations that need to be tested before the password is compromised.","remediation":"Edit or add the following line in /etc/security/pwquality.conf to a value of 3 or less and not 0: maxrepeat = 3.","compliance":{"cis":"4.5.7","cis_csc_v8":"5.2","cis_csc_v7":"4.4","cmmc_v2.0":"IA.L2-3.5.7","iso_27001-2013":"A.9.4.3","pci_dss_v4.0":"2.2.2,8.3.5,8.3.6,8.6.3","soc_2":"CC6.1"},"rules":["f:/etc/security/pwquality.conf -> !r:^# && n:maxrepeat\\s*\\t*=\\s*\\t*(\\d+) compare <=3","not f:/etc/security/pwquality.conf -> !r:^# && n:maxrepeat\\s*\\t*=\\s*\\t*(\\d+) compare =0"],"condition":"all","file":"/etc/security/pwquality.conf","status":"Not applicable","reason":"Could not open file '/etc/security/pwquality.conf'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19149
sca.check.title: Ensure maximum number of same consecutive characters in a password is configured.
sca.check.description: The pwquality maxrepeat option sets the maximum number of allowed same consecutive characters in a new password.
sca.check.rationale: Use of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks. Password complexity is one factor of several that determines how long it takes to crack a password. The more complex the password, the greater the number of possible combinations that need to be tested before the password is compromised.
sca.check.remediation: Edit or add the following line in /etc/security/pwquality.conf to a value of 3 or less and not 0: maxrepeat = 3.
sca.check.compliance.cis: 4.5.7
sca.check.compliance.cis_csc_v8: 5.2
sca.check.compliance.cis_csc_v7: 4.4
sca.check.compliance.cmmc_v2.0: IA.L2-3.5.7
sca.check.compliance.iso_27001-2013: A.9.4.3
sca.check.compliance.pci_dss_v4.0: 2.2.2,8.3.5,8.3.6,8.6.3
sca.check.compliance.soc_2: CC6.1
sca.check.file: ["/etc/security/pwquality.conf"]
sca.check.result: not applicable
sca.check.reason: Could not open file '/etc/security/pwquality.conf'

** Alert 1706006477.570840: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure systemd-journal-remote is installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19150,"title":"Ensure systemd-journal-remote is installed.","description":"Journald (via systemd-journal-remote) supports the ability to send log events it gathers to a remote log host or to receive messages from remote hosts, thus enabling centralised log management.","rationale":"Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system.","remediation":"Run the following command to install systemd-journal-remote: # apt install systemd-journal-remote.","compliance":{"cis":"5.1.1.1.1","cis_csc_v8":"8.2","cis_csc_v7":"6.2,6.3","cmmc_v2.0":"AU.L2-3.3.1","hipaa":"164.312(b)","iso_27001-2013":"A.12.4.1","mitre_mitigations":"M1029","mitre_tactics":"TA0040","mitre_techniques":"T1070,T1070.002,T1562,T1562.006","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"10.2,10.3","pci_dss_v4.0":"10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2"},"rules":["c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' systemd-journal-remote -> r:install ok installed"],"condition":"all","command":"dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' systemd-journal-remote","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19150
sca.check.title: Ensure systemd-journal-remote is installed.
sca.check.description: Journald (via systemd-journal-remote) supports the ability to send log events it gathers to a remote log host or to receive messages from remote hosts, thus enabling centralised log management.
sca.check.rationale: Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system.
sca.check.remediation: Run the following command to install systemd-journal-remote: # apt install systemd-journal-remote.
sca.check.compliance.cis: 5.1.1.1.1
sca.check.compliance.cis_csc_v8: 8.2
sca.check.compliance.cis_csc_v7: 6.2,6.3
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.hipaa: 164.312(b)
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_mitigations: M1029
sca.check.compliance.mitre_tactics: TA0040
sca.check.compliance.mitre_techniques: T1070,T1070.002,T1562,T1562.006
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.2,10.3
sca.check.compliance.pci_dss_v4.0: 10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2
sca.check.command: ["dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' systemd-journal-remote"]
sca.check.result: failed

** Alert 1706006477.574045: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure systemd-journal-remote is configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19151,"title":"Ensure systemd-journal-remote is configured.","description":"Journald (via systemd-journal-remote) supports the ability to send log events it gathers to a remote log host or to receive messages from remote hosts, thus enabling centralised log management.","rationale":"Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system.","remediation":"Edit the /etc/systemd/journal-upload.conf file and ensure the following lines are set per your environment: URL=192.168.50.42 ServerKeyFile=/etc/ssl/private/journal-upload.pem ServerCertificateFile=/etc/ssl/certs/journal-upload.pem TrustedCertificateFile=/etc/ssl/ca/trusted.pem Restart the service: # systemctl restart systemd-journal-upload.","compliance":{"cis":"5.1.1.1.2","cis_csc_v8":"8.2","cis_csc_v7":"6.2,6.3","cmmc_v2.0":"AU.L2-3.3.1","hipaa":"164.312(b)","iso_27001-2013":"A.12.4.1","mitre_mitigations":"M1029","mitre_tactics":"TA0040","mitre_techniques":"T1070,T1070.002,T1562,T1562.006","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"10.2,10.3","pci_dss_v4.0":"10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2"},"rules":["f:/etc/systemd/journal-upload.conf -> r:URL=","f:/etc/systemd/journal-upload.conf -> r:ServerKeyFile=","f:/etc/systemd/journal-upload.conf -> r:ServerCertificateFile=","f:/etc/systemd/journal-upload.conf -> r:TrustedCertificateFile="],"condition":"all","file":"/etc/systemd/journal-upload.conf","status":"Not applicable","reason":"Could not open file '/etc/systemd/journal-upload.conf'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19151
sca.check.title: Ensure systemd-journal-remote is configured.
sca.check.description: Journald (via systemd-journal-remote) supports the ability to send log events it gathers to a remote log host or to receive messages from remote hosts, thus enabling centralised log management.
sca.check.rationale: Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system.
sca.check.remediation: Edit the /etc/systemd/journal-upload.conf file and ensure the following lines are set per your environment: URL=192.168.50.42 ServerKeyFile=/etc/ssl/private/journal-upload.pem ServerCertificateFile=/etc/ssl/certs/journal-upload.pem TrustedCertificateFile=/etc/ssl/ca/trusted.pem Restart the service: # systemctl restart systemd-journal-upload.
sca.check.compliance.cis: 5.1.1.1.2
sca.check.compliance.cis_csc_v8: 8.2
sca.check.compliance.cis_csc_v7: 6.2,6.3
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.hipaa: 164.312(b)
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_mitigations: M1029
sca.check.compliance.mitre_tactics: TA0040
sca.check.compliance.mitre_techniques: T1070,T1070.002,T1562,T1562.006
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.2,10.3
sca.check.compliance.pci_dss_v4.0: 10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2
sca.check.file: ["/etc/systemd/journal-upload.conf"]
sca.check.result: not applicable
sca.check.reason: Could not open file '/etc/systemd/journal-upload.conf'

** Alert 1706006477.577872: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure systemd-journal-remote is enabled.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19152,"title":"Ensure systemd-journal-remote is enabled.","description":"Journald (via systemd-journal-remote) supports the ability to send log events it gathers to a remote log host or to receive messages from remote hosts, thus enabling centralized log management.","rationale":"Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system.","remediation":"Run the following command to enable systemd-journal-remote: # systemctl --now enable systemd-journal-upload.service.","compliance":{"cis":"5.1.1.1.3","cis_csc_v8":"8.2","cis_csc_v7":"6.2,6.3","cmmc_v2.0":"AU.L2-3.3.1","hipaa":"164.312(b)","iso_27001-2013":"A.12.4.1","mitre_mitigations":"M1029","mitre_tactics":"TA0040","mitre_techniques":"T1070,T1070.002,T1562,T1562.006","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"10.2,10.3","pci_dss_v4.0":"10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2"},"rules":["c:systemctl is-enabled systemd-journal-upload.service -> r:^enabled"],"condition":"all","command":"systemctl is-enabled systemd-journal-upload.service","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'systemctl is-enabled systemd-journal-upload.service'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19152
sca.check.title: Ensure systemd-journal-remote is enabled.
sca.check.description: Journald (via systemd-journal-remote) supports the ability to send log events it gathers to a remote log host or to receive messages from remote hosts, thus enabling centralized log management.
sca.check.rationale: Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system.
sca.check.remediation: Run the following command to enable systemd-journal-remote: # systemctl --now enable systemd-journal-upload.service.
sca.check.compliance.cis: 5.1.1.1.3
sca.check.compliance.cis_csc_v8: 8.2
sca.check.compliance.cis_csc_v7: 6.2,6.3
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.hipaa: 164.312(b)
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_mitigations: M1029
sca.check.compliance.mitre_tactics: TA0040
sca.check.compliance.mitre_techniques: T1070,T1070.002,T1562,T1562.006
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.2,10.3
sca.check.compliance.pci_dss_v4.0: 10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2
sca.check.command: ["systemctl is-enabled systemd-journal-upload.service"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'systemctl is-enabled systemd-journal-upload.service'

** Alert 1706006477.581211: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure journald is not configured to receive logs from a remote client.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19153,"title":"Ensure journald is not configured to receive logs from a remote client.","description":"Journald supports the ability to receive messages from remote hosts, thus acting as a log server. Clients should not receive data from other hosts. Note: - The same package, systemd-journal-remote, is used for both sending logs to remote hosts and receiving incoming logs. - With regards to receiving logs, there are two services; systemd-journal- remote.socket and systemd-journal-remote.service.","rationale":"If a client is configured to also receive data, thus turning it into a server, the client system is acting outside it's operational boundary.","remediation":"Run the following command to disable systemd-journal-remote.socket: # systemctl --now disable systemd-journal-remote.socket.","compliance":{"cis":"5.1.1.1.4","cis_csc_v8":"4.8,8.2","cis_csc_v7":"6.2,6.3,9.2","cmmc_v2.0":"AU.L2-3.3.1,CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","hipaa":"164.312(b)","iso_27001-2013":"A.12.4.1,A.13.1.3","mitre_mitigations":"M1029","mitre_tactics":"TA0040","mitre_techniques":"T1070,T1070.002,T1562,T1562.006","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"1.1.6,1.2.1,10.2,10.3,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,2.2.4,5.3.4,6.4.1,6.4.2","soc_2":"CC6.3,CC6.6"},"rules":["c:systemctl is-enabled systemd-journal-remote.socket -> r:^disabled"],"condition":"all","command":"systemctl is-enabled systemd-journal-remote.socket","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'systemctl is-enabled systemd-journal-remote.socket'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19153
sca.check.title: Ensure journald is not configured to receive logs from a remote client.
sca.check.description: Journald supports the ability to receive messages from remote hosts, thus acting as a log server. Clients should not receive data from other hosts. Note: - The same package, systemd-journal-remote, is used for both sending logs to remote hosts and receiving incoming logs. - With regards to receiving logs, there are two services; systemd-journal- remote.socket and systemd-journal-remote.service.
sca.check.rationale: If a client is configured to also receive data, thus turning it into a server, the client system is acting outside it's operational boundary.
sca.check.remediation: Run the following command to disable systemd-journal-remote.socket: # systemctl --now disable systemd-journal-remote.socket.
sca.check.compliance.cis: 5.1.1.1.4
sca.check.compliance.cis_csc_v8: 4.8,8.2
sca.check.compliance.cis_csc_v7: 6.2,6.3,9.2
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1,CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.hipaa: 164.312(b)
sca.check.compliance.iso_27001-2013: A.12.4.1,A.13.1.3
sca.check.compliance.mitre_mitigations: M1029
sca.check.compliance.mitre_tactics: TA0040
sca.check.compliance.mitre_techniques: T1070,T1070.002,T1562,T1562.006
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,10.2,10.3,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,2.2.4,5.3.4,6.4.1,6.4.2
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.command: ["systemctl is-enabled systemd-journal-remote.socket"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'systemctl is-enabled systemd-journal-remote.socket'

** Alert 1706006477.585168: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure journald service is enabled.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19154,"title":"Ensure journald service is enabled.","description":"Ensure that the systemd-journald service is enabled to allow capturing of logging events.","rationale":"If the systemd-journald service is not enabled to start on boot, the system will not capture logging events.","remediation":"By default the systemd-journald service does not have an [Install] section and thus cannot be enabled / disabled. It is meant to be referenced as Requires or Wants by other unit files. As such, if the status of systemd-journald is not static, investigate why.","compliance":{"cis":"5.1.1.2","cis_csc_v8":"8.2","cis_csc_v7":"6.2,6.3","cmmc_v2.0":"AU.L2-3.3.1","hipaa":"164.312(b)","iso_27001-2013":"A.12.4.1","mitre_tactics":"TA0005","mitre_techniques":"T1070,T1070.002,T1562,T1562.001","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"10.2,10.3","pci_dss_v4.0":"10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2"},"rules":["c:systemctl is-enabled systemd-journald.service -> r:^static"],"condition":"all","command":"systemctl is-enabled systemd-journald.service","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'systemctl is-enabled systemd-journald.service'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19154
sca.check.title: Ensure journald service is enabled.
sca.check.description: Ensure that the systemd-journald service is enabled to allow capturing of logging events.
sca.check.rationale: If the systemd-journald service is not enabled to start on boot, the system will not capture logging events.
sca.check.remediation: By default the systemd-journald service does not have an [Install] section and thus cannot be enabled / disabled. It is meant to be referenced as Requires or Wants by other unit files. As such, if the status of systemd-journald is not static, investigate why.
sca.check.compliance.cis: 5.1.1.2
sca.check.compliance.cis_csc_v8: 8.2
sca.check.compliance.cis_csc_v7: 6.2,6.3
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.hipaa: 164.312(b)
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1070,T1070.002,T1562,T1562.001
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.2,10.3
sca.check.compliance.pci_dss_v4.0: 10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2
sca.check.command: ["systemctl is-enabled systemd-journald.service"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'systemctl is-enabled systemd-journald.service'

** Alert 1706006477.588258: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure journald is configured to compress large log files.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19155,"title":"Ensure journald is configured to compress large log files.","description":"The journald system includes the capability of compressing overly large files to avoid filling up the system with logs or making the logs unmanageably large.","rationale":"Uncompressed large files may unexpectedly fill a filesystem leading to resource unavailability. Compressing logs prior to write can prevent sudden, unexpected filesystem impacts.","remediation":"Edit the /etc/systemd/journald.conf file or a file ending in .conf in /etc/systemd/journald.conf.d/ and add the following line: Compress=yes Restart the service: # systemctl restart systemd-journald.","compliance":{"cis":"5.1.1.3","cis_csc_v8":"8.2,8.3","cis_csc_v7":"6.2,6.3,6.4","cmmc_v2.0":"AU.L2-3.3.1","hipaa":"164.312(b)","iso_27001-2013":"A.12.4.1","mitre_mitigations":"M1053","mitre_tactics":"TA0040","mitre_techniques":"T1562,T1562.002","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"10.2,10.3,10.7","pci_dss_v4.0":"10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2","soc_2":"A1.1"},"rules":["f:/etc/systemd/journald.conf -> r:^Compress=yes","d:/etc/systemd/journald.conf.d -> r:\\.* -> r:^Compress=yes"],"condition":"any","file":"/etc/systemd/journald.conf","directory":"/etc/systemd/journald.conf.d","status":"Not applicable","reason":"Could not open file '/etc/systemd/journald.conf'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19155
sca.check.title: Ensure journald is configured to compress large log files.
sca.check.description: The journald system includes the capability of compressing overly large files to avoid filling up the system with logs or making the logs unmanageably large.
sca.check.rationale: Uncompressed large files may unexpectedly fill a filesystem leading to resource unavailability. Compressing logs prior to write can prevent sudden, unexpected filesystem impacts.
sca.check.remediation: Edit the /etc/systemd/journald.conf file or a file ending in .conf in /etc/systemd/journald.conf.d/ and add the following line: Compress=yes Restart the service: # systemctl restart systemd-journald.
sca.check.compliance.cis: 5.1.1.3
sca.check.compliance.cis_csc_v8: 8.2,8.3
sca.check.compliance.cis_csc_v7: 6.2,6.3,6.4
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.hipaa: 164.312(b)
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_mitigations: M1053
sca.check.compliance.mitre_tactics: TA0040
sca.check.compliance.mitre_techniques: T1562,T1562.002
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.2,10.3,10.7
sca.check.compliance.pci_dss_v4.0: 10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2
sca.check.compliance.soc_2: A1.1
sca.check.file: ["/etc/systemd/journald.conf"]
sca.check.directory: ["/etc/systemd/journald.conf.d"]
sca.check.result: not applicable
sca.check.reason: Could not open file '/etc/systemd/journald.conf'

** Alert 1706006477.591695: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure journald is configured to write logfiles to persistent disk.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19156,"title":"Ensure journald is configured to write logfiles to persistent disk.","description":"Data from journald may be stored in volatile memory or persisted locally on the server. Logs in memory will be lost upon a system reboot. By persisting logs to local disk on the server they are protected from loss due to a reboot.","rationale":"Writing log data to disk will provide the ability to forensically reconstruct events which may have impacted the operations or security of a system even after a system crash or reboot.","remediation":"Edit the /etc/systemd/journald.conf file or a file ending in .conf in /etc/systemd/journald.conf.d/ and add the following line: Storage=persistent Restart the service: # systemctl restart systemd-journald.","compliance":{"cis":"5.1.1.4","cis_csc_v8":"8.2","cis_csc_v7":"6.2,6.3","cmmc_v2.0":"AU.L2-3.3.1","hipaa":"164.312(b)","iso_27001-2013":"A.12.4.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1070,T1070.002,T1562,T1562.006","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"10.2,10.3","pci_dss_v4.0":"10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2"},"rules":["f:/etc/systemd/journald.conf -> r:^Storage=persistent","d:/etc/systemd/journald.conf.d -> r:\\.* -> r:^Storage=persistent"],"condition":"any","file":"/etc/systemd/journald.conf","directory":"/etc/systemd/journald.conf.d","status":"Not applicable","reason":"Could not open file '/etc/systemd/journald.conf'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19156
sca.check.title: Ensure journald is configured to write logfiles to persistent disk.
sca.check.description: Data from journald may be stored in volatile memory or persisted locally on the server. Logs in memory will be lost upon a system reboot. By persisting logs to local disk on the server they are protected from loss due to a reboot.
sca.check.rationale: Writing log data to disk will provide the ability to forensically reconstruct events which may have impacted the operations or security of a system even after a system crash or reboot.
sca.check.remediation: Edit the /etc/systemd/journald.conf file or a file ending in .conf in /etc/systemd/journald.conf.d/ and add the following line: Storage=persistent Restart the service: # systemctl restart systemd-journald.
sca.check.compliance.cis: 5.1.1.4
sca.check.compliance.cis_csc_v8: 8.2
sca.check.compliance.cis_csc_v7: 6.2,6.3
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.hipaa: 164.312(b)
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1070,T1070.002,T1562,T1562.006
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.2,10.3
sca.check.compliance.pci_dss_v4.0: 10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2
sca.check.file: ["/etc/systemd/journald.conf"]
sca.check.directory: ["/etc/systemd/journald.conf.d"]
sca.check.result: not applicable
sca.check.reason: Could not open file '/etc/systemd/journald.conf'

** Alert 1706006477.595299: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure journald is not configured to send logs to rsyslog.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19157,"title":"Ensure journald is not configured to send logs to rsyslog.","description":"Data from journald should be kept in the confines of the service and not forwarded on to other services.","rationale":"IF journald is the method for capturing logs, all logs of the system should be handled by journald and not forwarded to other logging mechanisms.","remediation":"Edit the /etc/systemd/journald.conf file and files in /etc/systemd/journald.conf.d/ and ensure that ForwardToSyslog=yes is removed. Restart the service: # systemctl restart systemd-journald.","compliance":{"cis":"5.1.1.5","cis_csc_v8":"8.2,8.9","cis_csc_v7":"6.2,6.3,6.5","cmmc_v2.0":"AU.L2-3.3.1","hipaa":"164.312(b)","iso_27001-2013":"A.12.4.1","mitre_mitigations":"M1029","mitre_tactics":"TA0040","mitre_techniques":"T1070,T1070.002,T1562,T1562.006","nist_sp_800-53":"AU-6(3),AU-7","pci_dss_v3.2.1":"10.2,10.3,10.5.3,10.5.4","pci_dss_v4.0":"10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,10.3.3,5.3.4,6.4.1,6.4.2","soc_2":"PL1.4"},"rules":["not f:/etc/systemd/journald.conf -> !r:^# && r:ForwardToSyslog\\s*=\\s*yes","not d:/etc/systemd/journald.conf.d -> r:\\.* -> !r:^# && r:ForwardToSyslog\\s*=\\s*yes"],"condition":"any","file":"/etc/systemd/journald.conf","directory":"/etc/systemd/journald.conf.d","status":"Not applicable","reason":"Could not open file '/etc/systemd/journald.conf'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19157
sca.check.title: Ensure journald is not configured to send logs to rsyslog.
sca.check.description: Data from journald should be kept in the confines of the service and not forwarded on to other services.
sca.check.rationale: IF journald is the method for capturing logs, all logs of the system should be handled by journald and not forwarded to other logging mechanisms.
sca.check.remediation: Edit the /etc/systemd/journald.conf file and files in /etc/systemd/journald.conf.d/ and ensure that ForwardToSyslog=yes is removed. Restart the service: # systemctl restart systemd-journald.
sca.check.compliance.cis: 5.1.1.5
sca.check.compliance.cis_csc_v8: 8.2,8.9
sca.check.compliance.cis_csc_v7: 6.2,6.3,6.5
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.hipaa: 164.312(b)
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_mitigations: M1029
sca.check.compliance.mitre_tactics: TA0040
sca.check.compliance.mitre_techniques: T1070,T1070.002,T1562,T1562.006
sca.check.compliance.nist_sp_800-53: AU-6(3),AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.2,10.3,10.5.3,10.5.4
sca.check.compliance.pci_dss_v4.0: 10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,10.3.3,5.3.4,6.4.1,6.4.2
sca.check.compliance.soc_2: PL1.4
sca.check.file: ["/etc/systemd/journald.conf"]
sca.check.directory: ["/etc/systemd/journald.conf.d"]
sca.check.result: not applicable
sca.check.reason: Could not open file '/etc/systemd/journald.conf'

** Alert 1706006477.598682: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure journald log rotation is configured per site policy.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19158,"title":"Ensure journald log rotation is configured per site policy.","description":"Journald includes the capability of rotating log files regularly to avoid filling up the system with logs or making the logs unmanageably large. The file /etc/systemd/journald.conf is the configuration file used to specify how logs generated by Journald should be rotated.","rationale":"By keeping the log files smaller and more manageable, a system administrator can easily archive these files to another system and spend less time looking through inordinately large log files.","remediation":"Review /etc/systemd/journald.conf and verify logs are rotated according to site policy. The settings should be carefully understood as there are specific edge cases and prioritisation of parameters. The specific parameters for log rotation are: SystemMaxUse= SystemKeepFree= RuntimeMaxUse= RuntimeKeepFree= MaxFileSec=.","compliance":{"cis":"5.1.1.6","cis_csc_v8":"8.2","cis_csc_v7":"6.2,6.3","cmmc_v2.0":"AU.L2-3.3.1","hipaa":"164.312(b)","iso_27001-2013":"A.12.4.1","mitre_mitigations":"M1022","mitre_tactics":"TA0040","mitre_techniques":"T1070,T1070.002","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"10.2,10.3","pci_dss_v4.0":"10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2"},"rules":["f:/etc/systemd/journald.conf -> r:SystemMaxUse=","f:/etc/systemd/journald.conf -> r:SystemKeepFree=","f:/etc/systemd/journald.conf -> r:RuntimeMaxUse=","f:/etc/systemd/journald.conf -> r:RuntimeKeepFree=","f:/etc/systemd/journald.conf -> r:MaxFileSec="],"condition":"all","file":"/etc/systemd/journald.conf","status":"Not applicable","reason":"Could not open file '/etc/systemd/journald.conf'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19158
sca.check.title: Ensure journald log rotation is configured per site policy.
sca.check.description: Journald includes the capability of rotating log files regularly to avoid filling up the system with logs or making the logs unmanageably large. The file /etc/systemd/journald.conf is the configuration file used to specify how logs generated by Journald should be rotated.
sca.check.rationale: By keeping the log files smaller and more manageable, a system administrator can easily archive these files to another system and spend less time looking through inordinately large log files.
sca.check.remediation: Review /etc/systemd/journald.conf and verify logs are rotated according to site policy. The settings should be carefully understood as there are specific edge cases and prioritisation of parameters. The specific parameters for log rotation are: SystemMaxUse= SystemKeepFree= RuntimeMaxUse= RuntimeKeepFree= MaxFileSec=.
sca.check.compliance.cis: 5.1.1.6
sca.check.compliance.cis_csc_v8: 8.2
sca.check.compliance.cis_csc_v7: 6.2,6.3
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.hipaa: 164.312(b)
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0040
sca.check.compliance.mitre_techniques: T1070,T1070.002
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.2,10.3
sca.check.compliance.pci_dss_v4.0: 10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2
sca.check.file: ["/etc/systemd/journald.conf"]
sca.check.result: not applicable
sca.check.reason: Could not open file '/etc/systemd/journald.conf'

** Alert 1706006477.602589: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure rsyslog is installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19159,"title":"Ensure rsyslog is installed.","description":"The rsyslog software is recommended in environments where journald does not meet operation requirements.","rationale":"The security enhancements of rsyslog such as connection-oriented (i.e. TCP) transmission of logs, the option to log to database formats, and the encryption of log data en route to a central logging server) justify installing and configuring the package.","remediation":"Run the following command to install rsyslog: # apt install rsyslog.","compliance":{"cis":"5.1.2.1","cis_csc_v8":"8.2","cis_csc_v7":"6.2,6.3","cmmc_v2.0":"AU.L2-3.3.1","hipaa":"164.312(b)","iso_27001-2013":"A.12.4.1","mitre_mitigations":"M1028","mitre_tactics":"TA0005","mitre_techniques":"T1005,T1070,T1070.002","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"10.2,10.3","pci_dss_v4.0":"10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2"},"rules":["c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' rsyslog -> r:install ok installed"],"condition":"all","command":"dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' rsyslog","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19159
sca.check.title: Ensure rsyslog is installed.
sca.check.description: The rsyslog software is recommended in environments where journald does not meet operation requirements.
sca.check.rationale: The security enhancements of rsyslog such as connection-oriented (i.e. TCP) transmission of logs, the option to log to database formats, and the encryption of log data en route to a central logging server) justify installing and configuring the package.
sca.check.remediation: Run the following command to install rsyslog: # apt install rsyslog.
sca.check.compliance.cis: 5.1.2.1
sca.check.compliance.cis_csc_v8: 8.2
sca.check.compliance.cis_csc_v7: 6.2,6.3
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.hipaa: 164.312(b)
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_mitigations: M1028
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1005,T1070,T1070.002
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.2,10.3
sca.check.compliance.pci_dss_v4.0: 10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2
sca.check.command: ["dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' rsyslog"]
sca.check.result: failed

** Alert 1706006477.605532: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure rsyslog service is enabled.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19160,"title":"Ensure rsyslog service is enabled.","description":"Once the rsyslog package is installed, ensure that the service is enabled.","rationale":"If the rsyslog service is not enabled to start on boot, the system will not capture logging events.","remediation":"Run the following command to enable rsyslog: # systemctl --now enable rsyslog.","compliance":{"cis":"5.1.2.2","cis_csc_v8":"8.2","cis_csc_v7":"6.2,6.3","cmmc_v2.0":"AU.L2-3.3.1","hipaa":"164.312(b)","iso_27001-2013":"A.12.4.1","mitre_mitigations":"M1028","mitre_tactics":"TA0005","mitre_techniques":"T1070,T1070.002,T1562,T1562.001","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"10.2,10.3","pci_dss_v4.0":"10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2"},"rules":["c:systemctl is-enabled rsyslog -> r:^enabled"],"condition":"all","command":"systemctl is-enabled rsyslog","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'systemctl is-enabled rsyslog'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19160
sca.check.title: Ensure rsyslog service is enabled.
sca.check.description: Once the rsyslog package is installed, ensure that the service is enabled.
sca.check.rationale: If the rsyslog service is not enabled to start on boot, the system will not capture logging events.
sca.check.remediation: Run the following command to enable rsyslog: # systemctl --now enable rsyslog.
sca.check.compliance.cis: 5.1.2.2
sca.check.compliance.cis_csc_v8: 8.2
sca.check.compliance.cis_csc_v7: 6.2,6.3
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.hipaa: 164.312(b)
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_mitigations: M1028
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1070,T1070.002,T1562,T1562.001
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.2,10.3
sca.check.compliance.pci_dss_v4.0: 10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2
sca.check.command: ["systemctl is-enabled rsyslog"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'systemctl is-enabled rsyslog'

** Alert 1706006477.608199: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure journald is configured to send logs to rsyslog.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19161,"title":"Ensure journald is configured to send logs to rsyslog.","description":"Data from journald may be stored in volatile memory or persisted locally on the server. Utilities exist to accept remote export of journald logs, however, use of the RSyslog service provides a consistent means of log collection and export.","rationale":"IF RSyslog is the preferred method for capturing logs, all logs of the system should be sent to it for further processing.","remediation":"Edit the /etc/systemd/journald.conf file and add the following line: ForwardToSyslog=yes Restart the service: # systemctl restart rsyslog.","compliance":{"cis":"5.1.2.3","cis_csc_v8":"8.2,8.9","cis_csc_v7":"6.2,6.3,6.5","cmmc_v2.0":"AU.L2-3.3.1","hipaa":"164.312(b)","iso_27001-2013":"A.12.4.1","mitre_mitigations":"M1029","mitre_tactics":"TA0040","mitre_techniques":"T1070,T1070.002,T1562,T1562.006","nist_sp_800-53":"AU-6(3),AU-7","pci_dss_v3.2.1":"10.2,10.3,10.5.3,10.5.4","pci_dss_v4.0":"10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,10.3.3,5.3.4,6.4.1,6.4.2","soc_2":"PL1.4"},"rules":["f:/etc/systemd/journald.conf -> r:^\\s*\\t*ForwardToSyslog\\s*=\\s*yes"],"condition":"all","file":"/etc/systemd/journald.conf","status":"Not applicable","reason":"Could not open file '/etc/systemd/journald.conf'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19161
sca.check.title: Ensure journald is configured to send logs to rsyslog.
sca.check.description: Data from journald may be stored in volatile memory or persisted locally on the server. Utilities exist to accept remote export of journald logs, however, use of the RSyslog service provides a consistent means of log collection and export.
sca.check.rationale: IF RSyslog is the preferred method for capturing logs, all logs of the system should be sent to it for further processing.
sca.check.remediation: Edit the /etc/systemd/journald.conf file and add the following line: ForwardToSyslog=yes Restart the service: # systemctl restart rsyslog.
sca.check.compliance.cis: 5.1.2.3
sca.check.compliance.cis_csc_v8: 8.2,8.9
sca.check.compliance.cis_csc_v7: 6.2,6.3,6.5
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.hipaa: 164.312(b)
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_mitigations: M1029
sca.check.compliance.mitre_tactics: TA0040
sca.check.compliance.mitre_techniques: T1070,T1070.002,T1562,T1562.006
sca.check.compliance.nist_sp_800-53: AU-6(3),AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.2,10.3,10.5.3,10.5.4
sca.check.compliance.pci_dss_v4.0: 10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,10.3.3,5.3.4,6.4.1,6.4.2
sca.check.compliance.soc_2: PL1.4
sca.check.file: ["/etc/systemd/journald.conf"]
sca.check.result: not applicable
sca.check.reason: Could not open file '/etc/systemd/journald.conf'

** Alert 1706006477.611500: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure rsyslog default file permissions are configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19162,"title":"Ensure rsyslog default file permissions are configured.","description":"RSyslog will create logfiles that do not already exist on the system. This setting controls what permissions will be applied to these newly created files.","rationale":"It is important to ensure that log files have the correct permissions to ensure that sensitive data is archived and protected.","remediation":"Edit either /etc/rsyslog.conf or a dedicated .conf file in /etc/rsyslog.d/ and set $FileCreateMode to 0640 or more restrictive: $FileCreateMode 0640 Restart the service: # systemctl restart rsyslog.","compliance":{"cis":"5.1.2.4","cis_csc_v8":"3.3,8.2","cis_csc_v7":"5.1,6.2,6.3","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,AU.L2-3.3.1,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1),164.312(b)","iso_27001-2013":"A.12.4.1,A.14.2.5,A.8.1.3","mitre_mitigations":"M1028","mitre_tactics":"TA0007","mitre_techniques":"T1070,T1070.002,T1083","nist_sp_800-53":"AC-5,AC-6,AU-7","pci_dss_v3.2.1":"10.2,10.3,7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2,7.1","soc_2":"CC5.2,CC6.1"},"rules":["f:/etc/rsyslog.conf -> r:^\\$FileCreateMode 06\\d0|^\\$FileCreateMode 04\\d0|^\\$FileCreateMode 02\\d0|^\\$FileCreateMode 00\\d0 && r:^\\$FileCreateMode 0\\d40|^\\$FileCreateMode 0\\d00","d:/etc/rsyslog.d/ -> r:\\.*.conf -> r:^\\$FileCreateMode 06\\d0|^\\$FileCreateMode 04\\d0|^\\$FileCreateMode 02\\d0|^\\$FileCreateMode 00\\d0 && r:^\\$FileCreateMode 0\\d40|^\\$FileCreateMode 0\\d00"],"condition":"any","file":"/etc/rsyslog.conf","directory":"/etc/rsyslog.d/","status":"Not applicable","reason":"Could not open file '/etc/rsyslog.conf'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19162
sca.check.title: Ensure rsyslog default file permissions are configured.
sca.check.description: RSyslog will create logfiles that do not already exist on the system. This setting controls what permissions will be applied to these newly created files.
sca.check.rationale: It is important to ensure that log files have the correct permissions to ensure that sensitive data is archived and protected.
sca.check.remediation: Edit either /etc/rsyslog.conf or a dedicated .conf file in /etc/rsyslog.d/ and set $FileCreateMode to 0640 or more restrictive: $FileCreateMode 0640 Restart the service: # systemctl restart rsyslog.
sca.check.compliance.cis: 5.1.2.4
sca.check.compliance.cis_csc_v8: 3.3,8.2
sca.check.compliance.cis_csc_v7: 5.1,6.2,6.3
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,AU.L2-3.3.1,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1),164.312(b)
sca.check.compliance.iso_27001-2013: A.12.4.1,A.14.2.5,A.8.1.3
sca.check.compliance.mitre_mitigations: M1028
sca.check.compliance.mitre_tactics: TA0007
sca.check.compliance.mitre_techniques: T1070,T1070.002,T1083
sca.check.compliance.nist_sp_800-53: AC-5,AC-6,AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.2,10.3,7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.file: ["/etc/rsyslog.conf"]
sca.check.directory: ["/etc/rsyslog.d/"]
sca.check.result: not applicable
sca.check.reason: Could not open file '/etc/rsyslog.conf'

** Alert 1706006477.615389: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure rsyslog is not configured to receive logs from a remote client.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19163,"title":"Ensure rsyslog is not configured to receive logs from a remote client.","description":"RSyslog supports the ability to receive messages from remote hosts, thus acting as a log server. Clients should not receive data from other hosts.","rationale":"If a client is configured to also receive data, thus turning it into a server, the client system is acting outside it's operational boundary.","remediation":"Should there be any active log server configuration found in the auditing section, modify those file and remove the specific lines highlighted by the audit. Ensure none of the following entries are present in any of /etc/rsyslog.conf or /etc/rsyslog.d/*.conf. Old format $ModLoad imtcp $InputTCPServerRun New format module(load=\"imtcp\") input(type=\"imtcp\" port=\"514\") Restart the service: # systemctl restart rsyslog.","compliance":{"cis":"5.1.2.7","cis_csc_v8":"4.8,8.2","cis_csc_v7":"6.2,6.3,9.2","cmmc_v2.0":"AU.L2-3.3.1,CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6","hipaa":"164.312(b)","iso_27001-2013":"A.12.4.1,A.13.1.3","mitre_mitigations":"M1028","mitre_tactics":"TA0005","mitre_techniques":"T1070,T1070.002,T1562,T1562.006","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"1.1.6,1.2.1,10.2,10.3,2.2.2,2.2.5","pci_dss_v4.0":"1.2.5,10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,2.2.4,5.3.4,6.4.1,6.4.2","soc_2":"CC6.3,CC6.6"},"rules":["not d:/etc/rsyslog.d -> r:\\.*.conf$ -> !r:^# && r:module\\(load=\"imtcp\"\\)|input\\(type=\"imtcp\" port=\"514\"\\)","not f:/etc/rsyslog.conf -> !r:^# && r:module\\(load=\"imtcp\"\\)|input\\(type=\"imtcp\" port=\"514\"\\)"],"condition":"any","file":"/etc/rsyslog.conf","directory":"/etc/rsyslog.d","status":"Not applicable","reason":"Could not open dir '/etc/rsyslog.d'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19163
sca.check.title: Ensure rsyslog is not configured to receive logs from a remote client.
sca.check.description: RSyslog supports the ability to receive messages from remote hosts, thus acting as a log server. Clients should not receive data from other hosts.
sca.check.rationale: If a client is configured to also receive data, thus turning it into a server, the client system is acting outside it's operational boundary.
sca.check.remediation: Should there be any active log server configuration found in the auditing section, modify those file and remove the specific lines highlighted by the audit. Ensure none of the following entries are present in any of /etc/rsyslog.conf or /etc/rsyslog.d/*.conf. Old format $ModLoad imtcp $InputTCPServerRun New format module(load="imtcp") input(type="imtcp" port="514") Restart the service: # systemctl restart rsyslog.
sca.check.compliance.cis: 5.1.2.7
sca.check.compliance.cis_csc_v8: 4.8,8.2
sca.check.compliance.cis_csc_v7: 6.2,6.3,9.2
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1,CM.L2-3.4.7,CM.L2-3.4.8,SC.L2-3.13.6
sca.check.compliance.hipaa: 164.312(b)
sca.check.compliance.iso_27001-2013: A.12.4.1,A.13.1.3
sca.check.compliance.mitre_mitigations: M1028
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1070,T1070.002,T1562,T1562.006
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 1.1.6,1.2.1,10.2,10.3,2.2.2,2.2.5
sca.check.compliance.pci_dss_v4.0: 1.2.5,10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,2.2.4,5.3.4,6.4.1,6.4.2
sca.check.compliance.soc_2: CC6.3,CC6.6
sca.check.file: ["/etc/rsyslog.conf"]
sca.check.directory: ["/etc/rsyslog.d"]
sca.check.result: not applicable
sca.check.reason: Could not open dir '/etc/rsyslog.d'

** Alert 1706006477.619449: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure auditd is installed.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19164,"title":"Ensure auditd is installed.","description":"auditd is the userspace component to the Linux Auditing System. It's responsible for writing audit records to the disk.","rationale":"The capturing of system events provides system administrators with information to allow them to determine if unauthorized access to their system is occurring.","remediation":"Run the following command to Install auditd # apt install auditd.","compliance":{"cis":"5.2.1.1","cis_csc_v8":"8.5","cis_csc_v7":"6.2","cmmc_v2.0":"AU.L2-3.3.1","iso_27001-2013":"A.12.4.1","mitre_mitigations":"M1028","mitre_tactics":"TA0005","mitre_techniques":"T1562,T1562.001","nist_sp_800-53":"AU-3(1),AU-7","pci_dss_v3.2.1":"10.1,10.2.2,10.2.4,10.2.5,10.3","pci_dss_v4.0":"10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5","soc_2":"CC5.2,CC7.2"},"rules":["c:dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' auditd -> r: install ok installed"],"condition":"all","command":"dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' auditd","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19164
sca.check.title: Ensure auditd is installed.
sca.check.description: auditd is the userspace component to the Linux Auditing System. It's responsible for writing audit records to the disk.
sca.check.rationale: The capturing of system events provides system administrators with information to allow them to determine if unauthorized access to their system is occurring.
sca.check.remediation: Run the following command to Install auditd # apt install auditd.
sca.check.compliance.cis: 5.2.1.1
sca.check.compliance.cis_csc_v8: 8.5
sca.check.compliance.cis_csc_v7: 6.2
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_mitigations: M1028
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1562,T1562.001
sca.check.compliance.nist_sp_800-53: AU-3(1),AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.1,10.2.2,10.2.4,10.2.5,10.3
sca.check.compliance.pci_dss_v4.0: 10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5
sca.check.compliance.soc_2: CC5.2,CC7.2
sca.check.command: ["dpkg-query -W -f='${binary:Package}\\t${Status}\\t${db:Status-Status}\\n' auditd"]
sca.check.result: failed

** Alert 1706006477.622143: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure auditd service is enabled and active.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19165,"title":"Ensure auditd service is enabled and active.","description":"Turn on the auditd daemon to record system events.","rationale":"The capturing of system events provides system administrators with information to allow them to determine if unauthorized access to their system is occurring.","remediation":"Run the following command to enable and start auditd: # systemctl --now enable auditd.","compliance":{"cis":"5.2.1.2","cis_csc_v8":"8.2","cis_csc_v7":"6.2,6.3","cmmc_v2.0":"AU.L2-3.3.1","hipaa":"164.312(b)","iso_27001-2013":"A.12.4.1","mitre_mitigations":"M1028","mitre_tactics":"TA0005","mitre_techniques":"T1562,T1562.001","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"10.2,10.3","pci_dss_v4.0":"10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2"},"rules":["c:systemctl is-enabled auditd -> r:^enabled","c:systemctl is-active auditd -> r:^active"],"condition":"all","command":"systemctl is-enabled auditd,systemctl is-active auditd","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'systemctl is-enabled auditd'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19165
sca.check.title: Ensure auditd service is enabled and active.
sca.check.description: Turn on the auditd daemon to record system events.
sca.check.rationale: The capturing of system events provides system administrators with information to allow them to determine if unauthorized access to their system is occurring.
sca.check.remediation: Run the following command to enable and start auditd: # systemctl --now enable auditd.
sca.check.compliance.cis: 5.2.1.2
sca.check.compliance.cis_csc_v8: 8.2
sca.check.compliance.cis_csc_v7: 6.2,6.3
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.hipaa: 164.312(b)
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_mitigations: M1028
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1562,T1562.001
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.2,10.3
sca.check.compliance.pci_dss_v4.0: 10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2
sca.check.command: ["systemctl is-enabled auditd", "systemctl is-active auditd"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'systemctl is-enabled auditd'

** Alert 1706006477.624990: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure auditing for processes that start prior to auditd is enabled.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19166,"title":"Ensure auditing for processes that start prior to auditd is enabled.","description":"Configure grub2 so that processes that are capable of being audited can be audited even if they start up prior to auditd startup.","rationale":"Audit events need to be captured on processes that start up prior to auditd , so that potential malicious activity cannot go undetected.","remediation":"Edit /etc/default/grub and add audit=1 to GRUB_CMDLINE_LINUX: Example: GRUB_CMDLINE_LINUX=\"audit=1\" Run the following command to update the grub2 configuration: # update-grub.","compliance":{"cis":"5.2.1.3","cis_csc_v8":"8.2","cis_csc_v7":"6.2","cmmc_v2.0":"AU.L2-3.3.1","hipaa":"164.312(b)","iso_27001-2013":"A.12.4.1","mitre_mitigations":"M1047","mitre_tactics":"TA0005","mitre_techniques":"T1562,T1562.001","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"10.2,10.3","pci_dss_v4.0":"10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2"},"rules":["not f:/boot/grub/grub.cfg -> r:^\\s*\\t*linux && !r:audit=1"],"condition":"all","file":"/boot/grub/grub.cfg","status":"Not applicable","reason":"Could not open file '/boot/grub/grub.cfg'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19166
sca.check.title: Ensure auditing for processes that start prior to auditd is enabled.
sca.check.description: Configure grub2 so that processes that are capable of being audited can be audited even if they start up prior to auditd startup.
sca.check.rationale: Audit events need to be captured on processes that start up prior to auditd , so that potential malicious activity cannot go undetected.
sca.check.remediation: Edit /etc/default/grub and add audit=1 to GRUB_CMDLINE_LINUX: Example: GRUB_CMDLINE_LINUX="audit=1" Run the following command to update the grub2 configuration: # update-grub.
sca.check.compliance.cis: 5.2.1.3
sca.check.compliance.cis_csc_v8: 8.2
sca.check.compliance.cis_csc_v7: 6.2
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.hipaa: 164.312(b)
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_mitigations: M1047
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1562,T1562.001
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.2,10.3
sca.check.compliance.pci_dss_v4.0: 10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2
sca.check.file: ["/boot/grub/grub.cfg"]
sca.check.result: not applicable
sca.check.reason: Could not open file '/boot/grub/grub.cfg'

** Alert 1706006477.628014: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure audit_backlog_limit is sufficient.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19167,"title":"Ensure audit_backlog_limit is sufficient.","description":"In the kernel-level audit subsystem, a socket buffer queue is used to hold audit events. Whenever a new audit event is received, it is logged and prepared to be added to this queue. The kernel boot parameter audit_backlog_limit=N, with N representing the amount of messages, will ensure that a queue cannot grow beyond a certain size. If an audit event is logged which would grow the queue beyond this limit, then a failure occurs and is handled according to the system configuration.","rationale":"If an audit event is logged which would grow the queue beyond the audit_backlog_limit, then a failure occurs, auditd records will be lost, and potential malicious activity could go undetected.","remediation":"Edit /etc/default/grub and add audit_backlog_limit=N to GRUB_CMDLINE_LINUX. The recommended size for N is 8192 or larger. Example: GRUB_CMDLINE_LINUX=\"audit_backlog_limit=8192\" Run the following command to update the grub2 configuration: # update-grub.","compliance":{"cis":"5.2.1.4","cis_csc_v8":"8.2","cis_csc_v7":"6.2,6.3","cmmc_v2.0":"AU.L2-3.3.1","hipaa":"164.312(b)","iso_27001-2013":"A.12.4.1","mitre_mitigations":"M1028,M1047","mitre_tactics":"TA0005","mitre_techniques":"T1562,T1562.001","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"10.2,10.3","pci_dss_v4.0":"10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2"},"rules":["not f:/boot/grub/grub.cfg -> r:^\\s*\\t*linux && !r:audit_backlog_limit"],"condition":"all","file":"/boot/grub/grub.cfg","status":"Not applicable","reason":"Could not open file '/boot/grub/grub.cfg'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19167
sca.check.title: Ensure audit_backlog_limit is sufficient.
sca.check.description: In the kernel-level audit subsystem, a socket buffer queue is used to hold audit events. Whenever a new audit event is received, it is logged and prepared to be added to this queue. The kernel boot parameter audit_backlog_limit=N, with N representing the amount of messages, will ensure that a queue cannot grow beyond a certain size. If an audit event is logged which would grow the queue beyond this limit, then a failure occurs and is handled according to the system configuration.
sca.check.rationale: If an audit event is logged which would grow the queue beyond the audit_backlog_limit, then a failure occurs, auditd records will be lost, and potential malicious activity could go undetected.
sca.check.remediation: Edit /etc/default/grub and add audit_backlog_limit=N to GRUB_CMDLINE_LINUX. The recommended size for N is 8192 or larger. Example: GRUB_CMDLINE_LINUX="audit_backlog_limit=8192" Run the following command to update the grub2 configuration: # update-grub.
sca.check.compliance.cis: 5.2.1.4
sca.check.compliance.cis_csc_v8: 8.2
sca.check.compliance.cis_csc_v7: 6.2,6.3
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.hipaa: 164.312(b)
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_mitigations: M1028,M1047
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1562,T1562.001
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.2,10.3
sca.check.compliance.pci_dss_v4.0: 10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2
sca.check.file: ["/boot/grub/grub.cfg"]
sca.check.result: not applicable
sca.check.reason: Could not open file '/boot/grub/grub.cfg'

** Alert 1706006477.631965: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure audit log storage size is configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19168,"title":"Ensure audit log storage size is configured.","description":"Configure the maximum size of the audit log file. Once the log reaches the maximum size, it will be rotated and a new log file will be started.","rationale":"It is important that an appropriate size is determined for log files so that they do not impact the system and audit data is not lost.","remediation":"Set the following parameter in /etc/audit/auditd.conf in accordance with site policy: max_log_file = <MB>.","compliance":{"cis":"5.2.2.1","cis_csc_v8":"8.3","cis_csc_v7":"6.4","iso_27001-2013":"A.12.4.1","mitre_mitigations":"M1047","mitre_tactics":"TA0040","mitre_techniques":"T1562,T1562.006","pci_dss_v3.2.1":"10.7","soc_2":"A1.1"},"rules":["d:/etc/audit","f:/etc/audit/auditd.conf","f:/etc/audit/auditd.conf -> r:^\\s*\\t*max_log_file\\s*\\t*=\\s*\\t*\\d+"],"condition":"all","directory":"/etc/audit","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19168
sca.check.title: Ensure audit log storage size is configured.
sca.check.description: Configure the maximum size of the audit log file. Once the log reaches the maximum size, it will be rotated and a new log file will be started.
sca.check.rationale: It is important that an appropriate size is determined for log files so that they do not impact the system and audit data is not lost.
sca.check.remediation: Set the following parameter in /etc/audit/auditd.conf in accordance with site policy: max_log_file = <MB>.
sca.check.compliance.cis: 5.2.2.1
sca.check.compliance.cis_csc_v8: 8.3
sca.check.compliance.cis_csc_v7: 6.4
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_mitigations: M1047
sca.check.compliance.mitre_tactics: TA0040
sca.check.compliance.mitre_techniques: T1562,T1562.006
sca.check.compliance.pci_dss_v3.2.1: 10.7
sca.check.compliance.soc_2: A1.1
sca.check.directory: ["/etc/audit"]
sca.check.result: failed

** Alert 1706006477.634319: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure audit logs are not automatically deleted.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19169,"title":"Ensure audit logs are not automatically deleted.","description":"The max_log_file_action setting determines how to handle the audit log file reaching the max file size. A value of keep_logs will rotate the logs but never delete old logs.","rationale":"In high security contexts, the benefits of maintaining a long audit history exceed the cost of storing the audit history.","remediation":"Set the following parameter in /etc/audit/auditd.conf: max_log_file_action = keep_logs.","compliance":{"cis":"5.2.2.2","cis_csc_v8":"8.3","cis_csc_v7":"6.4","iso_27001-2013":"A.12.4.1","mitre_mitigations":"M1047","mitre_tactics":"TA0005","mitre_techniques":"T1562,T1562.006","pci_dss_v3.2.1":"10.7","soc_2":"A1.1"},"rules":["d:/etc/audit","f:/etc/audit/auditd.conf","f:/etc/audit/auditd.conf -> r:^\\s*\\t*max_log_file_action\\s*\\t*=\\s*\\t*keep_logs"],"condition":"all","directory":"/etc/audit","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19169
sca.check.title: Ensure audit logs are not automatically deleted.
sca.check.description: The max_log_file_action setting determines how to handle the audit log file reaching the max file size. A value of keep_logs will rotate the logs but never delete old logs.
sca.check.rationale: In high security contexts, the benefits of maintaining a long audit history exceed the cost of storing the audit history.
sca.check.remediation: Set the following parameter in /etc/audit/auditd.conf: max_log_file_action = keep_logs.
sca.check.compliance.cis: 5.2.2.2
sca.check.compliance.cis_csc_v8: 8.3
sca.check.compliance.cis_csc_v7: 6.4
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_mitigations: M1047
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1562,T1562.006
sca.check.compliance.pci_dss_v3.2.1: 10.7
sca.check.compliance.soc_2: A1.1
sca.check.directory: ["/etc/audit"]
sca.check.result: failed

** Alert 1706006477.636691: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure system is disabled when audit logs are full.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19170,"title":"Ensure system is disabled when audit logs are full.","description":"The auditd daemon can be configured to halt the system when the audit logs are full. The admin_space_left_action parameter tells the system what action to take when the system has detected that it is low on disk space. Valid values are ignore, syslog, suspend, single, and halt. - ignore, the audit daemon does nothing - Syslog, the audit daemon will issue a warning to syslog - Suspend, the audit daemon will stop writing records to the disk - single, the audit daemon will put the computer system in single user mode - halt, the audit daemon will shutdown the system.","rationale":"In high security contexts, the risk of detecting unauthorized access or nonrepudiation exceeds the benefit of the system's availability.","remediation":"Set the following parameters in /etc/audit/auditd.conf: space_left_action = email action_mail_acct = root set admin_space_left_action to either halt or single in /etc/audit/auditd.conf. Example: admin_space_left_action = halt.","compliance":{"cis":"5.2.2.3","cis_csc_v8":"8.2,8.3","cis_csc_v7":"6.4","cmmc_v2.0":"AU.L2-3.3.1","hipaa":"164.312(b)","iso_27001-2013":"A.12.4.1","mitre_mitigations":"M1028","mitre_tactics":"TA0005","mitre_techniques":"T1562,T1562.006","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"10.2,10.3,10.7","pci_dss_v4.0":"10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2","soc_2":"A1.1"},"rules":["f:/etc/audit/auditd.conf -> r:^\\s*space_left_action\\s*=\\s*email","f:/etc/audit/auditd.conf -> r:^\\s*action_mail_acct\\s*=\\s*root","f:/etc/audit/auditd.conf -> r:^\\s*admin_space_left_action\\s*=\\s*halt|^\\s*admin_space_left_action\\s*=\\s*single"],"condition":"all","file":"/etc/audit/auditd.conf","status":"Not applicable","reason":"Could not open file '/etc/audit/auditd.conf'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19170
sca.check.title: Ensure system is disabled when audit logs are full.
sca.check.description: The auditd daemon can be configured to halt the system when the audit logs are full. The admin_space_left_action parameter tells the system what action to take when the system has detected that it is low on disk space. Valid values are ignore, syslog, suspend, single, and halt. - ignore, the audit daemon does nothing - Syslog, the audit daemon will issue a warning to syslog - Suspend, the audit daemon will stop writing records to the disk - single, the audit daemon will put the computer system in single user mode - halt, the audit daemon will shutdown the system.
sca.check.rationale: In high security contexts, the risk of detecting unauthorized access or nonrepudiation exceeds the benefit of the system's availability.
sca.check.remediation: Set the following parameters in /etc/audit/auditd.conf: space_left_action = email action_mail_acct = root set admin_space_left_action to either halt or single in /etc/audit/auditd.conf. Example: admin_space_left_action = halt.
sca.check.compliance.cis: 5.2.2.3
sca.check.compliance.cis_csc_v8: 8.2,8.3
sca.check.compliance.cis_csc_v7: 6.4
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.hipaa: 164.312(b)
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_mitigations: M1028
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1562,T1562.006
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.2,10.3,10.7
sca.check.compliance.pci_dss_v4.0: 10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2
sca.check.compliance.soc_2: A1.1
sca.check.file: ["/etc/audit/auditd.conf"]
sca.check.result: not applicable
sca.check.reason: Could not open file '/etc/audit/auditd.conf'

** Alert 1706006477.640914: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure changes to system administration scope (sudoers) is collected.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19171,"title":"Ensure changes to system administration scope (sudoers) is collected.","description":"Monitor scope changes for system administrators. If the system has been properly configured to force system administrators to log in as themselves first and then use the sudo command to execute privileged commands, it is possible to monitor changes in scope. The file /etc/sudoers, or files in /etc/sudoers.d, will be written to when the file(s) or related attributes have changed. The audit records will be tagged with the identifier \"scope\".","rationale":"Changes in the /etc/sudoers and /etc/sudoers.d files can indicate that an unauthorized change has been made to the scope of system administrator activity.","remediation":"Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor scope changes for system administrators. Example: # printf \" -w /etc/sudoers -p wa -k scope -w /etc/sudoers.d -p wa -k scope \" >> /etc/audit/rules.d/50-scope.rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi.","compliance":{"cis":"5.2.3.1","cis_csc_v8":"8.5","cis_csc_v7":"4.8","cmmc_v2.0":"AU.L2-3.3.1","iso_27001-2013":"A.12.4.3","mitre_mitigations":"M1047","mitre_tactics":"TA0004","mitre_techniques":"T1562,T1562.006","nist_sp_800-53":"AU-3(1),AU-7","pci_dss_v3.2.1":"10.1,10.2.2,10.2.4,10.2.5,10.3","pci_dss_v4.0":"10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5","soc_2":"CC5.2,CC7.2"},"rules":["d:/etc/audit/rules.d","d:/etc/audit/rules.d -> r:\\.+.rules$","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-w && r:/etc/sudoers && r:-p wa && r:-k scope|key=\\\\s*\\t*scope","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-w && r:/etc/sudoers.d && r:-p wa && r:-k scope|key=\\\\s*\\t*scope","c:auditctl -l -> r:^-w && r:/etc/sudoers && r:-p wa && r:-k scope|key=\\\\s*\\t*scope","c:auditctl -l -> r:^-w && r:/etc/sudoers.d && r:-p wa && r:-k scope|key=\\\\s*\\t*scope"],"condition":"all","directory":"/etc/audit/rules.d","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19171
sca.check.title: Ensure changes to system administration scope (sudoers) is collected.
sca.check.description: Monitor scope changes for system administrators. If the system has been properly configured to force system administrators to log in as themselves first and then use the sudo command to execute privileged commands, it is possible to monitor changes in scope. The file /etc/sudoers, or files in /etc/sudoers.d, will be written to when the file(s) or related attributes have changed. The audit records will be tagged with the identifier "scope".
sca.check.rationale: Changes in the /etc/sudoers and /etc/sudoers.d files can indicate that an unauthorized change has been made to the scope of system administrator activity.
sca.check.remediation: Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor scope changes for system administrators. Example: # printf " -w /etc/sudoers -p wa -k scope -w /etc/sudoers.d -p wa -k scope " >> /etc/audit/rules.d/50-scope.rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep "enabled") =~ "2" ]]; then printf "Reboot required to load rules\n"; fi.
sca.check.compliance.cis: 5.2.3.1
sca.check.compliance.cis_csc_v8: 8.5
sca.check.compliance.cis_csc_v7: 4.8
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.iso_27001-2013: A.12.4.3
sca.check.compliance.mitre_mitigations: M1047
sca.check.compliance.mitre_tactics: TA0004
sca.check.compliance.mitre_techniques: T1562,T1562.006
sca.check.compliance.nist_sp_800-53: AU-3(1),AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.1,10.2.2,10.2.4,10.2.5,10.3
sca.check.compliance.pci_dss_v4.0: 10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5
sca.check.compliance.soc_2: CC5.2,CC7.2
sca.check.directory: ["/etc/audit/rules.d"]
sca.check.result: failed

** Alert 1706006477.645468: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure actions as another user are always logged.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19172,"title":"Ensure actions as another user are always logged.","description":"sudo provides users with temporary elevated privileges to perform operations, either as the superuser or another user.","rationale":"Creating an audit log of users with temporary elevated privileges and the operation(s) they performed is essential to reporting. Administrators will want to correlate the events written to the audit trail with the records written to sudo's logfile to verify if unauthorized commands have been executed.","remediation":"Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor elevated privileges. 64 Bit systems Example: # printf \" -a always,exit -F arch=b64 -C euid!=uid -F auid!=unset -S execve -k user_emulation -a always,exit -F arch=b32 -C euid!=uid -F auid!=unset -S execve -k user_emulation \" >> /etc/audit/rules.d/50-user_emulation.rules Load audit rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi 32 Bit systems Follow the same procedures as for 64 bit systems and ignore any entries with b64.","compliance":{"cis":"5.2.3.2","cis_csc_v8":"8.5","cis_csc_v7":"4.9","cmmc_v2.0":"AU.L2-3.3.1","iso_27001-2013":"A.9.4.2","mitre_mitigations":"M1047","mitre_tactics":"TA0004","mitre_techniques":"T1562,T1562.006","nist_sp_800-53":"AU-3(1),AU-7","pci_dss_v3.2.1":"10.1,10.2.2,10.2.4,10.2.5,10.3","pci_dss_v4.0":"10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5","soc_2":"CC5.2,CC7.2"},"rules":["d:/etc/audit/rules.d","d:/etc/audit/rules.d -> r:\\.+.rules$","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-a && r:exit,always|always,exit && r:-F arch=b64 && r:-C euid!=uid|-C uid!=euid  && r:-F auid!=unset|-F auid!=-1|-F auid!=4294967295 && r:-S execve && r:-k user_emulation|key=user_emulation","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-a && r:exit,always|always,exit && r:-F arch=b32 && r:-C euid!=uid|-C uid!=euid  && r:-F auid!=unset|-F auid!=-1|-F auid!=4294967295 && r:-S execve && r:-k user_emulation|key=user_emulation","c:auditctl -l -> r:^-a && r:exit,always|always,exit && r:-F arch=b64 && r:-C euid!=uid|-C uid!=euid && r:-F auid!=unset|-F auid!=-1|-F auid!=4294967295 && r:-S execve && r:-k user_emulation|key=user_emulation","c:auditctl -l -> r:^-a && r:exit,always|always,exit && r:-F arch=b32 && r:-C euid!=uid|-C uid!=euid && r:-F auid!=unset|-F auid!=-1|-F auid!=4294967295 && r:-S execve && r:-k user_emulation|key=user_emulation"],"condition":"all","directory":"/etc/audit/rules.d","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19172
sca.check.title: Ensure actions as another user are always logged.
sca.check.description: sudo provides users with temporary elevated privileges to perform operations, either as the superuser or another user.
sca.check.rationale: Creating an audit log of users with temporary elevated privileges and the operation(s) they performed is essential to reporting. Administrators will want to correlate the events written to the audit trail with the records written to sudo's logfile to verify if unauthorized commands have been executed.
sca.check.remediation: Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor elevated privileges. 64 Bit systems Example: # printf " -a always,exit -F arch=b64 -C euid!=uid -F auid!=unset -S execve -k user_emulation -a always,exit -F arch=b32 -C euid!=uid -F auid!=unset -S execve -k user_emulation " >> /etc/audit/rules.d/50-user_emulation.rules Load audit rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep "enabled") =~ "2" ]]; then printf "Reboot required to load rules\n"; fi 32 Bit systems Follow the same procedures as for 64 bit systems and ignore any entries with b64.
sca.check.compliance.cis: 5.2.3.2
sca.check.compliance.cis_csc_v8: 8.5
sca.check.compliance.cis_csc_v7: 4.9
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.iso_27001-2013: A.9.4.2
sca.check.compliance.mitre_mitigations: M1047
sca.check.compliance.mitre_tactics: TA0004
sca.check.compliance.mitre_techniques: T1562,T1562.006
sca.check.compliance.nist_sp_800-53: AU-3(1),AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.1,10.2.2,10.2.4,10.2.5,10.3
sca.check.compliance.pci_dss_v4.0: 10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5
sca.check.compliance.soc_2: CC5.2,CC7.2
sca.check.directory: ["/etc/audit/rules.d"]
sca.check.result: failed

** Alert 1706006477.650570: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure events that modify date and time information are collected.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19173,"title":"Ensure events that modify date and time information are collected.","description":"Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the; - adjtimex - tune kernel clock - settimeofday - set time using timeval and timezone structures - stime - using seconds since 1/1/1970 - clock_settime - allows for the setting of several internal clocks and timers system calls have been executed. Further, ensure to write an audit record to the configured audit log file upon exit, tagging the records with a unique identifier such as \"time-change\".","rationale":"Unexpected changes in system date and/or time could be a sign of malicious activity on the system.","remediation":"Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor events that modify date and time information. 64 Bit systems Example: # printf \" -a always,exit -F arch=b64 -S adjtimex,settimeofday,clock_settime -k time-change -a always,exit -F arch=b32 -S adjtimex,settimeofday,clock_settime -k time-change -w /etc/localtime -p wa -k time-change \\\" >> /etc/audit/rules.d/50-time-change.rules Load audit rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep \\\"enabled\\\") =~ \\\"2\\\" ]]; then printf \\\"Reboot required to load rules\\\\n\\\"; fi 32 Bit systems Follow the same procedures as for 64 bit systems and ignore any entries with b64. In addition, add stime to the system call audit. Example: -a always,exit -F arch=b32 -S adjtimex,settimeofday,clock_settime,stime -k time-change.","compliance":{"cis":"5.2.3.4","cis_csc_v8":"8.5","cis_csc_v7":"5.5","cmmc_v2.0":"AU.L2-3.3.1","iso_27001-2013":"A.12.1.2","mitre_mitigations":"M1047","mitre_tactics":"TA0005","mitre_techniques":"T1562,T1562.006","nist_sp_800-53":"AU-3(1),AU-7","pci_dss_v3.2.1":"10.1,10.2.2,10.2.4,10.2.5,10.3","pci_dss_v4.0":"10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5","soc_2":"CC5.2,CC7.2"},"rules":["d:/etc/audit/rules.d","d:/etc/audit/rules.d -> r:\\.+.rules$","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-a && r:always,exit|exit,always && r:-F arch=b64 && r:-S && r:adjtimex && r:settimeofday && r:clock_settime && r:-k time-change|key=time-change","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-a && r:always,exit|exit,always && r:-F arch=b32 && r:-S && r:adjtimex && r:settimeofday && r:clock_settime && r:-k time-change|key=time-change","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-w && r:/etc/localtime && r:-p wa && r:-k time-change|key=time-change","c:auditctl -l -> r:^-a && r:always,exit|exit,always && r:-F arch=b64 && r:-S && r:adjtimex && r:settimeofday && r:clock_settime && r:-k time-change|key=time-change","c:auditctl -l -> r:^-a && r:always,exit|exit,always && r:-F arch=b32 && r:-S && r:adjtimex && r:settimeofday && r:clock_settime && r:-k time-change|key=time-change","c:auditctl -l -> r:^-w && r:/etc/localtime && r:-p wa && r:-k time-change|key=time-change"],"condition":"all","directory":"/etc/audit/rules.d","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19173
sca.check.title: Ensure events that modify date and time information are collected.
sca.check.description: Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the; - adjtimex - tune kernel clock - settimeofday - set time using timeval and timezone structures - stime - using seconds since 1/1/1970 - clock_settime - allows for the setting of several internal clocks and timers system calls have been executed. Further, ensure to write an audit record to the configured audit log file upon exit, tagging the records with a unique identifier such as "time-change".
sca.check.rationale: Unexpected changes in system date and/or time could be a sign of malicious activity on the system.
sca.check.remediation: Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor events that modify date and time information. 64 Bit systems Example: # printf " -a always,exit -F arch=b64 -S adjtimex,settimeofday,clock_settime -k time-change -a always,exit -F arch=b32 -S adjtimex,settimeofday,clock_settime -k time-change -w /etc/localtime -p wa -k time-change \" >> /etc/audit/rules.d/50-time-change.rules Load audit rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi 32 Bit systems Follow the same procedures as for 64 bit systems and ignore any entries with b64. In addition, add stime to the system call audit. Example: -a always,exit -F arch=b32 -S adjtimex,settimeofday,clock_settime,stime -k time-change.
sca.check.compliance.cis: 5.2.3.4
sca.check.compliance.cis_csc_v8: 8.5
sca.check.compliance.cis_csc_v7: 5.5
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.iso_27001-2013: A.12.1.2
sca.check.compliance.mitre_mitigations: M1047
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1562,T1562.006
sca.check.compliance.nist_sp_800-53: AU-3(1),AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.1,10.2.2,10.2.4,10.2.5,10.3
sca.check.compliance.pci_dss_v4.0: 10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5
sca.check.compliance.soc_2: CC5.2,CC7.2
sca.check.directory: ["/etc/audit/rules.d"]
sca.check.result: failed

** Alert 1706006477.656591: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure events that modify the system's network environment are collected.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19174,"title":"Ensure events that modify the system's network environment are collected.","description":"Record changes to network environment files or system calls. The below parameters monitors the following system calls, and write an audit event on system call exit: - sethostname - set the systems host name - setdomainname - set the systems domain name The files being monitored are: - /etc/issue and /etc/issue.net - messages displayed pre-login - /etc/hosts - file containing host names and associated IP addresses - /etc/networks - symbolic names for networks - /etc/network/ - directory containing network interface scripts and configurations files.","rationale":"Monitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/network is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records should have a relevant tag associated with them.","remediation":"Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor events that modify the system's network environment. 64 Bit systems Example: # printf \" -a always,exit -F arch=b64 -S sethostname,setdomainname -k system-locale -a always,exit -F arch=b32 -S sethostname,setdomainname -k system-locale -w /etc/issue -p wa -k system-locale -w /etc/issue.net -p wa -k system-locale -w /etc/hosts -p wa -k system-locale -w /etc/networks -p wa -k system-locale -w /etc/network/ -p wa -k system-locale \" >> /etc/audit/rules.d/50-system_locale.rules Load audit rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi 32 Bit systems Follow the same procedures as for 64 bit systems and ignore any entries with b64.","compliance":{"cis":"5.2.3.5","cis_csc_v8":"8.5","cis_csc_v7":"5.5","cmmc_v2.0":"AU.L2-3.3.1","iso_27001-2013":"A.12.1.2","mitre_mitigations":"M1047","mitre_tactics":"TA0003","mitre_techniques":"T1562,T1562.006","nist_sp_800-53":"AU-3(1),AU-7","pci_dss_v3.2.1":"10.1,10.2.2,10.2.4,10.2.5,10.3","pci_dss_v4.0":"10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5","soc_2":"CC5.2,CC7.2"},"rules":["d:/etc/audit/rules.d","d:/etc/audit/rules.d -> r:\\.+.rules$","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-a && r:exit,always|always,exit && r:-F arch=b32 && r:-S && r:sethostname && r:setdomainname && r:-k system-locale|key=system-locale","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-a && r:exit,always|always,exit && r:-F arch=b64 && r:-S && r:sethostname && r:setdomainname && r:-k system-locale|key=system-locale","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-w && r:/etc/issue && r:-p wa && r:-k system-locale|key=system-locale","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-w && r:/etc/issue.net && r:-p wa && r:-k system-locale|key=system-locale","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-w && r:/etc/hosts && r:-p wa && r:-k system-locale|key=system-locale","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-w && r:/etc/network && r:-p wa && r:-k system-locale|key=system-locale","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-w && r:/etc/networks/ && r:-p wa && r:-k system-locale|key=system-locale","c:auditctl -l -> r:^-a && r:exit,always|always,exit && r:-F arch=b64 && r:-S && r:sethostname && r:setdomainname && r:-k system-locale|-F key=system-locale","c:auditctl -l -> r:^-a && r:exit,always|always,exit && r:-F arch=b32 && r:-S && r:sethostname && r:setdomainname && r:-k system-locale|-F key=system-locale","c:auditctl -l -> r:^-w && r:/etc/issue && r:-p wa && r:-k system-locale|key=system-locale","c:auditctl -l -> r:^-w && r:/etc/issue.net && r:-p wa && r:-k system-locale|key=system-locale","c:auditctl -l -> r:^-w && r:/etc/hosts && r:-p wa && r:-k system-locale|key=system-locale","c:auditctl -l -> r:^-w && r:/etc/network && r:-p wa && r:-k system-locale|key=system-locale","c:auditctl -l -> r:^-w && r:/etc/networks && r:-p wa && r:-k system-locale|key=system-locale"],"condition":"all","directory":"/etc/audit/rules.d","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19174
sca.check.title: Ensure events that modify the system's network environment are collected.
sca.check.description: Record changes to network environment files or system calls. The below parameters monitors the following system calls, and write an audit event on system call exit: - sethostname - set the systems host name - setdomainname - set the systems domain name The files being monitored are: - /etc/issue and /etc/issue.net - messages displayed pre-login - /etc/hosts - file containing host names and associated IP addresses - /etc/networks - symbolic names for networks - /etc/network/ - directory containing network interface scripts and configurations files.
sca.check.rationale: Monitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/network is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records should have a relevant tag associated with them.
sca.check.remediation: Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor events that modify the system's network environment. 64 Bit systems Example: # printf " -a always,exit -F arch=b64 -S sethostname,setdomainname -k system-locale -a always,exit -F arch=b32 -S sethostname,setdomainname -k system-locale -w /etc/issue -p wa -k system-locale -w /etc/issue.net -p wa -k system-locale -w /etc/hosts -p wa -k system-locale -w /etc/networks -p wa -k system-locale -w /etc/network/ -p wa -k system-locale " >> /etc/audit/rules.d/50-system_locale.rules Load audit rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep "enabled") =~ "2" ]]; then printf "Reboot required to load rules\n"; fi 32 Bit systems Follow the same procedures as for 64 bit systems and ignore any entries with b64.
sca.check.compliance.cis: 5.2.3.5
sca.check.compliance.cis_csc_v8: 8.5
sca.check.compliance.cis_csc_v7: 5.5
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.iso_27001-2013: A.12.1.2
sca.check.compliance.mitre_mitigations: M1047
sca.check.compliance.mitre_tactics: TA0003
sca.check.compliance.mitre_techniques: T1562,T1562.006
sca.check.compliance.nist_sp_800-53: AU-3(1),AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.1,10.2.2,10.2.4,10.2.5,10.3
sca.check.compliance.pci_dss_v4.0: 10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5
sca.check.compliance.soc_2: CC5.2,CC7.2
sca.check.directory: ["/etc/audit/rules.d"]
sca.check.result: failed

** Alert 1706006477.665006: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure events that modify user/group information are collected.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19175,"title":"Ensure events that modify user/group information are collected.","description":"Record events affecting the modification of user or group information, including that of passwords and old passwords if in use. - /etc/group - system groups - /etc/passwd - system users - /etc/gshadow - encrypted password for each group - /etc/shadow - system user passwords - /etc/security/opasswd - storage of old passwords if the relevant PAM module is in use The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier \"identity\" in the audit log file.","rationale":"Unexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts.","remediation":"Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor events that modify user/group information. Example: # printf \" -w /etc/group -p wa -k identity -w /etc/passwd -p wa -k identity -w /etc/gshadow -p wa -k identity -w /etc/shadow -p wa -k identity -w /etc/security/opasswd -p wa -k identity \" >> /etc/audit/rules.d/50-identity.rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi.","compliance":{"cis":"5.2.3.8","cis_csc_v8":"8.5","cis_csc_v7":"4.8","cmmc_v2.0":"AU.L2-3.3.1","iso_27001-2013":"A.12.4.3","mitre_mitigations":"M1047","mitre_tactics":"TA0004","mitre_techniques":"T1562,T1562.006","nist_sp_800-53":"AU-3(1),AU-7","pci_dss_v3.2.1":"10.1,10.2.2,10.2.4,10.2.5,10.3","pci_dss_v4.0":"10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5","soc_2":"CC5.2,CC7.2"},"rules":["d:/etc/audit/rules.d","d:/etc/audit/rules.d -> r:\\.+.rules$","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-w && r:/etc/group && r:-p wa && r:-k identity|key=identity","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-w && r:/etc/passwd && r:-p wa && r:-k identity|key=identity","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-w && r:/etc/gshadow && r:-p wa && r:-k identity|key=identity","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-w && r:/etc/shadow && r:-p wa && r:-k identity|key=identity","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-w && r:/etc/security/opasswd && r:-p wa && r:-k identity|key=identity","c:auditctl -l -> r:^-w && r:/etc/group && r:-p wa && r:-k identity|key=identity","c:auditctl -l -> r:^-w && r:/etc/passwd && r:-p wa && r:-k identity|key=identity","c:auditctl -l -> r:^-w && r:/etc/gshadow && r:-p wa && r:-k identity|key=identity","c:auditctl -l -> r:^-w && r:/etc/shadow && r:-p wa && r:-k identity|key=identity","c:auditctl -l -> r:^-w && r:/etc/security/opasswd && r:-p wa && r:-k identity|key=identity"],"condition":"all","directory":"/etc/audit/rules.d","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19175
sca.check.title: Ensure events that modify user/group information are collected.
sca.check.description: Record events affecting the modification of user or group information, including that of passwords and old passwords if in use. - /etc/group - system groups - /etc/passwd - system users - /etc/gshadow - encrypted password for each group - /etc/shadow - system user passwords - /etc/security/opasswd - storage of old passwords if the relevant PAM module is in use The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier "identity" in the audit log file.
sca.check.rationale: Unexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts.
sca.check.remediation: Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor events that modify user/group information. Example: # printf " -w /etc/group -p wa -k identity -w /etc/passwd -p wa -k identity -w /etc/gshadow -p wa -k identity -w /etc/shadow -p wa -k identity -w /etc/security/opasswd -p wa -k identity " >> /etc/audit/rules.d/50-identity.rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep "enabled") =~ "2" ]]; then printf "Reboot required to load rules\n"; fi.
sca.check.compliance.cis: 5.2.3.8
sca.check.compliance.cis_csc_v8: 8.5
sca.check.compliance.cis_csc_v7: 4.8
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.iso_27001-2013: A.12.4.3
sca.check.compliance.mitre_mitigations: M1047
sca.check.compliance.mitre_tactics: TA0004
sca.check.compliance.mitre_techniques: T1562,T1562.006
sca.check.compliance.nist_sp_800-53: AU-3(1),AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.1,10.2.2,10.2.4,10.2.5,10.3
sca.check.compliance.pci_dss_v4.0: 10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5
sca.check.compliance.soc_2: CC5.2,CC7.2
sca.check.directory: ["/etc/audit/rules.d"]
sca.check.result: failed

** Alert 1706006477.670684: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure successful file system mounts are collected.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19176,"title":"Ensure successful file system mounts are collected.","description":"Monitor the use of the mount system call. The mount (and umount) system call controls the mounting and unmounting of file systems. The parameters below configure the system to create an audit record when the mount system call is used by a non-privileged user.","rationale":"It is highly unusual for a non privileged user to mount file systems to the system. While tracking mount commands gives the system administrator evidence that external media may have been mounted (based on a review of the source of the mount and confirming it's an external media type), it does not conclusively indicate that data was exported to the media. System administrators who wish to determine if data were exported, would also have to track successful open, creat and truncate system calls requiring write access to a file under the mount point of the external media file system. This could give a fair indication that a write occurred. The only way to truly prove it, would be to track successful writes to the external media. Tracking write system calls could quickly fill up the audit log and is not recommended. Recommendations on configuration options to track data export to media is beyond the scope of this document.","remediation":"Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor successful file system mounts. 64 Bit systems Example: # { UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) [ -n \"${UID_MIN}\" ] && printf \" -a always,exit -F arch=b32 -S mount -F auid>=$UID_MIN -F auid!=unset -k mounts -a always,exit -F arch=b64 -S mount -F auid>=$UID_MIN -F auid!=unset -k mounts \" >> /etc/audit/rules.d/50-mounts.rules || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\" } Load audit rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi 32 Bit systems Follow the same procedures as for 64 bit systems and ignore any entries with b64.","compliance":{"cis":"5.2.3.10","cis_csc_v8":"8.5","cis_csc_v7":"6.3","cmmc_v2.0":"AU.L2-3.3.1","iso_27001-2013":"A.12.4.1","mitre_mitigations":"M1034","mitre_tactics":"TA0010","mitre_techniques":"T1562,T1562.006","nist_sp_800-53":"CM-6","pci_dss_v3.2.1":"10.1,10.2.2,10.2.4,10.2.5,10.3","pci_dss_v4.0":"10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5","soc_2":"CC5.2,CC7.2"},"rules":["d:/etc/audit/rules.d","d:/etc/audit/rules.d -> r:\\.+.rules$","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-a && r:always,exit|exit,always && r:-F arch=b32 && r:-S mount && r:-F auid>=\\d+ && r:-F auid!=-1|-F auid!=4294967295|-F auid!=unset && r:-k mounts|key=mounts","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-a && r:always,exit|exit,always && r:-F arch=b64 && r:-S mount && r:-F auid>=\\d+ && r:-F auid!=-1|-F auid!=4294967295|-F auid!=unset && r:-k mounts|key=mounts","c:auditctl -l -> r:^-a && r:always,exit|exit,always && r:-F arch=b64 && r:-S mount && r:-F auid>=\\d+ && r:-F auid!=-1|-F auid!=4294967295|-F auid!=unset && r:-k mounts|key=mounts","c:auditctl -l -> r:^-a && r:always,exit|exit,always && r:-F arch=b32 && r:-S mount && r:-F auid>=\\d+ && r:-F auid!=-1|-F auid!=4294967295|-F auid!=unset && r:-k mounts|key=mounts"],"condition":"all","directory":"/etc/audit/rules.d","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19176
sca.check.title: Ensure successful file system mounts are collected.
sca.check.description: Monitor the use of the mount system call. The mount (and umount) system call controls the mounting and unmounting of file systems. The parameters below configure the system to create an audit record when the mount system call is used by a non-privileged user.
sca.check.rationale: It is highly unusual for a non privileged user to mount file systems to the system. While tracking mount commands gives the system administrator evidence that external media may have been mounted (based on a review of the source of the mount and confirming it's an external media type), it does not conclusively indicate that data was exported to the media. System administrators who wish to determine if data were exported, would also have to track successful open, creat and truncate system calls requiring write access to a file under the mount point of the external media file system. This could give a fair indication that a write occurred. The only way to truly prove it, would be to track successful writes to the external media. Tracking write system calls could quickly fill up the audit log and is not recommended. Recommendations on configuration options to track data export to media is beyond the scope of this document.
sca.check.remediation: Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor successful file system mounts. 64 Bit systems Example: # { UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs) [ -n "${UID_MIN}" ] && printf " -a always,exit -F arch=b32 -S mount -F auid>=$UID_MIN -F auid!=unset -k mounts -a always,exit -F arch=b64 -S mount -F auid>=$UID_MIN -F auid!=unset -k mounts " >> /etc/audit/rules.d/50-mounts.rules || printf "ERROR: Variable 'UID_MIN' is unset.\n" } Load audit rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep "enabled") =~ "2" ]]; then printf "Reboot required to load rules\n"; fi 32 Bit systems Follow the same procedures as for 64 bit systems and ignore any entries with b64.
sca.check.compliance.cis: 5.2.3.10
sca.check.compliance.cis_csc_v8: 8.5
sca.check.compliance.cis_csc_v7: 6.3
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_mitigations: M1034
sca.check.compliance.mitre_tactics: TA0010
sca.check.compliance.mitre_techniques: T1562,T1562.006
sca.check.compliance.nist_sp_800-53: CM-6
sca.check.compliance.pci_dss_v3.2.1: 10.1,10.2.2,10.2.4,10.2.5,10.3
sca.check.compliance.pci_dss_v4.0: 10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5
sca.check.compliance.soc_2: CC5.2,CC7.2
sca.check.directory: ["/etc/audit/rules.d"]
sca.check.result: failed

** Alert 1706006477.677468: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure session initiation information is collected.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19177,"title":"Ensure session initiation information is collected.","description":"Monitor session initiation events. The parameters in this section track changes to the files associated with session events. - /var/run/utmp - tracks all currently logged in users. - /var/log/wtmp - file tracks logins, logouts, shutdown, and reboot events. - /var/log/btmp - keeps track of failed login attempts and can be read by entering the command /usr/bin/last -f /var/log/btmp. All audit records will be tagged with the identifier \"session.\".","rationale":"Monitoring these files for changes could alert a system administrator to logins occurring at unusual hours, which could indicate intruder activity (i.e. a user logging in at a time when they do not normally log in).","remediation":"Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor session initiation information. Example: # printf \" -w /var/run/utmp -p wa -k session -w /var/log/wtmp -p wa -k session -w /var/log/btmp -p wa -k session \" >> /etc/audit/rules.d/50-session.rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi.","compliance":{"cis":"5.2.3.11","cis_csc_v8":"8.5","cis_csc_v7":"4.9,16.13","cmmc_v2.0":"AU.L2-3.3.1","iso_27001-2013":"A.9.4.2","mitre_mitigations":"M1047","mitre_tactics":"TA0001","mitre_techniques":"T1562,T1562.006","nist_sp_800-53":"AU-3,AU-3(1)","pci_dss_v3.2.1":"10.1,10.2.2,10.2.4,10.2.5,10.3","pci_dss_v4.0":"10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5","soc_2":"CC5.2,CC7.2"},"rules":["d:/etc/audit/rules.d","d:/etc/audit/rules.d -> r:\\.+.rules$","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-w && r:/var/run/utmp && r:-p wa && r:-k session|key=session","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-w && r:/var/log/wtmp && r:-p wa && r:-k session|key=session","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-w && r:/var/log/btmp && r:-p wa && r:-k session|key=session","c:auditctl -l -> r:^-w && r:/var/run/utmp && r:-p wa && r:-k session|key=session","c:auditctl -l -> r:^-w && r:/var/log/wtmp && r:-p wa && r:-k session|key=session","c:auditctl -l -> r:^-w && r:/var/log/btmp && r:-p wa && r:-k session|key=session"],"condition":"all","directory":"/etc/audit/rules.d","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19177
sca.check.title: Ensure session initiation information is collected.
sca.check.description: Monitor session initiation events. The parameters in this section track changes to the files associated with session events. - /var/run/utmp - tracks all currently logged in users. - /var/log/wtmp - file tracks logins, logouts, shutdown, and reboot events. - /var/log/btmp - keeps track of failed login attempts and can be read by entering the command /usr/bin/last -f /var/log/btmp. All audit records will be tagged with the identifier "session.".
sca.check.rationale: Monitoring these files for changes could alert a system administrator to logins occurring at unusual hours, which could indicate intruder activity (i.e. a user logging in at a time when they do not normally log in).
sca.check.remediation: Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor session initiation information. Example: # printf " -w /var/run/utmp -p wa -k session -w /var/log/wtmp -p wa -k session -w /var/log/btmp -p wa -k session " >> /etc/audit/rules.d/50-session.rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep "enabled") =~ "2" ]]; then printf "Reboot required to load rules\n"; fi.
sca.check.compliance.cis: 5.2.3.11
sca.check.compliance.cis_csc_v8: 8.5
sca.check.compliance.cis_csc_v7: 4.9,16.13
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.iso_27001-2013: A.9.4.2
sca.check.compliance.mitre_mitigations: M1047
sca.check.compliance.mitre_tactics: TA0001
sca.check.compliance.mitre_techniques: T1562,T1562.006
sca.check.compliance.nist_sp_800-53: AU-3,AU-3(1)
sca.check.compliance.pci_dss_v3.2.1: 10.1,10.2.2,10.2.4,10.2.5,10.3
sca.check.compliance.pci_dss_v4.0: 10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5
sca.check.compliance.soc_2: CC5.2,CC7.2
sca.check.directory: ["/etc/audit/rules.d"]
sca.check.result: failed

** Alert 1706006477.682340: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure login and logout events are collected.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19178,"title":"Ensure login and logout events are collected.","description":"Monitor login and logout events. The parameters below track changes to files associated with login/logout events. - /var/log/lastlog - maintain records of the last time a user successfully logged in. - /var/run/faillock - directory maintains records of login failures via the pam_faillock module.","rationale":"Monitoring login/logout events could provide a system administrator with information associated with brute force attacks against user logins.","remediation":"Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor login and logout events. Example: # printf \" -w /var/log/lastlog -p wa -k logins -w /var/run/faillock -p wa -k logins \" >> /etc/audit/rules.d/50-login.rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi.","compliance":{"cis":"5.2.3.12","cis_csc_v8":"8.5","cis_csc_v7":"4.9,16.11,16.13","cmmc_v2.0":"AU.L2-3.3.1","iso_27001-2013":"A.8.1.3,A.9.4.2","mitre_mitigations":"M1047","mitre_tactics":"TA0001","mitre_techniques":"T1562,T1562.006","nist_sp_800-53":"AU-3,AU-3(1)","pci_dss_v3.2.1":"10.1,10.2.2,10.2.4,10.2.5,10.3","pci_dss_v4.0":"10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5","soc_2":"CC5.2,CC7.2"},"rules":["d:/etc/audit/rules.d","d:/etc/audit/rules.d -> r:\\.+.rules$","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-w && r:/var/log/lastlog && r:-p wa && r:-k logins|key=logins","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-w && r:/var/run/faillock && r:-p wa && r:-k logins|key=logins","c:auditctl -l -> r:^-w && r:/var/log/lastlog && r:-p wa && r:-k logins|key=logins","c:auditctl -l -> r:^-w && r:/var/run/faillock && r:-p wa && r:-k logins|key=logins"],"condition":"all","directory":"/etc/audit/rules.d","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19178
sca.check.title: Ensure login and logout events are collected.
sca.check.description: Monitor login and logout events. The parameters below track changes to files associated with login/logout events. - /var/log/lastlog - maintain records of the last time a user successfully logged in. - /var/run/faillock - directory maintains records of login failures via the pam_faillock module.
sca.check.rationale: Monitoring login/logout events could provide a system administrator with information associated with brute force attacks against user logins.
sca.check.remediation: Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor login and logout events. Example: # printf " -w /var/log/lastlog -p wa -k logins -w /var/run/faillock -p wa -k logins " >> /etc/audit/rules.d/50-login.rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep "enabled") =~ "2" ]]; then printf "Reboot required to load rules\n"; fi.
sca.check.compliance.cis: 5.2.3.12
sca.check.compliance.cis_csc_v8: 8.5
sca.check.compliance.cis_csc_v7: 4.9,16.11,16.13
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.iso_27001-2013: A.8.1.3,A.9.4.2
sca.check.compliance.mitre_mitigations: M1047
sca.check.compliance.mitre_tactics: TA0001
sca.check.compliance.mitre_techniques: T1562,T1562.006
sca.check.compliance.nist_sp_800-53: AU-3,AU-3(1)
sca.check.compliance.pci_dss_v3.2.1: 10.1,10.2.2,10.2.4,10.2.5,10.3
sca.check.compliance.pci_dss_v4.0: 10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5
sca.check.compliance.soc_2: CC5.2,CC7.2
sca.check.directory: ["/etc/audit/rules.d"]
sca.check.result: failed

** Alert 1706006477.686508: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure file deletion events by users are collected.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19179,"title":"Ensure file deletion events by users are collected.","description":"Monitor the use of system calls associated with the deletion or renaming of files and file attributes. This configuration statement sets up monitoring for: - unlink - remove a file - unlinkat - remove a file attribute - rename - rename a file - renameat rename a file attribute system calls and tags them with the identifier \"delete\".","rationale":"Monitoring these calls from non-privileged users could provide a system administrator with evidence that inappropriate removal of files and file attributes associated with protected files is occurring. While this audit option will look at all events, system administrators will want to look for specific privileged files that are being deleted or altered.","remediation":"Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor file deletion events by users. 64 Bit systems Example: # { UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) [ -n \"${UID_MIN}\" ] && printf \" -a always,exit -F arch=b64 -S rename,unlink,unlinkat,renameat -F auid>=${UID_MIN} -F auid!=unset -F key=delete -a always,exit -F arch=b32 -S rename,unlink,unlinkat,renameat -F auid>=${UID_MIN} -F auid!=unset -F key=delete \" >> /etc/audit/rules.d/50-delete.rules || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\" } Load audit rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi 32 Bit systems Follow the same procedures as for 64 bit systems and ignore any entries with b64.","compliance":{"cis":"5.2.3.13","cis_csc_v8":"8.5","cis_csc_v7":"6.2","cmmc_v2.0":"AU.L2-3.3.1","iso_27001-2013":"A.12.4.1","mitre_mitigations":"M1047","mitre_tactics":"TA0005","mitre_techniques":"T1562,T1562.006","nist_sp_800-53":"AU-3(1),AU-7","pci_dss_v3.2.1":"10.1,10.2.2,10.2.4,10.2.5,10.3","pci_dss_v4.0":"10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5","soc_2":"CC5.2,CC7.2"},"rules":["d:/etc/audit/rules.d","d:/etc/audit/rules.d -> r:\\.+.rules$","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-a && r:always,exit|exit,always && r:-F arch=b64 && r:-S && r:unlink && r:unlinkat && r:rename && r:renameat && r:-F auid>=\\d+ && r:-F auid!=-1|-F auid!=4294967295|-F auid!=unset && r:-k delete|key=delete","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-a && r:always,exit|exit,always && r:-F arch=b32 && r:-S && r:unlink && r:unlinkat && r:rename && r:renameat && r:-F auid>=\\d+ && r:-F auid!=-1|-F auid!=4294967295|-F auid!=unset && r:-k delete|key=delete","c:auditctl -l -> r:^-a && r:always,exit|exit,always && r:-F arch=b64 && r:-S && r:unlink && r:unlinkat && r:rename && r:renameat && r:-F auid>=\\d+ && r:-F auid!=-1|-F auid!=4294967295|-F auid!=unset && r:-k delete|key=delete","c:auditctl -l -> r:^-a && r:always,exit|exit,always && r:-F arch=b32 && r:-S && r:unlink && r:unlinkat && r:rename && r:renameat && r:-F auid>=\\d+ && r:-F auid!=-1|-F auid!=4294967295|-F auid!=unset && r:-k delete|key=delete"],"condition":"all","directory":"/etc/audit/rules.d","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19179
sca.check.title: Ensure file deletion events by users are collected.
sca.check.description: Monitor the use of system calls associated with the deletion or renaming of files and file attributes. This configuration statement sets up monitoring for: - unlink - remove a file - unlinkat - remove a file attribute - rename - rename a file - renameat rename a file attribute system calls and tags them with the identifier "delete".
sca.check.rationale: Monitoring these calls from non-privileged users could provide a system administrator with evidence that inappropriate removal of files and file attributes associated with protected files is occurring. While this audit option will look at all events, system administrators will want to look for specific privileged files that are being deleted or altered.
sca.check.remediation: Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor file deletion events by users. 64 Bit systems Example: # { UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs) [ -n "${UID_MIN}" ] && printf " -a always,exit -F arch=b64 -S rename,unlink,unlinkat,renameat -F auid>=${UID_MIN} -F auid!=unset -F key=delete -a always,exit -F arch=b32 -S rename,unlink,unlinkat,renameat -F auid>=${UID_MIN} -F auid!=unset -F key=delete " >> /etc/audit/rules.d/50-delete.rules || printf "ERROR: Variable 'UID_MIN' is unset.\n" } Load audit rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep "enabled") =~ "2" ]]; then printf "Reboot required to load rules\n"; fi 32 Bit systems Follow the same procedures as for 64 bit systems and ignore any entries with b64.
sca.check.compliance.cis: 5.2.3.13
sca.check.compliance.cis_csc_v8: 8.5
sca.check.compliance.cis_csc_v7: 6.2
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_mitigations: M1047
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1562,T1562.006
sca.check.compliance.nist_sp_800-53: AU-3(1),AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.1,10.2.2,10.2.4,10.2.5,10.3
sca.check.compliance.pci_dss_v4.0: 10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5
sca.check.compliance.soc_2: CC5.2,CC7.2
sca.check.directory: ["/etc/audit/rules.d"]
sca.check.result: failed

** Alert 1706006477.692616: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure events that modify the system's Mandatory Access Controls are collected.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19180,"title":"Ensure events that modify the system's Mandatory Access Controls are collected.","description":"Monitor AppArmor, an implementation of mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the /etc/apparmor/ and /etc/apparmor.d/ directories. Note: If a different Mandatory Access Control method is used, changes to the corresponding directories should be audited.","rationale":"Changes to files in the /etc/apparmor/ and /etc/apparmor.d/ directories could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the system.","remediation":"Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor events that modify the system's Mandatory Access Controls. Example: # printf \" -w /etc/apparmor/ -p wa -k MAC-policy -w /etc/apparmor.d/ -p wa -k MAC-policy \" >> /etc/audit/rules.d/50-MAC-policy.rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi.","compliance":{"cis":"5.2.3.14","cis_csc_v8":"8.5","cis_csc_v7":"5.5","cmmc_v2.0":"AU.L2-3.3.1","iso_27001-2013":"A.12.1.2","mitre_mitigations":"M1022","mitre_tactics":"TA0004","mitre_techniques":"T1562,T1562.006","nist_sp_800-53":"AU-3(1),AU-7","pci_dss_v3.2.1":"10.1,10.2.2,10.2.4,10.2.5,10.3","pci_dss_v4.0":"10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5","soc_2":"CC5.2,CC7.2"},"rules":["d:/etc/audit/rules.d","d:/etc/audit/rules.d -> r:\\.+.rules$","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-w && r:/etc/apparmor && r:-p wa && r:-k MAC-policy|key=MAC-policy","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-w && r:/etc/apparmor.d && r:-p wa && r:-k MAC-policy|key=MAC-policy","c:auditctl -l -> r:^-w && r:/etc/apparmor && r:-p wa && r:-k MAC-policy|key=MAC-policy","c:auditctl -l -> r:^-w && r:/etc/apparmor.d && r:-p wa && r:-k MAC-policy|key=MAC-policy"],"condition":"all","directory":"/etc/audit/rules.d","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19180
sca.check.title: Ensure events that modify the system's Mandatory Access Controls are collected.
sca.check.description: Monitor AppArmor, an implementation of mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the /etc/apparmor/ and /etc/apparmor.d/ directories. Note: If a different Mandatory Access Control method is used, changes to the corresponding directories should be audited.
sca.check.rationale: Changes to files in the /etc/apparmor/ and /etc/apparmor.d/ directories could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the system.
sca.check.remediation: Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor events that modify the system's Mandatory Access Controls. Example: # printf " -w /etc/apparmor/ -p wa -k MAC-policy -w /etc/apparmor.d/ -p wa -k MAC-policy " >> /etc/audit/rules.d/50-MAC-policy.rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep "enabled") =~ "2" ]]; then printf "Reboot required to load rules\n"; fi.
sca.check.compliance.cis: 5.2.3.14
sca.check.compliance.cis_csc_v8: 8.5
sca.check.compliance.cis_csc_v7: 5.5
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.iso_27001-2013: A.12.1.2
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0004
sca.check.compliance.mitre_techniques: T1562,T1562.006
sca.check.compliance.nist_sp_800-53: AU-3(1),AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.1,10.2.2,10.2.4,10.2.5,10.3
sca.check.compliance.pci_dss_v4.0: 10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5
sca.check.compliance.soc_2: CC5.2,CC7.2
sca.check.directory: ["/etc/audit/rules.d"]
sca.check.result: failed

** Alert 1706006477.697296: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure successful and unsuccessful attempts to use the chcon command are recorded.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19181,"title":"Ensure successful and unsuccessful attempts to use the chcon command are recorded.","description":"The operating system must generate audit records for successful/unsuccessful uses of the chcon command.","rationale":"The chcon command is used to change file security context. Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. Audit records can be generated from various components within the information system (e.g., module or policy filter).","remediation":"Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the chcon command. 64 Bit systems Example: # { UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) [ -n \"${UID_MIN}\" ] && printf \" -a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k perm_chng \" >> /etc/audit/rules.d/50-perm_chng.rules || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\" } Load audit rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi 32 Bit systems Follow the same procedures as for 64 bit systems and ignore any entries with b64.","compliance":{"cis":"5.2.3.15","cis_csc_v8":"8.2","cis_csc_v7":"6.2","cmmc_v2.0":"AU.L2-3.3.1","hipaa":"164.312(b)","iso_27001-2013":"A.12.4.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1562,T1562.006","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"10.2,10.3","pci_dss_v4.0":"10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2"},"rules":["d:/etc/audit/rules.d","d:/etc/audit/rules.d -> r:\\.+.rules$","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-a && r:always,exit|exit,always && r:-F path=/usr/bin/chcon && r:-F perm=x && r:-F auid>=\\d+ && r:-F auid!=-1|-F auid!=4294967295|-F auid!=unset && r:-k perm_chng|key=perm_chng","c:auditctl -l -> r:^-a && r:always,exit|exit,always && r:-F path=/usr/bin/chcon && r:-F perm=x && r:-F auid>=\\d+ && r:-F auid!=-1|-F auid!=4294967295|-F auid!=unset && r:-k perm_chng|key=perm_chng"],"condition":"all","directory":"/etc/audit/rules.d","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19181
sca.check.title: Ensure successful and unsuccessful attempts to use the chcon command are recorded.
sca.check.description: The operating system must generate audit records for successful/unsuccessful uses of the chcon command.
sca.check.rationale: The chcon command is used to change file security context. Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. Audit records can be generated from various components within the information system (e.g., module or policy filter).
sca.check.remediation: Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the chcon command. 64 Bit systems Example: # { UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs) [ -n "${UID_MIN}" ] && printf " -a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k perm_chng " >> /etc/audit/rules.d/50-perm_chng.rules || printf "ERROR: Variable 'UID_MIN' is unset.\n" } Load audit rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep "enabled") =~ "2" ]]; then printf "Reboot required to load rules\n"; fi 32 Bit systems Follow the same procedures as for 64 bit systems and ignore any entries with b64.
sca.check.compliance.cis: 5.2.3.15
sca.check.compliance.cis_csc_v8: 8.2
sca.check.compliance.cis_csc_v7: 6.2
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.hipaa: 164.312(b)
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1562,T1562.006
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.2,10.3
sca.check.compliance.pci_dss_v4.0: 10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2
sca.check.directory: ["/etc/audit/rules.d"]
sca.check.result: failed

** Alert 1706006477.702501: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure successful and unsuccessful attempts to use the setfacl command are recorded.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19182,"title":"Ensure successful and unsuccessful attempts to use the setfacl command are recorded.","description":"The operating system must generate audit records for successful/unsuccessful uses of the setfacl command.","rationale":"This utility sets Access Control Lists (ACLs) of files and directories. Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. Audit records can be generated from various components within the information system (e.g., module or policy filter).","remediation":"Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the setfacl command. 64 Bit systems Example: # { UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) [ -n \"${UID_MIN}\" ] && printf \" -a always,exit -F path=/usr/bin/setfacl -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k perm_chng \" >> /etc/audit/rules.d/50-perm_chng.rules || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\" } Load audit rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi 32 Bit systems Follow the same procedures as for 64 bit systems and ignore any entries with b64.","compliance":{"cis":"5.2.3.16","cis_csc_v8":"8.2","cis_csc_v7":"6.2","cmmc_v2.0":"AU.L2-3.3.1","hipaa":"164.312(b)","iso_27001-2013":"A.12.4.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1562,T1562.006","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"10.2,10.3","pci_dss_v4.0":"10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2"},"rules":["d:/etc/audit/rules.d","d:/etc/audit/rules.d -> r:\\.+.rules$","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-a && r:always,exit|exit,always && r:-F path=/usr/bin/setfacl && r:-F perm=x && r:-F auid>=\\d+ && r:-F auid!=-1|-F auid!=4294967295|-F auid!=unset && r:-k perm_chng|-F key=perm_chng","c:auditctl -l -> r:^-a && r:always,exit|exit,always && r:-F path=/usr/bin/setfacl && r:-F perm=x && r:-F auid>=\\d+ && r:-F auid!=-1|-F auid!=4294967295|-F auid!=unset && r:-k perm_chng|-F key=perm_chng"],"condition":"all","directory":"/etc/audit/rules.d","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19182
sca.check.title: Ensure successful and unsuccessful attempts to use the setfacl command are recorded.
sca.check.description: The operating system must generate audit records for successful/unsuccessful uses of the setfacl command.
sca.check.rationale: This utility sets Access Control Lists (ACLs) of files and directories. Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. Audit records can be generated from various components within the information system (e.g., module or policy filter).
sca.check.remediation: Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the setfacl command. 64 Bit systems Example: # { UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs) [ -n "${UID_MIN}" ] && printf " -a always,exit -F path=/usr/bin/setfacl -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k perm_chng " >> /etc/audit/rules.d/50-perm_chng.rules || printf "ERROR: Variable 'UID_MIN' is unset.\n" } Load audit rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep "enabled") =~ "2" ]]; then printf "Reboot required to load rules\n"; fi 32 Bit systems Follow the same procedures as for 64 bit systems and ignore any entries with b64.
sca.check.compliance.cis: 5.2.3.16
sca.check.compliance.cis_csc_v8: 8.2
sca.check.compliance.cis_csc_v7: 6.2
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.hipaa: 164.312(b)
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1562,T1562.006
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.2,10.3
sca.check.compliance.pci_dss_v4.0: 10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2
sca.check.directory: ["/etc/audit/rules.d"]
sca.check.result: failed

** Alert 1706006477.707760: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure successful and unsuccessful attempts to use the chacl command are recorded.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19183,"title":"Ensure successful and unsuccessful attempts to use the chacl command are recorded.","description":"The operating system must generate audit records for successful/unsuccessful uses of the chacl command. chacl is an IRIX-compatibility command, and is maintained for those users who are familiar with its use from either XFS or IRIX.","rationale":"chacl changes the ACL(s) for a file or directory. Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. Audit records can be generated from various components within the information system (e.g., module or policy filter).","remediation":"Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the chacl command. 64 Bit systems Example: # { UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) [ -n \"${UID_MIN}\" ] && printf \" -a always,exit -F path=/usr/bin/chacl -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k perm_chng \" >> /etc/audit/rules.d/50-perm_chng.rules || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\" } Load audit rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi 32 Bit systems Follow the same procedures as for 64 bit systems and ignore any entries with b64.","compliance":{"cis":"5.2.3.17","cis_csc_v8":"8.2","cis_csc_v7":"6.2","cmmc_v2.0":"AU.L2-3.3.1","hipaa":"164.312(b)","iso_27001-2013":"A.12.4.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1562,T1562.006","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"10.2,10.3","pci_dss_v4.0":"10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2"},"rules":["d:/etc/audit/rules.d","d:/etc/audit/rules.d -> r:\\.+.rules$","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-a && r:always,exit|exit,always && r:-F path=/usr/bin/chacl && r:-F perm=x && r:-F auid>=\\d+ && r:-F auid!=-1|-F auid!=4294967295|-F auid!=unset && r:-k perm_chng|-F key=perm_chng","c:auditctl -l -> r:^-a && r:always,exit|exit,always && r:-F path=/usr/bin/chacl && r:-F perm=x && r:-F auid>=\\d+ && r:-F auid!=-1|-F auid!=4294967295|-F auid!=unset && r:-k perm_chng|-F key=perm_chng"],"condition":"all","directory":"/etc/audit/rules.d","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19183
sca.check.title: Ensure successful and unsuccessful attempts to use the chacl command are recorded.
sca.check.description: The operating system must generate audit records for successful/unsuccessful uses of the chacl command. chacl is an IRIX-compatibility command, and is maintained for those users who are familiar with its use from either XFS or IRIX.
sca.check.rationale: chacl changes the ACL(s) for a file or directory. Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. Audit records can be generated from various components within the information system (e.g., module or policy filter).
sca.check.remediation: Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the chacl command. 64 Bit systems Example: # { UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs) [ -n "${UID_MIN}" ] && printf " -a always,exit -F path=/usr/bin/chacl -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k perm_chng " >> /etc/audit/rules.d/50-perm_chng.rules || printf "ERROR: Variable 'UID_MIN' is unset.\n" } Load audit rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep "enabled") =~ "2" ]]; then printf "Reboot required to load rules\n"; fi 32 Bit systems Follow the same procedures as for 64 bit systems and ignore any entries with b64.
sca.check.compliance.cis: 5.2.3.17
sca.check.compliance.cis_csc_v8: 8.2
sca.check.compliance.cis_csc_v7: 6.2
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.hipaa: 164.312(b)
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1562,T1562.006
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.2,10.3
sca.check.compliance.pci_dss_v4.0: 10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2
sca.check.directory: ["/etc/audit/rules.d"]
sca.check.result: failed

** Alert 1706006477.713211: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure successful and unsuccessful attempts to use the usermod command are recorded.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19184,"title":"Ensure successful and unsuccessful attempts to use the usermod command are recorded.","description":"The operating system must generate audit records for successful/unsuccessful uses of the usermod command.","rationale":"The usermod command modifies the system account files to reflect the changes that are specified on the command line. Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. Audit records can be generated from various components within the information system (e.g., module or policy filter).","remediation":"Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the usermod command. 64 Bit systems Example: # { UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) [ -n \"${UID_MIN}\" ] && printf \" -a always,exit -F path=/usr/sbin/usermod -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k usermod \" >> /etc/audit/rules.d/50-usermod.rules || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\" } Load audit rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi 32 Bit systems Follow the same procedures as for 64 bit systems and ignore any entries with b64.","compliance":{"cis":"5.2.3.18","cis_csc_v8":"8.2","cis_csc_v7":"6.2","cmmc_v2.0":"AU.L2-3.3.1","hipaa":"164.312(b)","iso_27001-2013":"A.12.4.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1562,T1562.006","nist_sp_800-53":"AU-7","pci_dss_v3.2.1":"10.2,10.3","pci_dss_v4.0":"10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2"},"rules":["d:/etc/audit/rules.d","d:/etc/audit/rules.d -> r:\\.+.rules$","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-a && r:always,exit|exit,always && r:-F path=/usr/sbin/usermod && r:-F perm=x && r:-F auid>=\\d+ && r:-F auid!=-1|-F auid!=4294967295|-F auid!=unset && r:-k usermod|-F key=usermod","c:auditctl -l -> r:^-a && r:always,exit|exit,always && r:-F path=/usr/sbin/usermod && r:-F perm=x && r:-F auid>=\\d+ && r:-F auid!=-1|-F auid!=4294967295|-F auid!=unset && r:-k usermod|-F key=usermod"],"condition":"all","directory":"/etc/audit/rules.d","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19184
sca.check.title: Ensure successful and unsuccessful attempts to use the usermod command are recorded.
sca.check.description: The operating system must generate audit records for successful/unsuccessful uses of the usermod command.
sca.check.rationale: The usermod command modifies the system account files to reflect the changes that are specified on the command line. Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. Audit records can be generated from various components within the information system (e.g., module or policy filter).
sca.check.remediation: Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the usermod command. 64 Bit systems Example: # { UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs) [ -n "${UID_MIN}" ] && printf " -a always,exit -F path=/usr/sbin/usermod -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k usermod " >> /etc/audit/rules.d/50-usermod.rules || printf "ERROR: Variable 'UID_MIN' is unset.\n" } Load audit rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep "enabled") =~ "2" ]]; then printf "Reboot required to load rules\n"; fi 32 Bit systems Follow the same procedures as for 64 bit systems and ignore any entries with b64.
sca.check.compliance.cis: 5.2.3.18
sca.check.compliance.cis_csc_v8: 8.2
sca.check.compliance.cis_csc_v7: 6.2
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.hipaa: 164.312(b)
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1562,T1562.006
sca.check.compliance.nist_sp_800-53: AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.2,10.3
sca.check.compliance.pci_dss_v4.0: 10.2.1,10.2.1.1,10.2.1.2,10.2.1.3,10.2.1.4,10.2.1.5,10.2.1.6,10.2.1.7,10.2.2,5.3.4,6.4.1,6.4.2
sca.check.directory: ["/etc/audit/rules.d"]
sca.check.result: failed

** Alert 1706006477.718548: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure kernel module loading unloading and modification is collected.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19185,"title":"Ensure kernel module loading unloading and modification is collected.","description":"Monitor the loading and unloading of kernel modules. All the loading / listing / dependency checking of modules is done by kmod via symbolic links. The following system calls control loading and unloading of modules: - init_module - load a module - finit_module - load a module (used when the overhead of using cryptographically signed modules to determine the authenticity of a module can be avoided) - delete_module - delete a module - create_module - create a loadable module entry - query_module - query the kernel for various bits pertaining to modules Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of modules.","rationale":"Monitoring the use of all the various ways to manipulate kernel modules could provide system administrators with evidence that an unauthorized change was made to a kernel module, possibly compromising the security of the system.","remediation":"Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor kernel module modification. 64 Bit systems Example: # { UID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs) [ -n \"${UID_MIN}\" ] && printf \" -a always,exit -F arch=b64 -S init_module,finit_module,delete_module,create_module,query_module -F auid>=${UID_MIN} -F auid!=unset -k kernel_modules -a always,exit -F path=/usr/bin/kmod -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k kernel_modules \" >> /etc/audit/rules.d/50-kernel_modules.rules || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\" } Load audit rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi.","compliance":{"cis":"5.2.3.19","cis_csc_v8":"8.5","cis_csc_v7":"6.2","cmmc_v2.0":"AU.L2-3.3.1","iso_27001-2013":"A.12.4.1","mitre_mitigations":"M1047","mitre_tactics":"TA0004","mitre_techniques":"T1562,T1562.006","nist_sp_800-53":"AU-3(1),AU-7","pci_dss_v3.2.1":"10.1,10.2.2,10.2.4,10.2.5,10.3","pci_dss_v4.0":"10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5","soc_2":"CC5.2,CC7.2"},"rules":["d:/etc/audit/rules.d","d:/etc/audit/rules.d -> r:\\.+.rules$","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-a && r:always,exit|exit,always && r:-F arch=b64|-F arch=b32 && r:-S && r:init_module && r:finit_module && r:delete_module && r:create_module && r:query_module && r:-F auid>=\\d+ && r:-F auid!=-1|-F auid!=4294967295|-F auid!=unset && r:-k kernel_modules|-F key=kernel_modules","d:/etc/audit/rules.d -> r:\\.+.rules$ -> r:^-a && r:always,exit|exit,always && r:-F path=/usr/bin/kmod && r:-F perm=x && r:-F auid>=\\d+ && r:-F auid!=-1|-F auid!=4294967295|-F auid!=unset && r:-k kernel_modules|-F key=kernel_modules","c:auditctl -l -> r:^-a && r:always,exit|exit,always && r:-F arch=b64|-F arch=b32 && r:-S && r:init_module && r:finit_module && r:delete_module && r:create_module && r:query_module && r:-F auid>=\\d+ && r:-F auid!=-1|-F auid!=4294967295|-F auid!=unset && r:-k kernel_modules|-F key=kernel_modules","c:auditctl -l-> r:^-a && r:always,exit|exit,always && r:-F path=/usr/bin/kmod && r:-F perm=x && r:-F auid>=\\d+ && r:-F auid!=-1|-F auid!=4294967295|-F auid!=unset && r:-k kernel_modules|-F key=kernel_modules","c:ls -l /usr/sbin/lsmod -> r:/bin/kmod","c:ls -l /usr/sbin/rmmod -> r:/bin/kmod","c:ls -l /usr/sbin/insmod -> r:/bin/kmod","c:ls -l /usr/sbin/modinfo -> r:/bin/kmod","c:ls -l /usr/sbin/modprobe -> r:/bin/kmod","c:ls -l /usr/sbin/depmod -> r:/bin/kmod"],"condition":"all","directory":"/etc/audit/rules.d","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19185
sca.check.title: Ensure kernel module loading unloading and modification is collected.
sca.check.description: Monitor the loading and unloading of kernel modules. All the loading / listing / dependency checking of modules is done by kmod via symbolic links. The following system calls control loading and unloading of modules: - init_module - load a module - finit_module - load a module (used when the overhead of using cryptographically signed modules to determine the authenticity of a module can be avoided) - delete_module - delete a module - create_module - create a loadable module entry - query_module - query the kernel for various bits pertaining to modules Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of modules.
sca.check.rationale: Monitoring the use of all the various ways to manipulate kernel modules could provide system administrators with evidence that an unauthorized change was made to a kernel module, possibly compromising the security of the system.
sca.check.remediation: Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor kernel module modification. 64 Bit systems Example: # { UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs) [ -n "${UID_MIN}" ] && printf " -a always,exit -F arch=b64 -S init_module,finit_module,delete_module,create_module,query_module -F auid>=${UID_MIN} -F auid!=unset -k kernel_modules -a always,exit -F path=/usr/bin/kmod -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k kernel_modules " >> /etc/audit/rules.d/50-kernel_modules.rules || printf "ERROR: Variable 'UID_MIN' is unset.\n" } Load audit rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep "enabled") =~ "2" ]]; then printf "Reboot required to load rules\n"; fi.
sca.check.compliance.cis: 5.2.3.19
sca.check.compliance.cis_csc_v8: 8.5
sca.check.compliance.cis_csc_v7: 6.2
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_mitigations: M1047
sca.check.compliance.mitre_tactics: TA0004
sca.check.compliance.mitre_techniques: T1562,T1562.006
sca.check.compliance.nist_sp_800-53: AU-3(1),AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.1,10.2.2,10.2.4,10.2.5,10.3
sca.check.compliance.pci_dss_v4.0: 10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5
sca.check.compliance.soc_2: CC5.2,CC7.2
sca.check.directory: ["/etc/audit/rules.d"]
sca.check.result: failed

** Alert 1706006477.725404: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:17 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure the audit configuration is immutable.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19186,"title":"Ensure the audit configuration is immutable.","description":"Set system audit so that audit rules cannot be modified with auditctl. Setting the flag \"-e 2\" forces audit to be put in immutable mode. Audit changes can only be made on system reboot. Note: This setting will require the system to be rebooted to update the active auditd configuration settings.","rationale":"In immutable mode, unauthorized users cannot execute changes to the audit system to potentially hide malicious activity and then put the audit rules back. Users would most likely notice a system reboot and that could alert administrators of an attempt to make unauthorized audit changes.","remediation":"Edit or create the file /etc/audit/rules.d/99-finalize.rules and add the line -e 2 at the end of the file: Example: # printf -- \"-e 2 \" >> /etc/audit/rules.d/99-finalize.rules Load audit rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi.","compliance":{"cis":"5.2.3.20","cis_csc_v8":"3.3,8.5","cis_csc_v7":"6.2,6.3","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,AU.L2-3.3.1,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.12.4.1","mitre_mitigations":"M1028","mitre_tactics":"TA0005","mitre_techniques":"T1562,T1562.001","nist_sp_800-53":"AC-5,AC-6,AU-3(1),AU-7","pci_dss_v3.2.1":"10.1,10.2.2,10.2.4,10.2.5,10.3,7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,10.2,10.2.1,10.2.1.2,10.2.1.5,7.1,9.4.5","soc_2":"CC5.2,CC6.1,CC7.2"},"rules":["c:sh -c \"grep -iEh '^\\s*\\t*-e 2\\s*$' /etc/audit/rules.d/*.rules | tail -1\" -> r:^\\s*\\t*-e 2\\s*$"],"condition":"all","command":"sh -c \"grep -iEh '^\\s*\\t*-e 2\\s*$' /etc/audit/rules.d/*.rules | tail -1\"","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19186
sca.check.title: Ensure the audit configuration is immutable.
sca.check.description: Set system audit so that audit rules cannot be modified with auditctl. Setting the flag "-e 2" forces audit to be put in immutable mode. Audit changes can only be made on system reboot. Note: This setting will require the system to be rebooted to update the active auditd configuration settings.
sca.check.rationale: In immutable mode, unauthorized users cannot execute changes to the audit system to potentially hide malicious activity and then put the audit rules back. Users would most likely notice a system reboot and that could alert administrators of an attempt to make unauthorized audit changes.
sca.check.remediation: Edit or create the file /etc/audit/rules.d/99-finalize.rules and add the line -e 2 at the end of the file: Example: # printf -- "-e 2 " >> /etc/audit/rules.d/99-finalize.rules Load audit rules Merge and load the rules into active configuration: # augenrules --load Check if reboot is required. # if [[ $(auditctl -s | grep "enabled") =~ "2" ]]; then printf "Reboot required to load rules\n"; fi.
sca.check.compliance.cis: 5.2.3.20
sca.check.compliance.cis_csc_v8: 3.3,8.5
sca.check.compliance.cis_csc_v7: 6.2,6.3
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,AU.L2-3.3.1,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.mitre_mitigations: M1028
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1562,T1562.001
sca.check.compliance.nist_sp_800-53: AC-5,AC-6,AU-3(1),AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.1,10.2.2,10.2.4,10.2.5,10.3,7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,10.2,10.2.1,10.2.1.2,10.2.1.5,7.1,9.4.5
sca.check.compliance.soc_2: CC5.2,CC6.1,CC7.2
sca.check.command: ["sh -c \"grep -iEh '^\\s*\\t*-e 2\\s*$' /etc/audit/rules.d/*.rules | tail -1\""]
sca.check.result: failed

** Alert 1706006478.729794: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:18 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure the running and on disk configuration is the same.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19187,"title":"Ensure the running and on disk configuration is the same.","description":"The Audit system have both on disk and running configuration. It is possible for these configuration settings to differ. Note: Due to the limitations of augenrules and auditctl, it is not absolutely guaranteed that loading the rule sets via augenrules --load will result in all rules being loaded or even that the user will be informed if there was a problem loading the rules.","rationale":"Configuration differences between what is currently running and what is on disk could cause unexpected problems or may give a false impression of compliance requirements.","remediation":"If the rules are not aligned across all three () areas, run the following command to merge and load all rules: # augenrules --load Check if reboot is required. if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then echo \"Reboot required to load rules\"; fi.","compliance":{"cis":"5.2.3.21","cis_csc_v8":"8.5","cis_csc_v7":"6.3","cmmc_v2.0":"AU.L2-3.3.1","iso_27001-2013":"A.12.4.1","nist_sp_800-53":"AU-3(1),AU-7","pci_dss_v3.2.1":"10.1,10.2.2,10.2.4,10.2.5,10.3","pci_dss_v4.0":"10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5","soc_2":"CC5.2,CC7.2"},"rules":["c:augenrules --check -> r:^\\s*/usr/sbin/augenrules && r:No change$"],"condition":"all","command":"augenrules --check","status":"Not applicable","reason":"Invalid path or wrong permissions to run command 'augenrules --check'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19187
sca.check.title: Ensure the running and on disk configuration is the same.
sca.check.description: The Audit system have both on disk and running configuration. It is possible for these configuration settings to differ. Note: Due to the limitations of augenrules and auditctl, it is not absolutely guaranteed that loading the rule sets via augenrules --load will result in all rules being loaded or even that the user will be informed if there was a problem loading the rules.
sca.check.rationale: Configuration differences between what is currently running and what is on disk could cause unexpected problems or may give a false impression of compliance requirements.
sca.check.remediation: If the rules are not aligned across all three () areas, run the following command to merge and load all rules: # augenrules --load Check if reboot is required. if [[ $(auditctl -s | grep "enabled") =~ "2" ]]; then echo "Reboot required to load rules"; fi.
sca.check.compliance.cis: 5.2.3.21
sca.check.compliance.cis_csc_v8: 8.5
sca.check.compliance.cis_csc_v7: 6.3
sca.check.compliance.cmmc_v2.0: AU.L2-3.3.1
sca.check.compliance.iso_27001-2013: A.12.4.1
sca.check.compliance.nist_sp_800-53: AU-3(1),AU-7
sca.check.compliance.pci_dss_v3.2.1: 10.1,10.2.2,10.2.4,10.2.5,10.3
sca.check.compliance.pci_dss_v4.0: 10.2,10.2.1,10.2.1.2,10.2.1.5,9.4.5
sca.check.compliance.soc_2: CC5.2,CC7.2
sca.check.command: ["augenrules --check"]
sca.check.result: not applicable
sca.check.reason: Invalid path or wrong permissions to run command 'augenrules --check'

** Alert 1706006478.733291: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:18 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure only authorized groups are assigned ownership of audit log files.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19188,"title":"Ensure only authorized groups are assigned ownership of audit log files.","description":"Audit log files contain information about the system and system activity.","rationale":"Access to audit records can reveal system and configuration data to attackers, potentially compromising its confidentiality.","remediation":"Run the following command to configure the audit log files to be group owned by adm: # find $(dirname $(awk -F\"=\" '/^\\s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs)) -type f \\( ! -group adm -a ! -group root \\) -exec chgrp adm {} + Run the following command to set the log_group parameter in the audit configuration file to log_group = adm: # sed -ri 's/^\\s*#?\\s*log_group\\s*=\\s*\\S+(\\s*#.*)?.*$/log_group = adm\\1/' /etc/audit/auditd.conf Run the following command to restart the audit daemon to reload the configuration file: # systemctl restart auditd.","compliance":{"cis":"5.2.4.3","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1047","mitre_tactics":"TA0007","mitre_techniques":"T1070,T1070.002,T1083","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["f:/etc/audit/auditd.conf -> r:^\\s*\\t*log_group\\s*\\t*=\\s*\\t*adm|^\\s*\\t*log_group\\s*\\t*=\\s*\\t*root"],"condition":"all","file":"/etc/audit/auditd.conf","status":"Not applicable","reason":"Could not open file '/etc/audit/auditd.conf'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19188
sca.check.title: Ensure only authorized groups are assigned ownership of audit log files.
sca.check.description: Audit log files contain information about the system and system activity.
sca.check.rationale: Access to audit records can reveal system and configuration data to attackers, potentially compromising its confidentiality.
sca.check.remediation: Run the following command to configure the audit log files to be group owned by adm: # find $(dirname $(awk -F"=" '/^\s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs)) -type f \( ! -group adm -a ! -group root \) -exec chgrp adm {} + Run the following command to set the log_group parameter in the audit configuration file to log_group = adm: # sed -ri 's/^\s*#?\s*log_group\s*=\s*\S+(\s*#.*)?.*$/log_group = adm\1/' /etc/audit/auditd.conf Run the following command to restart the audit daemon to reload the configuration file: # systemctl restart auditd.
sca.check.compliance.cis: 5.2.4.3
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1047
sca.check.compliance.mitre_tactics: TA0007
sca.check.compliance.mitre_techniques: T1070,T1070.002,T1083
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.file: ["/etc/audit/auditd.conf"]
sca.check.result: not applicable
sca.check.reason: Could not open file '/etc/audit/auditd.conf'

** Alert 1706006478.737150: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:18 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure audit configuration files are 640 or more restrictive.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19189,"title":"Ensure audit configuration files are 640 or more restrictive.","description":"Audit configuration files control auditd and what events are audited.","rationale":"Access to the audit configuration files could allow unauthorized personnel to prevent the auditing of critical events. Misconfigured audit configuration files may prevent the auditing of critical events or impact the system's performance by overwhelming the audit log. Misconfiguration of the audit configuration files may also make it more difficult to establish and investigate events relating to an incident.","remediation":"Run the following command to remove more permissive mode than 0640 from the audit configuration files: # find /etc/audit/ -type f \\( -name '*.conf' -o -name '*.rules' \\) -exec chmod u-x,g-wx,o-rwx {} +.","compliance":{"cis":"5.2.4.5","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1047","mitre_tactics":"TA0007","mitre_techniques":"T1070,T1070.002,T1083","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["not c:sh -c \"stat -Lc \\\"%n %a\\\" /etc/audit/*.rules\" -> r:^/etc/audit && !r:640|600|400","not c:sh -c \"stat -Lc \\\"%n %a\\\" /etc/audit/*.conf\" -> r:^/etc/audit && !r:640|600|400"],"condition":"all","command":"sh -c \"stat -Lc \\\"%n %a\\\" /etc/audit/*.rules\",sh -c \"stat -Lc \\\"%n %a\\\" /etc/audit/*.conf\"","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19189
sca.check.title: Ensure audit configuration files are 640 or more restrictive.
sca.check.description: Audit configuration files control auditd and what events are audited.
sca.check.rationale: Access to the audit configuration files could allow unauthorized personnel to prevent the auditing of critical events. Misconfigured audit configuration files may prevent the auditing of critical events or impact the system's performance by overwhelming the audit log. Misconfiguration of the audit configuration files may also make it more difficult to establish and investigate events relating to an incident.
sca.check.remediation: Run the following command to remove more permissive mode than 0640 from the audit configuration files: # find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) -exec chmod u-x,g-wx,o-rwx {} +.
sca.check.compliance.cis: 5.2.4.5
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1047
sca.check.compliance.mitre_tactics: TA0007
sca.check.compliance.mitre_techniques: T1070,T1070.002,T1083
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["sh -c \"stat -Lc \\\"%n %a\\\" /etc/audit/*.rules\"", "sh -c \"stat -Lc \\\"%n %a\\\" /etc/audit/*.conf\""]
sca.check.result: passed

** Alert 1706006478.740926: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:18 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure audit configuration files are owned by root.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19190,"title":"Ensure audit configuration files are owned by root.","description":"Audit configuration files control auditd and what events are audited.","rationale":"Access to the audit configuration files could allow unauthorized personnel to prevent the auditing of critical events. Misconfigured audit configuration files may prevent the auditing of critical events or impact the system's performance by overwhelming the audit log. Misconfiguration of the audit configuration files may also make it more difficult to establish and investigate events relating to an incident.","remediation":"Run the following command to change ownership to root user: # find /etc/audit/ -type f \\( -name '*.conf' -o -name '*.rules' \\) ! -user root -exec chown root {} +.","compliance":{"cis":"5.2.4.6","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1047","mitre_tactics":"TA0007","mitre_techniques":"T1070,T1070.002,T1083","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["not c:sh -c \"stat -Lc \\\"%n %U\\\" /etc/audit/*.rules\" -> r:^/etc/audit && !r:root","not c:sh -c \"stat -Lc \\\"%n %U\\\" /etc/audit/*.conf\" -> r:^/etc/audit && !r:root"],"condition":"all","command":"sh -c \"stat -Lc \\\"%n %U\\\" /etc/audit/*.rules\",sh -c \"stat -Lc \\\"%n %U\\\" /etc/audit/*.conf\"","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19190
sca.check.title: Ensure audit configuration files are owned by root.
sca.check.description: Audit configuration files control auditd and what events are audited.
sca.check.rationale: Access to the audit configuration files could allow unauthorized personnel to prevent the auditing of critical events. Misconfigured audit configuration files may prevent the auditing of critical events or impact the system's performance by overwhelming the audit log. Misconfiguration of the audit configuration files may also make it more difficult to establish and investigate events relating to an incident.
sca.check.remediation: Run the following command to change ownership to root user: # find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) ! -user root -exec chown root {} +.
sca.check.compliance.cis: 5.2.4.6
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1047
sca.check.compliance.mitre_tactics: TA0007
sca.check.compliance.mitre_techniques: T1070,T1070.002,T1083
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["sh -c \"stat -Lc \\\"%n %U\\\" /etc/audit/*.rules\"", "sh -c \"stat -Lc \\\"%n %U\\\" /etc/audit/*.conf\""]
sca.check.result: passed

** Alert 1706006478.744578: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:18 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure audit configuration files belong to group root.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19191,"title":"Ensure audit configuration files belong to group root.","description":"Audit configuration files control auditd and what events are audited.","rationale":"Access to the audit configuration files could allow unauthorized personnel to prevent the auditing of critical events. Misconfigured audit configuration files may prevent the auditing of critical events or impact the system's performance by overwhelming the audit log. Misconfiguration of the audit configuration files may also make it more difficult to establish and investigate events relating to an incident.","remediation":"Run the following command to change group to root: # find /etc/audit/ -type f \\( -name '*.conf' -o -name '*.rules' \\) ! -group root -exec chgrp root {} +.","compliance":{"cis":"5.2.4.7","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1047","mitre_tactics":"TA0007","mitre_techniques":"T1070,T1070.002,T1083","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["not c:sh -c \"stat -Lc \\\"%n %G\\\" /etc/audit/*.rules\" -> r:^/etc/audit && !r:root","not c:sh -c \"stat -Lc \\\"%n %G\\\" /etc/audit/*.conf\" -> r:^/etc/audit && !r:root"],"condition":"all","command":"sh -c \"stat -Lc \\\"%n %G\\\" /etc/audit/*.rules\",sh -c \"stat -Lc \\\"%n %G\\\" /etc/audit/*.conf\"","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19191
sca.check.title: Ensure audit configuration files belong to group root.
sca.check.description: Audit configuration files control auditd and what events are audited.
sca.check.rationale: Access to the audit configuration files could allow unauthorized personnel to prevent the auditing of critical events. Misconfigured audit configuration files may prevent the auditing of critical events or impact the system's performance by overwhelming the audit log. Misconfiguration of the audit configuration files may also make it more difficult to establish and investigate events relating to an incident.
sca.check.remediation: Run the following command to change group to root: # find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) ! -group root -exec chgrp root {} +.
sca.check.compliance.cis: 5.2.4.7
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1047
sca.check.compliance.mitre_tactics: TA0007
sca.check.compliance.mitre_techniques: T1070,T1070.002,T1083
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["sh -c \"stat -Lc \\\"%n %G\\\" /etc/audit/*.rules\"", "sh -c \"stat -Lc \\\"%n %G\\\" /etc/audit/*.conf\""]
sca.check.result: passed

** Alert 1706006478.748223: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:18 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure audit tools are 755 or more restrictive.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19192,"title":"Ensure audit tools are 755 or more restrictive.","description":"Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.","rationale":"Protecting audit information includes identifying and protecting the tools used to view and manipulate log data. Protecting audit tools is necessary to prevent unauthorized operation on audit information.","remediation":"Run the following command to remove more permissive mode from the audit tools: # chmod go-w /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules.","compliance":{"cis":"5.2.4.8","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1047","mitre_tactics":"TA0007","mitre_techniques":"T1070,T1070.002,T1083","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["not c:stat -c \"%n %a %U %G\" /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules -> r:^/sbin && !r:000|010|040|050|001|011|041|051|004|014|044|054|005|015|045|055|700|710|740|750|701|711|741|751|704|714|744|754|705|715|745|755"],"condition":"all","command":"stat -c \"%n %a %U %G\" /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19192
sca.check.title: Ensure audit tools are 755 or more restrictive.
sca.check.description: Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.
sca.check.rationale: Protecting audit information includes identifying and protecting the tools used to view and manipulate log data. Protecting audit tools is necessary to prevent unauthorized operation on audit information.
sca.check.remediation: Run the following command to remove more permissive mode from the audit tools: # chmod go-w /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules.
sca.check.compliance.cis: 5.2.4.8
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1047
sca.check.compliance.mitre_tactics: TA0007
sca.check.compliance.mitre_techniques: T1070,T1070.002,T1083
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["stat -c \"%n %a %U %G\" /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules"]
sca.check.result: passed

** Alert 1706006478.751928: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:18 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure audit tools are owned by root.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19193,"title":"Ensure audit tools are owned by root.","description":"Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.","rationale":"Protecting audit information includes identifying and protecting the tools used to view and manipulate log data. Protecting audit tools is necessary to prevent unauthorized operation on audit information.","remediation":"Run the following command to change the owner of the audit tools to the root user: # chown root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules.","compliance":{"cis":"5.2.4.9","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1047","mitre_tactics":"TA0007","mitre_techniques":"T1070,T1070.002,T1083","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["not c:stat -c \"%n %u %U %g %G\" /sbin/auditctl -> r:^/sbin && !r:0 root 0 root","not c:stat -c \"%n %u %U %g %G\" /sbin/aureport -> r:^/sbin && !r:0 root 0 root","not c:stat -c \"%n %u %U %g %G\" /sbin/ausearch -> r:^/sbin && !r:0 root 0 root","not c:stat -c \"%n %u %U %g %G\" /sbin/autrace -> r:^/sbin && !r:0 root 0 root","not c:stat -c \"%n %u %U %g %G\" /sbin/auditd -> r:^/sbin && !r:0 root 0 root","not c:stat -c \"%n %u %U %g %G\" /sbin/augenrules -> r:^/sbin && !r:0 root 0 root"],"condition":"all","command":"stat -c \"%n %u %U %g %G\" /sbin/auditctl,stat -c \"%n %u %U %g %G\" /sbin/aureport,stat -c \"%n %u %U %g %G\" /sbin/ausearch,stat -c \"%n %u %U %g %G\" /sbin/autrace,stat -c \"%n %u %U %g %G\" /sbin/auditd,stat -c \"%n %u %U %g %G\" /sbin/augenrules","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19193
sca.check.title: Ensure audit tools are owned by root.
sca.check.description: Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.
sca.check.rationale: Protecting audit information includes identifying and protecting the tools used to view and manipulate log data. Protecting audit tools is necessary to prevent unauthorized operation on audit information.
sca.check.remediation: Run the following command to change the owner of the audit tools to the root user: # chown root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules.
sca.check.compliance.cis: 5.2.4.9
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1047
sca.check.compliance.mitre_tactics: TA0007
sca.check.compliance.mitre_techniques: T1070,T1070.002,T1083
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["stat -c \"%n %u %U %g %G\" /sbin/auditctl", "stat -c \"%n %u %U %g %G\" /sbin/aureport", "stat -c \"%n %u %U %g %G\" /sbin/ausearch", "stat -c \"%n %u %U %g %G\" /sbin/autrace", "stat -c \"%n %u %U %g %G\" /sbin/auditd", "stat -c \"%n %u %U %g %G\" /sbin/augenrules"]
sca.check.result: passed

** Alert 1706006478.756126: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:18 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure audit tools belong to group root.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19194,"title":"Ensure audit tools belong to group root.","description":"Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.","rationale":"Protecting audit information includes identifying and protecting the tools used to view and manipulate log data. Protecting audit tools is necessary to prevent unauthorized operation on audit information.","remediation":"Run the following command to remove more permissive mode from the audit tools: # chmod go-w /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules Run the following command to change owner and group of the audit tools to root user and group: # chown root:root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules.","compliance":{"cis":"5.2.4.10","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1047","mitre_tactics":"TA0007","mitre_techniques":"T1070,T1070.002,T1083","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["not c:stat -c \"%n %a %U %G\" /sbin/auditctl -> r:^/sbin && !r:000|010|040|050|001|011|041|051|004|014|044|054|005|015|045|055|700|710|740|750|701|711|741|751|704|714|744|754|705|715|745|755","not c:stat -c \"%n %a %U %G\" /sbin/aureport -> r:^/sbin && !r:000|010|040|050|001|011|041|051|004|014|044|054|005|015|045|055|700|710|740|750|701|711|741|751|704|714|744|754|705|715|745|755","not c:stat -c \"%n %a %U %G\" /sbin/ausearch -> r:^/sbin && !r:000|010|040|050|001|011|041|051|004|014|044|054|005|015|045|055|700|710|740|750|701|711|741|751|704|714|744|754|705|715|745|755","not c:stat -c \"%n %a %U %G\" /sbin/autrace -> r:^/sbin && !r:000|010|040|050|001|011|041|051|004|014|044|054|005|015|045|055|700|710|740|750|701|711|741|751|704|714|744|754|705|715|745|755","not c:stat -c \"%n %a %U %G\" /sbin/auditd -> r:^/sbin && !r:000|010|040|050|001|011|041|051|004|014|044|054|005|015|045|055|700|710|740|750|701|711|741|751|704|714|744|754|705|715|745|755","not c:stat -c \"%n %a %U %G\" /sbin/augenrules -> r:^/sbin && !r:000|010|040|050|001|011|041|051|004|014|044|054|005|015|045|055|700|710|740|750|701|711|741|751|704|714|744|754|705|715|745|755"],"condition":"all","command":"stat -c \"%n %a %U %G\" /sbin/auditctl,stat -c \"%n %a %U %G\" /sbin/aureport,stat -c \"%n %a %U %G\" /sbin/ausearch,stat -c \"%n %a %U %G\" /sbin/autrace,stat -c \"%n %a %U %G\" /sbin/auditd,stat -c \"%n %a %U %G\" /sbin/augenrules","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19194
sca.check.title: Ensure audit tools belong to group root.
sca.check.description: Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.
sca.check.rationale: Protecting audit information includes identifying and protecting the tools used to view and manipulate log data. Protecting audit tools is necessary to prevent unauthorized operation on audit information.
sca.check.remediation: Run the following command to remove more permissive mode from the audit tools: # chmod go-w /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules Run the following command to change owner and group of the audit tools to root user and group: # chown root:root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules.
sca.check.compliance.cis: 5.2.4.10
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1047
sca.check.compliance.mitre_tactics: TA0007
sca.check.compliance.mitre_techniques: T1070,T1070.002,T1083
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["stat -c \"%n %a %U %G\" /sbin/auditctl", "stat -c \"%n %a %U %G\" /sbin/aureport", "stat -c \"%n %a %U %G\" /sbin/ausearch", "stat -c \"%n %a %U %G\" /sbin/autrace", "stat -c \"%n %a %U %G\" /sbin/auditd", "stat -c \"%n %a %U %G\" /sbin/augenrules"]
sca.check.result: passed

** Alert 1706006478.761361: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:18 wazuh->sca
Rule: 19009 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure cryptographic mechanisms are used to protect the integrity of audit tools.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19195,"title":"Ensure cryptographic mechanisms are used to protect the integrity of audit tools.","description":"Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.","rationale":"Protecting the integrity of the tools used for auditing purposes is a critical step toward ensuring the integrity of audit information. Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity. Attackers may replace the audit tools or inject code into the existing tools with the purpose of providing the capability to hide or erase system activity from the audit logs. Audit tools should be cryptographically signed in order to provide the capability to identify when the audit tools have been modified, manipulated, or replaced. An example is a checksum hash of the file or files.","remediation":"Add or update the following selection lines for to a file ending in .conf in the /etc/aide/aide.conf.d/ or to /etc/aide/aide.conf to protect the integrity of the audit tools: # Audit Tools /sbin/auditctl p+i+n+u+g+s+b+acl+xattrs+sha512 /sbin/auditd p+i+n+u+g+s+b+acl+xattrs+sha512 /sbin/ausearch p+i+n+u+g+s+b+acl+xattrs+sha512 /sbin/aureport p+i+n+u+g+s+b+acl+xattrs+sha512 /sbin/autrace p+i+n+u+g+s+b+acl+xattrs+sha512 /sbin/augenrules p+i+n+u+g+s+b+acl+xattrs+sha512.","compliance":{"cis":"5.2.4.11","mitre_mitigations":"M1047","mitre_tactics":"TA0007","mitre_techniques":"T1070,T1070.002,T1083"},"rules":["f:/etc/aide/aide.conf -> r:/sbin/auditctl p+i+n+u+g+s+b+acl+xattrs+sha512","f:/etc/aide/aide.conf -> r:/sbin/auditd p+i+n+u+g+s+b+acl+xattrs+sha512","f:/etc/aide/aide.conf -> r:/sbin/ausearch p+i+n+u+g+s+b+acl+xattrs+sha512","f:/etc/aide/aide.conf -> r:/sbin/aureport p+i+n+u+g+s+b+acl+xattrs+sha512","f:/etc/aide/aide.conf -> r:/sbin/autrace p+i+n+u+g+s+b+acl+xattrs+sha512","f:/etc/aide/aide.conf -> r:/sbin/augenrules p+i+n+u+g+s+b+acl+xattrs+sha512"],"condition":"all","file":"/etc/aide/aide.conf","status":"Not applicable","reason":"Could not open file '/etc/aide/aide.conf'"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19195
sca.check.title: Ensure cryptographic mechanisms are used to protect the integrity of audit tools.
sca.check.description: Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.
sca.check.rationale: Protecting the integrity of the tools used for auditing purposes is a critical step toward ensuring the integrity of audit information. Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity. Attackers may replace the audit tools or inject code into the existing tools with the purpose of providing the capability to hide or erase system activity from the audit logs. Audit tools should be cryptographically signed in order to provide the capability to identify when the audit tools have been modified, manipulated, or replaced. An example is a checksum hash of the file or files.
sca.check.remediation: Add or update the following selection lines for to a file ending in .conf in the /etc/aide/aide.conf.d/ or to /etc/aide/aide.conf to protect the integrity of the audit tools: # Audit Tools /sbin/auditctl p+i+n+u+g+s+b+acl+xattrs+sha512 /sbin/auditd p+i+n+u+g+s+b+acl+xattrs+sha512 /sbin/ausearch p+i+n+u+g+s+b+acl+xattrs+sha512 /sbin/aureport p+i+n+u+g+s+b+acl+xattrs+sha512 /sbin/autrace p+i+n+u+g+s+b+acl+xattrs+sha512 /sbin/augenrules p+i+n+u+g+s+b+acl+xattrs+sha512.
sca.check.compliance.cis: 5.2.4.11
sca.check.compliance.mitre_mitigations: M1047
sca.check.compliance.mitre_tactics: TA0007
sca.check.compliance.mitre_techniques: T1070,T1070.002,T1083
sca.check.file: ["/etc/aide/aide.conf"]
sca.check.result: not applicable
sca.check.reason: Could not open file '/etc/aide/aide.conf'

** Alert 1706006478.766025: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:18 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure permissions on /etc/passwd- are configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19197,"title":"Ensure permissions on /etc/passwd- are configured.","description":"The /etc/passwd- file contains backup user account information.","rationale":"It is critical to ensure that the /etc/passwd- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.","remediation":"Run the following commands to remove excess permissions, set owner, and set group on /etc/passwd-: # chmod u-x,go-wx /etc/passwd- # chown root:root /etc/passwd-.","compliance":{"cis":"6.1.2","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1003,T1003.008,T1222,T1222.002","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:stat -Lc \"%n %a %u %U %g %G\" /etc/passwd- -> r:0 root 0 root && r:644|640|604|600|400|500"],"condition":"all","command":"stat -Lc \"%n %a %u %U %g %G\" /etc/passwd-","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19197
sca.check.title: Ensure permissions on /etc/passwd- are configured.
sca.check.description: The /etc/passwd- file contains backup user account information.
sca.check.rationale: It is critical to ensure that the /etc/passwd- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.
sca.check.remediation: Run the following commands to remove excess permissions, set owner, and set group on /etc/passwd-: # chmod u-x,go-wx /etc/passwd- # chown root:root /etc/passwd-.
sca.check.compliance.cis: 6.1.2
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1003,T1003.008,T1222,T1222.002
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["stat -Lc \"%n %a %u %U %g %G\" /etc/passwd-"]
sca.check.result: passed

** Alert 1706006478.769084: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:18 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure permissions on /etc/group are configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19198,"title":"Ensure permissions on /etc/group are configured.","description":"The /etc/group file contains a list of all the valid groups defined in the system. The command below allows read/write access for root and read access for everyone else.","rationale":"The /etc/group file needs to be protected from unauthorized changes by non-privileged users, but needs to be readable as this information is used with many non-privileged programs.","remediation":"Run the following commands to remove excess permissions, set owner, and set group on /etc/group: # chmod u-x,go-wx /etc/group # chown root:root /etc/group.","compliance":{"cis":"6.1.3","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1003,T1003.008,T1222,T1222.002","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:stat -Lc \"%n %a %u %U %g %G\" /etc/group -> r:0 root 0 root && r:644|640|604|600|400|500"],"condition":"all","command":"stat -Lc \"%n %a %u %U %g %G\" /etc/group","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19198
sca.check.title: Ensure permissions on /etc/group are configured.
sca.check.description: The /etc/group file contains a list of all the valid groups defined in the system. The command below allows read/write access for root and read access for everyone else.
sca.check.rationale: The /etc/group file needs to be protected from unauthorized changes by non-privileged users, but needs to be readable as this information is used with many non-privileged programs.
sca.check.remediation: Run the following commands to remove excess permissions, set owner, and set group on /etc/group: # chmod u-x,go-wx /etc/group # chown root:root /etc/group.
sca.check.compliance.cis: 6.1.3
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1003,T1003.008,T1222,T1222.002
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["stat -Lc \"%n %a %u %U %g %G\" /etc/group"]
sca.check.result: passed

** Alert 1706006478.772259: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:18 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure permissions on /etc/group- are configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19199,"title":"Ensure permissions on /etc/group- are configured.","description":"The /etc/group- file contains a backup list of all the valid groups defined in the system.","rationale":"It is critical to ensure that the /etc/group- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.","remediation":"Run the following commands to remove excess permissions, set owner, and set group on /etc/group-: # chmod u-x,go-wx /etc/group- # chown root:root /etc/group-.","compliance":{"cis":"6.1.4","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1003,T1003.008,T1222,T1222.002","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:stat -Lc \"%n %a %u %U %g %G\" /etc/group- -> r:0 root 0 root && r:644|640|604|600|400|500"],"condition":"all","command":"stat -Lc \"%n %a %u %U %g %G\" /etc/group-","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19199
sca.check.title: Ensure permissions on /etc/group- are configured.
sca.check.description: The /etc/group- file contains a backup list of all the valid groups defined in the system.
sca.check.rationale: It is critical to ensure that the /etc/group- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.
sca.check.remediation: Run the following commands to remove excess permissions, set owner, and set group on /etc/group-: # chmod u-x,go-wx /etc/group- # chown root:root /etc/group-.
sca.check.compliance.cis: 6.1.4
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1003,T1003.008,T1222,T1222.002
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["stat -Lc \"%n %a %u %U %g %G\" /etc/group-"]
sca.check.result: passed

** Alert 1706006478.775358: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:18 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure permissions on /etc/shadow are configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19200,"title":"Ensure permissions on /etc/shadow are configured.","description":"The /etc/shadow file is used to store the information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.","rationale":"If attackers can gain read access to the /etc/shadow file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the /etc/shadow file (such as expiration) could also be useful to subvert the user accounts.","remediation":"Run one of the following commands to set ownership of /etc/shadow to root and group to either root or shadow: # chown root:shadow /etc/shadow -OR- # chown root:root /etc/shadow Run the following command to remove excess permissions form /etc/shadow: # chmod u-x,g-wx,o-rwx /etc/shadow.","compliance":{"cis":"6.1.5","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1003,T1003.008,T1222,T1222.002","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:stat -Lc \"%n %a %u %U %g %G\" /etc/shadow -> r:0 root \\d+ shadow|0 root 0 root && r: r:644|640|604|600|400|500"],"condition":"all","command":"stat -Lc \"%n %a %u %U %g %G\" /etc/shadow","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19200
sca.check.title: Ensure permissions on /etc/shadow are configured.
sca.check.description: The /etc/shadow file is used to store the information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.
sca.check.rationale: If attackers can gain read access to the /etc/shadow file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the /etc/shadow file (such as expiration) could also be useful to subvert the user accounts.
sca.check.remediation: Run one of the following commands to set ownership of /etc/shadow to root and group to either root or shadow: # chown root:shadow /etc/shadow -OR- # chown root:root /etc/shadow Run the following command to remove excess permissions form /etc/shadow: # chmod u-x,g-wx,o-rwx /etc/shadow.
sca.check.compliance.cis: 6.1.5
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1003,T1003.008,T1222,T1222.002
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["stat -Lc \"%n %a %u %U %g %G\" /etc/shadow"]
sca.check.result: passed

** Alert 1706006478.779063: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:18 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure permissions on /etc/shadow- are configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19201,"title":"Ensure permissions on /etc/shadow- are configured.","description":"The /etc/shadow- file is used to store backup information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.","rationale":"It is critical to ensure that the /etc/shadow- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.","remediation":"Run one of the following commands to set ownership of /etc/shadow- to root and group to either root or shadow: # chown root:shadow /etc/shadow- -OR- # chown root:root /etc/shadow- Run the following command to remove excess permissions form /etc/shadow-: # chmod u-x,g-wx,o-rwx /etc/shadow-.","compliance":{"cis":"6.1.6","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1003,T1003.008,T1222,T1222.002","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:stat -Lc \"%n %a %u %U %g %G\" /etc/shadow- -> r:0 root \\d+ shadow|0 root 0 root && r: r:644|640|604|600|400|500"],"condition":"all","command":"stat -Lc \"%n %a %u %U %g %G\" /etc/shadow-","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19201
sca.check.title: Ensure permissions on /etc/shadow- are configured.
sca.check.description: The /etc/shadow- file is used to store backup information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.
sca.check.rationale: It is critical to ensure that the /etc/shadow- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.
sca.check.remediation: Run one of the following commands to set ownership of /etc/shadow- to root and group to either root or shadow: # chown root:shadow /etc/shadow- -OR- # chown root:root /etc/shadow- Run the following command to remove excess permissions form /etc/shadow-: # chmod u-x,g-wx,o-rwx /etc/shadow-.
sca.check.compliance.cis: 6.1.6
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1003,T1003.008,T1222,T1222.002
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["stat -Lc \"%n %a %u %U %g %G\" /etc/shadow-"]
sca.check.result: passed

** Alert 1706006478.782654: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:18 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure permissions on /etc/gshadow are configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19202,"title":"Ensure permissions on /etc/gshadow are configured.","description":"The /etc/gshadow file is used to store the information about groups that is critical to the security of those accounts, such as the hashed password and other security information.","rationale":"If attackers can gain read access to the /etc/gshadow file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the /etc/gshadow file (such as group administrators) could also be useful to subvert the group.","remediation":"Run one of the following commands to set ownership of /etc/gshadow to root and group to either root or shadow: # chown root:shadow /etc/gshadow -OR- # chown root:root /etc/gshadow Run the following command to remove excess permissions form /etc/gshadow: # chmod u-x,g-wx,o-rwx /etc/gshadow.","compliance":{"cis":"6.1.7","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1003,T1003.008,T1222,T1222.002","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:stat -Lc \"%n %a %u %U %g %G\" /etc/gshadow -> r:0 root \\d+ shadow|0 root 0 root && r: r:644|640|604|600|400|500"],"condition":"all","command":"stat -Lc \"%n %a %u %U %g %G\" /etc/gshadow","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19202
sca.check.title: Ensure permissions on /etc/gshadow are configured.
sca.check.description: The /etc/gshadow file is used to store the information about groups that is critical to the security of those accounts, such as the hashed password and other security information.
sca.check.rationale: If attackers can gain read access to the /etc/gshadow file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the /etc/gshadow file (such as group administrators) could also be useful to subvert the group.
sca.check.remediation: Run one of the following commands to set ownership of /etc/gshadow to root and group to either root or shadow: # chown root:shadow /etc/gshadow -OR- # chown root:root /etc/gshadow Run the following command to remove excess permissions form /etc/gshadow: # chmod u-x,g-wx,o-rwx /etc/gshadow.
sca.check.compliance.cis: 6.1.7
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1003,T1003.008,T1222,T1222.002
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["stat -Lc \"%n %a %u %U %g %G\" /etc/gshadow"]
sca.check.result: passed

** Alert 1706006478.786371: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:18 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure permissions on /etc/gshadow- are configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19203,"title":"Ensure permissions on /etc/gshadow- are configured.","description":"The /etc/gshadow- file is used to store backup information about groups that is critical to the security of those accounts, such as the hashed password and other security information.","rationale":"It is critical to ensure that the /etc/gshadow- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.","remediation":"Run one of the following commands to set ownership of /etc/gshadow- to root and group to either root or shadow: # chown root:shadow /etc/gshadow- -OR- # chown root:root /etc/gshadow- Run the following command to remove excess permissions form /etc/gshadow-: # chmod u-x,g-wx,o-rwx /etc/gshadow-.","compliance":{"cis":"6.1.8","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1003,T1003.008,T1222,T1222.002","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:stat -Lc \"%n %a %u %U %g %G\" /etc/gshadow- -> r:0 root \\d+ shadow|0 root 0 root && r: r:644|640|604|600|400|500"],"condition":"all","command":"stat -Lc \"%n %a %u %U %g %G\" /etc/gshadow-","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19203
sca.check.title: Ensure permissions on /etc/gshadow- are configured.
sca.check.description: The /etc/gshadow- file is used to store backup information about groups that is critical to the security of those accounts, such as the hashed password and other security information.
sca.check.rationale: It is critical to ensure that the /etc/gshadow- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.
sca.check.remediation: Run one of the following commands to set ownership of /etc/gshadow- to root and group to either root or shadow: # chown root:shadow /etc/gshadow- -OR- # chown root:root /etc/gshadow- Run the following command to remove excess permissions form /etc/gshadow-: # chmod u-x,g-wx,o-rwx /etc/gshadow-.
sca.check.compliance.cis: 6.1.8
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1003,T1003.008,T1222,T1222.002
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["stat -Lc \"%n %a %u %U %g %G\" /etc/gshadow-"]
sca.check.result: passed

** Alert 1706006478.789968: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:18 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure permissions on /etc/shells are configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19204,"title":"Ensure permissions on /etc/shells are configured.","description":"/etc/shells is a text file which contains the full pathnames of valid login shells. This file is consulted by chsh and available to be queried by other programs.","rationale":"It is critical to ensure that the /etc/shells file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.","remediation":"Run the following commands to remove excess permissions, set owner, and set group on /etc/shells: # chmod u-x,go-wx /etc/shells # chown root:root /etc/shells.","compliance":{"cis":"6.1.9","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1003,T1003.008,T1222,T1222.002","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:stat -Lc \"%n %a %u %U %g %G\" /etc/shells- -> r:0 root 0 root && r:644|640|604|600|400|500"],"condition":"all","command":"stat -Lc \"%n %a %u %U %g %G\" /etc/shells-","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19204
sca.check.title: Ensure permissions on /etc/shells are configured.
sca.check.description: /etc/shells is a text file which contains the full pathnames of valid login shells. This file is consulted by chsh and available to be queried by other programs.
sca.check.rationale: It is critical to ensure that the /etc/shells file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.
sca.check.remediation: Run the following commands to remove excess permissions, set owner, and set group on /etc/shells: # chmod u-x,go-wx /etc/shells # chown root:root /etc/shells.
sca.check.compliance.cis: 6.1.9
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1003,T1003.008,T1222,T1222.002
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["stat -Lc \"%n %a %u %U %g %G\" /etc/shells-"]
sca.check.result: failed

** Alert 1706006478.793212: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:18 wazuh->sca
Rule: 19007 (level 7) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure permissions on /etc/opasswd are configured.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19205,"title":"Ensure permissions on /etc/opasswd are configured.","description":"/etc/security/opasswd and it's backup /etc/security/opasswd.old hold user's previous passwords if pam_unix or pam_pwhistory is in use on the system.","rationale":"It is critical to ensure that /etc/security/opasswd is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.","remediation":"Run the following commands to remove excess permissions, set owner, and set group on /etc/security/opasswd and /etc/security/opasswd.old is they exist: # [ -e \"/etc/security/opasswd\" ] && chmod u-x,go-rwx /etc/security/opasswd # [ -e \"/etc/security/opasswd\" ] && chown root:root /etc/security/opasswd # [ -e \"/etc/security/opasswd.old\" ] && chmod u-x,go-rwx /etc/security/opasswd.old # [ -e \"/etc/security/opasswd.old\" ] && chown root:root /etc/security/opasswd.old.","compliance":{"cis":"6.1.10","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1003,T1003.008,T1222,T1222.002","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["c:stat -Lc \"%n %a %u %U %g %G\" /etc/security/opasswds -> r:0 root 0 root && r:644|640|604|600|400|500"],"condition":"all","command":"stat -Lc \"%n %a %u %U %g %G\" /etc/security/opasswds","result":"failed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19205
sca.check.title: Ensure permissions on /etc/opasswd are configured.
sca.check.description: /etc/security/opasswd and it's backup /etc/security/opasswd.old hold user's previous passwords if pam_unix or pam_pwhistory is in use on the system.
sca.check.rationale: It is critical to ensure that /etc/security/opasswd is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.
sca.check.remediation: Run the following commands to remove excess permissions, set owner, and set group on /etc/security/opasswd and /etc/security/opasswd.old is they exist: # [ -e "/etc/security/opasswd" ] && chmod u-x,go-rwx /etc/security/opasswd # [ -e "/etc/security/opasswd" ] && chown root:root /etc/security/opasswd # [ -e "/etc/security/opasswd.old" ] && chmod u-x,go-rwx /etc/security/opasswd.old # [ -e "/etc/security/opasswd.old" ] && chown root:root /etc/security/opasswd.old.
sca.check.compliance.cis: 6.1.10
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1003,T1003.008,T1222,T1222.002
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.command: ["stat -Lc \"%n %a %u %U %g %G\" /etc/security/opasswds"]
sca.check.result: failed

** Alert 1706006478.797091: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:18 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure accounts in /etc/passwd use shadowed passwords.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19206,"title":"Ensure accounts in /etc/passwd use shadowed passwords.","description":"Local accounts can uses shadowed passwords. With shadowed passwords, The passwords are saved in shadow password file, /etc/shadow, encrypted by a salted one-way hash. Accounts with a shadowed password have an x in the second field in /etc/passwd.","rationale":"The /etc/passwd file also contains information like user ID's and group ID's that are used by many system programs. Therefore, the /etc/passwd file must remain world readable. In spite of encoding the password with a randomly-generated one-way hash function, an attacker could still break the system if they got access to the /etc/passwd file. This can be mitigated by using shadowed passwords, thus moving the passwords in the /etc/passwd file to /etc/shadow. The /etc/shadow file is set so only root will be able to read and write. This helps mitigate the risk of an attacker gaining access to the encoded passwords with which to perform a dictionary attack. Note: - All accounts must have passwords or be locked to prevent the account from being used by an unauthorized user. - A user account with an empty second field in /etc/passwd allows the account to be logged into by providing only the username.","remediation":"Run the following command to set accounts to use shadowed passwords: # sed -e 's/^\\([a-zA-Z0-9_]*\\):[^:]*:/\\1:x:/' -i /etc/passwd Investigate to determine if the account is logged in and what it is being used for, to determine if it needs to be forced off.","compliance":{"cis":"6.2.1","cis_csc_v8":"3.11","cis_csc_v7":"16.4","cmmc_v2.0":"AC.L2-3.1.19,IA.L2-3.5.10,MP.L2-3.8.1,SC.L2-3.13.11,SC.L2-3.13.16","hipaa":"164.312(a)(2)(iv),164.312(e)(2)(ii)","iso_27001-2013":"A.10.1.1","mitre_mitigations":"M1027","mitre_tactics":"TA0003","mitre_techniques":"T1003,T1003.008","nist_sp_800-53":"SC-28,SC-28(1)","pci_dss_v3.2.1":"3.4,3.4.1,8.2.1","pci_dss_v4.0":"3.1.1,3.3.2,3.3.3,3.5.1,3.5.1.2,3.5.1.3,8.3.2","soc_2":"CC6.1"},"rules":["not f:/etc/passwd -> !r:^\\w+:x:"],"condition":"all","file":"/etc/passwd","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19206
sca.check.title: Ensure accounts in /etc/passwd use shadowed passwords.
sca.check.description: Local accounts can uses shadowed passwords. With shadowed passwords, The passwords are saved in shadow password file, /etc/shadow, encrypted by a salted one-way hash. Accounts with a shadowed password have an x in the second field in /etc/passwd.
sca.check.rationale: The /etc/passwd file also contains information like user ID's and group ID's that are used by many system programs. Therefore, the /etc/passwd file must remain world readable. In spite of encoding the password with a randomly-generated one-way hash function, an attacker could still break the system if they got access to the /etc/passwd file. This can be mitigated by using shadowed passwords, thus moving the passwords in the /etc/passwd file to /etc/shadow. The /etc/shadow file is set so only root will be able to read and write. This helps mitigate the risk of an attacker gaining access to the encoded passwords with which to perform a dictionary attack. Note: - All accounts must have passwords or be locked to prevent the account from being used by an unauthorized user. - A user account with an empty second field in /etc/passwd allows the account to be logged into by providing only the username.
sca.check.remediation: Run the following command to set accounts to use shadowed passwords: # sed -e 's/^\([a-zA-Z0-9_]*\):[^:]*:/\1:x:/' -i /etc/passwd Investigate to determine if the account is logged in and what it is being used for, to determine if it needs to be forced off.
sca.check.compliance.cis: 6.2.1
sca.check.compliance.cis_csc_v8: 3.11
sca.check.compliance.cis_csc_v7: 16.4
sca.check.compliance.cmmc_v2.0: AC.L2-3.1.19,IA.L2-3.5.10,MP.L2-3.8.1,SC.L2-3.13.11,SC.L2-3.13.16
sca.check.compliance.hipaa: 164.312(a)(2)(iv),164.312(e)(2)(ii)
sca.check.compliance.iso_27001-2013: A.10.1.1
sca.check.compliance.mitre_mitigations: M1027
sca.check.compliance.mitre_tactics: TA0003
sca.check.compliance.mitre_techniques: T1003,T1003.008
sca.check.compliance.nist_sp_800-53: SC-28,SC-28(1)
sca.check.compliance.pci_dss_v3.2.1: 3.4,3.4.1,8.2.1
sca.check.compliance.pci_dss_v4.0: 3.1.1,3.3.2,3.3.3,3.5.1,3.5.1.2,3.5.1.3,8.3.2
sca.check.compliance.soc_2: CC6.1
sca.check.file: ["/etc/passwd"]
sca.check.result: passed

** Alert 1706006478.801980: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:18 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure /etc/shadow password fields are not empty.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19207,"title":"Ensure /etc/shadow password fields are not empty.","description":"An account with an empty password field means that anybody may log in as that user without providing a password.","rationale":"All accounts must have passwords or be locked to prevent the account from being used by an unauthorized user.","remediation":"If any accounts in the /etc/shadow file do not have a password, run the following command to lock the account until it can be determined why it does not have a password: # passwd -l <username> Also, check to see if the account is logged in and investigate what it is being used for to determine if it needs to be forced off.","compliance":{"cis":"6.2.2","cis_csc_v8":"5.2","cis_csc_v7":"4.4","cmmc_v2.0":"IA.L2-3.5.7","iso_27001-2013":"A.9.4.3","mitre_mitigations":"M1027","mitre_tactics":"TA0003","mitre_techniques":"T1078,T1078.001,T1078.003","pci_dss_v4.0":"2.2.2,8.3.5,8.3.6,8.6.3","soc_2":"CC6.1"},"rules":["not f:/etc/shadow -> r:^\\w+::"],"condition":"all","file":"/etc/shadow","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19207
sca.check.title: Ensure /etc/shadow password fields are not empty.
sca.check.description: An account with an empty password field means that anybody may log in as that user without providing a password.
sca.check.rationale: All accounts must have passwords or be locked to prevent the account from being used by an unauthorized user.
sca.check.remediation: If any accounts in the /etc/shadow file do not have a password, run the following command to lock the account until it can be determined why it does not have a password: # passwd -l <username> Also, check to see if the account is logged in and investigate what it is being used for to determine if it needs to be forced off.
sca.check.compliance.cis: 6.2.2
sca.check.compliance.cis_csc_v8: 5.2
sca.check.compliance.cis_csc_v7: 4.4
sca.check.compliance.cmmc_v2.0: IA.L2-3.5.7
sca.check.compliance.iso_27001-2013: A.9.4.3
sca.check.compliance.mitre_mitigations: M1027
sca.check.compliance.mitre_tactics: TA0003
sca.check.compliance.mitre_techniques: T1078,T1078.001,T1078.003
sca.check.compliance.pci_dss_v4.0: 2.2.2,8.3.5,8.3.6,8.6.3
sca.check.compliance.soc_2: CC6.1
sca.check.file: ["/etc/shadow"]
sca.check.result: passed

** Alert 1706006478.804701: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:18 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure shadow group is empty.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19208,"title":"Ensure shadow group is empty.","description":"The shadow group allows system programs which require access the ability to read the /etc/shadow file. No users should be assigned to the shadow group.","rationale":"Any users assigned to the shadow group would be granted read access to the /etc/shadow file. If attackers can gain read access to the /etc/shadow file, they can easily run a password cracking program against the hashed passwords to break them. Other security information that is stored in the /etc/shadow file (such as expiration) could also be useful to subvert additional user accounts.","remediation":"Run the following command to remove all users from the shadow group # sed -ri 's/(^shadow:[^:]*:[^:]*:)([^:]+$)/\\1/' /etc/group Change the primary group of any users with shadow as their primary group. # usermod -g <primary group> <user>.","compliance":{"cis":"6.2.4","cis_csc_v8":"3.3","cis_csc_v7":"14.6","cmmc_v2.0":"AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2","hipaa":"164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)","iso_27001-2013":"A.9.1.1","mitre_mitigations":"M1022","mitre_tactics":"TA0005","mitre_techniques":"T1003,T1003.008","nist_sp_800-53":"AC-5,AC-6","pci_dss_v3.2.1":"7.1,7.1.1,7.1.2,7.1.3","pci_dss_v4.0":"1.3.1,7.1","soc_2":"CC5.2,CC6.1"},"rules":["f:/etc/group -> r:shadow:\\w*:\\d+:$"],"condition":"all","file":"/etc/group","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19208
sca.check.title: Ensure shadow group is empty.
sca.check.description: The shadow group allows system programs which require access the ability to read the /etc/shadow file. No users should be assigned to the shadow group.
sca.check.rationale: Any users assigned to the shadow group would be granted read access to the /etc/shadow file. If attackers can gain read access to the /etc/shadow file, they can easily run a password cracking program against the hashed passwords to break them. Other security information that is stored in the /etc/shadow file (such as expiration) could also be useful to subvert additional user accounts.
sca.check.remediation: Run the following command to remove all users from the shadow group # sed -ri 's/(^shadow:[^:]*:[^:]*:)([^:]+$)/\1/' /etc/group Change the primary group of any users with shadow as their primary group. # usermod -g <primary group> <user>.
sca.check.compliance.cis: 6.2.4
sca.check.compliance.cis_csc_v8: 3.3
sca.check.compliance.cis_csc_v7: 14.6
sca.check.compliance.cmmc_v2.0: AC.L1-3.1.1,AC.L1-3.1.2,AC.L2-3.1.3,AC.L2-3.1.5,MP.L2-3.8.2
sca.check.compliance.hipaa: 164.308(a)(3)(i),164.308(a)(3)(ii)(A),164.312(a)(1)
sca.check.compliance.iso_27001-2013: A.9.1.1
sca.check.compliance.mitre_mitigations: M1022
sca.check.compliance.mitre_tactics: TA0005
sca.check.compliance.mitre_techniques: T1003,T1003.008
sca.check.compliance.nist_sp_800-53: AC-5,AC-6
sca.check.compliance.pci_dss_v3.2.1: 7.1,7.1.1,7.1.2,7.1.3
sca.check.compliance.pci_dss_v4.0: 1.3.1,7.1
sca.check.compliance.soc_2: CC5.2,CC6.1
sca.check.file: ["/etc/group"]
sca.check.result: passed

** Alert 1706006478.808211: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:18 wazuh->sca
Rule: 19008 (level 3) -> 'CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Ensure root is the only UID 0 account.'
{"type":"check","id":1725662517,"policy":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","check":{"id":19209,"title":"Ensure root is the only UID 0 account.","description":"Any account with UID 0 has superuser privileges on the system.","rationale":"This access must be limited to only the default root account and only from the system console. Administrative access must be through an unprivileged account using an approved mechanism as noted in Item 5.6 Ensure access to the su command is restricted.","remediation":"Remove any users other than root with UID 0 or assign them a new UID if appropriate.","compliance":{"cis":"6.2.10","mitre_mitigations":"M1026","mitre_tactics":"TA0001","mitre_techniques":"T1548"},"rules":["not f:/etc/passwd -> !r:^\\s*\\t*# && !r:^root: && r:^\\w+:\\w+:0:"],"condition":"all","file":"/etc/passwd","result":"passed"}}
sca.type: check
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.check.id: 19209
sca.check.title: Ensure root is the only UID 0 account.
sca.check.description: Any account with UID 0 has superuser privileges on the system.
sca.check.rationale: This access must be limited to only the default root account and only from the system console. Administrative access must be through an unprivileged account using an approved mechanism as noted in Item 5.6 Ensure access to the su command is restricted.
sca.check.remediation: Remove any users other than root with UID 0 or assign them a new UID if appropriate.
sca.check.compliance.cis: 6.2.10
sca.check.compliance.mitre_mitigations: M1026
sca.check.compliance.mitre_tactics: TA0001
sca.check.compliance.mitre_techniques: T1548
sca.check.file: ["/etc/passwd"]
sca.check.result: passed

** Alert 1706006485.810199: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:25 wazuh->sca
Rule: 19004 (level 7) -> 'SCA summary: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Score less than 50% (42)'
{"type":"summary","scan_id":1725662517,"name":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","file":"cis_ubuntu20-04.yml","description":"This document provides prescriptive guidance for establishing a secure configuration posture for Ubuntu Linux 20.04 LTS.","references":"https://www.cisecurity.org/cis-benchmarks/","passed":56,"failed":75,"invalid":79,"total_checks":210,"score":42.748088836669922,"start_time":1706006459,"end_time":1706006473,"hash":"96dd8745a44e276e6080712dc520c974a73ab16e9f6703e06e77ef7f297d2762","hash_file":"37d4bc67c13eaf70f4d0650eafa236d5d56c2b82b6957ac2e3bb1f41ee167682","force_alert":"1"}
sca.type: summary
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.description: This document provides prescriptive guidance for establishing a secure configuration posture for Ubuntu Linux 20.04 LTS.
sca.policy_id: cis_ubuntu20-04
sca.passed: 56
sca.failed: 75
sca.invalid: 79
sca.total_checks: 210
sca.score: 42
sca.file: cis_ubuntu20-04.yml

** Alert 1706006496.811467: - sca,gdpr_IV_35.7.d,pci_dss_2.2,nist_800_53_CM.1,tsc_CC7.1,tsc_CC7.2,
2024 Jan 23 10:41:36 wazuh->sca
Rule: 19004 (level 7) -> 'SCA summary: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0: Score less than 50% (42)'
{"type":"summary","scan_id":1725662517,"name":"CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0","policy_id":"cis_ubuntu20-04","file":"cis_ubuntu20-04.yml","description":"This document provides prescriptive guidance for establishing a secure configuration posture for Ubuntu Linux 20.04 LTS.","references":"https://www.cisecurity.org/cis-benchmarks/","passed":56,"failed":75,"invalid":79,"total_checks":210,"score":42.748088836669922,"start_time":1706006459,"end_time":1706006473,"hash":"96dd8745a44e276e6080712dc520c974a73ab16e9f6703e06e77ef7f297d2762","hash_file":"37d4bc67c13eaf70f4d0650eafa236d5d56c2b82b6957ac2e3bb1f41ee167682","force_alert":"1","force_alert":"1"}
sca.type: summary
sca.scan_id: 1725662517
sca.policy: CIS Ubuntu Linux 20.04 LTS Benchmark v2.0.0
sca.description: This document provides prescriptive guidance for establishing a secure configuration posture for Ubuntu Linux 20.04 LTS.
sca.policy_id: cis_ubuntu20-04
sca.passed: 56
sca.failed: 75
sca.invalid: 79
sca.total_checks: 210
sca.score: 42
sca.file: cis_ubuntu20-04.yml

** Alert 1706006951.812753: - ossec,pci_dss_10.6.1,gpg13_10.1,gdpr_IV_35.7.d,hipaa_164.312.b,nist_800_53_AU.6,tsc_CC7.2,tsc_CC7.3,
2024 Jan 23 10:49:11 wazuh->wazuh-monitord
Rule: 502 (level 3) -> 'Wazuh server started.'
ossec: Manager started.

** Alert 1706011212.812999: - syslog,dpkg,pci_dss_10.6.1,gpg13_4.10,gdpr_IV_35.7.d,hipaa_164.312.b,nist_800_53_AU.6,tsc_CC7.2,tsc_CC7.3,tsc_CC8.1,
2024 Jan 23 12:00:12 wazuh->/var/log/dpkg.log
Rule: 2901 (level 3) -> 'New dpkg (Debian Package) requested to install.'
2024-01-23 12:00:11 install nano:amd64 <none> 4.8-1ubuntu1
dpkg_status: install
package: nano
arch: amd64
version: <none>

** Alert 1706011212.813389: - syslog,dpkg,config_changed,pci_dss_10.6.1,pci_dss_10.2.7,gpg13_4.10,gdpr_IV_35.7.d,hipaa_164.312.b,nist_800_53_AU.6,nist_800_53_AU.14,tsc_CC7.2,tsc_CC7.3,tsc_CC6.8,tsc_CC8.1,
2024 Jan 23 12:00:12 wazuh->/var/log/dpkg.log
Rule: 2904 (level 7) -> 'Dpkg (Debian Package) half configured.'
2024-01-23 12:00:11 status half-configured nano:amd64 4.8-1ubuntu1
dpkg_status: status half-configured
package: nano
arch: amd64
version: 4.8-1ubuntu1

** Alert 1706011212.813857: - syslog,dpkg,config_changed,pci_dss_10.6.1,pci_dss_10.2.7,gpg13_4.10,gdpr_IV_35.7.d,hipaa_164.312.b,nist_800_53_AU.6,nist_800_53_AU.14,tsc_CC7.2,tsc_CC7.3,tsc_CC6.8,tsc_CC8.1,
2024 Jan 23 12:00:12 wazuh->/var/log/dpkg.log
Rule: 2902 (level 7) -> 'New dpkg (Debian Package) installed.'
2024-01-23 12:00:11 status installed nano:amd64 4.8-1ubuntu1
dpkg_status: status installed
package: nano
arch: amd64
version: 4.8-1ubuntu1

** Alert 1706014387.814311: - ossec,pci_dss_10.6.1,gpg13_10.1,gdpr_IV_35.7.d,hipaa_164.312.b,nist_800_53_AU.6,tsc_CC7.2,tsc_CC7.3,
2024 Jan 23 12:53:07 wazuh->wazuh-monitord
Rule: 502 (level 3) -> 'Wazuh server started.'
ossec: Manager started.

